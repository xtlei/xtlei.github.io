<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SQL实践—Creat&amp;Insert&amp;Update&amp;Delete</title>
      <link href="/2020/06/17/SQL%E8%AF%AD%E5%8F%A5%E7%BB%83%E4%B9%A0%E4%B9%8B%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/"/>
      <url>/2020/06/17/SQL%E8%AF%AD%E5%8F%A5%E7%BB%83%E4%B9%A0%E4%B9%8B%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="Create-Database-and-Table"><a href="#Create-Database-and-Table" class="headerlink" title="Create Database and Table"></a>Create Database and Table</h4><ul><li>创建名称为数据库sch_id的数据库（其中ID为本人学号的后三位），并使用该数据库。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> [数据库sch_240];</span><br></pre></td></tr></table></figure><a id="more"></a>利用SQL语句定义6张基本表：D、T、S、C、TC、SC，并根据要求添加各类约束。</li></ul><ol><li>专业表：D(dno, dn)，dno表示专业代码，两个字符，主码；dn表示专业名称，可变长度最多30个字符，不能取空值，不能取重复值。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> D(</span><br><span class="line">dno <span class="built_in">char</span>(<span class="number">2</span>) PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">dn <span class="keyword">NCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">UNIQUE</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li>教师表：T(tno,tn,sex,age,prof,sal,comm,dno)，tno表示教师号，4个字符，主码；tn表示教师姓名，8个字符，不能为空值；sex表示性别，不能为空值，取值只能是“男”或“女”；age表示年龄，整型值，取值范围在20到70之间；prof表示职称，6个字符，取值只能是“教授”、“副教授”、“讲师”、“助教”其中之一。Sal表示基本工资，浮点型，值不能少于800；comm表示奖金，浮点型，值不能少于1200；dno表示教师专业代码，两个字符50，外码。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> T(</span><br><span class="line">tno <span class="built_in">CHAR</span>(<span class="number">4</span>) PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">tn <span class="built_in">CHAR</span>(<span class="number">8</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">sex <span class="built_in">CHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">CHECK</span>(sex = <span class="string">'男'</span> <span class="keyword">or</span> sex = <span class="string">'女'</span>),</span><br><span class="line">age <span class="built_in">INT</span> <span class="keyword">CHECK</span>(age&gt;=<span class="number">20</span> <span class="keyword">AND</span> age &lt;= <span class="number">70</span>),</span><br><span class="line">prof <span class="built_in">CHAR</span>(<span class="number">6</span>) <span class="keyword">CHECK</span>(prof = <span class="string">'教授'</span> <span class="keyword">OR</span> prof = <span class="string">'副教授'</span> <span class="keyword">OR</span> prof = <span class="string">'讲师'</span> <span class="keyword">OR</span> prof = <span class="string">'助教'</span>),</span><br><span class="line">Sal <span class="built_in">FLOAT</span>(<span class="number">20</span>) <span class="keyword">CHECK</span>(Sal &gt;= <span class="number">800</span>),</span><br><span class="line">comm <span class="built_in">FLOAT</span>(<span class="number">20</span>) <span class="keyword">CHECK</span>(comm &gt;= <span class="number">1200</span>),</span><br><span class="line">  dno <span class="built_in">CHAR</span>(<span class="number">2</span>) <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> <span class="keyword">REFERENCES</span> D(dno)</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li>学生表S(sno,sn,sex,age,dno)，sno表示学号，10个字符，主码；sn表示学生姓名，8个字符，不能为空值；sex表示性别，不能为空值，取值只能是“男”或“女”；age表示年龄，整型值，取值范围在15到40之间；dno表示学生的专业代码，两个字符50，外码。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> S(</span><br><span class="line">sno <span class="built_in">CHAR</span>(<span class="number">10</span>) PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">sn <span class="built_in">CHAR</span>(<span class="number">8</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">sex <span class="built_in">CHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">CHECK</span>(sex = <span class="string">'男'</span> <span class="keyword">OR</span> sex = <span class="string">'女'</span>),</span><br><span class="line">age <span class="built_in">INT</span> <span class="keyword">CHECK</span>((age&gt;=<span class="number">15</span>) <span class="keyword">AND</span> (age &lt;= <span class="number">40</span>)),</span><br><span class="line">dno <span class="built_in">CHAR</span>(<span class="number">2</span>) <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> <span class="keyword">REFERENCES</span> D(dno)</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li>课程表C(cno,cn,ct)，cno表示课程号，3个字符，主码；cn表示课程名，可变长度最多20个字符，不能取空值，不能取重复值；ct表示课时，整型值，取值范围在32至80之间。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> C(</span><br><span class="line">cno <span class="built_in">CHAR</span>(<span class="number">3</span>) PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">cn <span class="keyword">NCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">UNIQUE</span>,</span><br><span class="line">ct <span class="built_in">INT</span> <span class="keyword">CHECK</span>(ct&gt;=<span class="number">32</span> <span class="keyword">AND</span> ct &lt;= <span class="number">80</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li>选课关系表SC(sno,cno,score)，sno表示学号，10个字符，外码；cno表示课程号，3个字符，外码；score表示成绩，浮点型，取值在0到100之间。(sno,cno)为主码。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> SC(</span><br><span class="line">sno <span class="built_in">CHAR</span>(<span class="number">10</span>) <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> <span class="keyword">REFERENCES</span> S(sno),</span><br><span class="line">cno <span class="built_in">CHAR</span>(<span class="number">3</span>) <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> <span class="keyword">REFERENCES</span> C(cno) PRIMARY <span class="keyword">KEY</span>(sno,cno),</span><br><span class="line">score <span class="built_in">FLOAT</span>(<span class="number">3</span>) <span class="keyword">CHECK</span>(score&gt;=<span class="number">0</span> <span class="keyword">AND</span> score &lt;= <span class="number">100</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li>授课关系TC(tno,cno)，tno表示教师号，4个字符，外码；cno表示课程号，3个字符，外码；(tno，cno)为主码。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> TC(</span><br><span class="line">tno <span class="built_in">CHAR</span>(<span class="number">4</span>) <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> <span class="keyword">REFERENCES</span> T(tno),</span><br><span class="line">cno <span class="built_in">CHAR</span>(<span class="number">3</span>) <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> <span class="keyword">REFERENCES</span> C(cno) PRIMARY <span class="keyword">KEY</span>(tno,cno),</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li></ol><h4 id="创建测试库"><a href="#创建测试库" class="headerlink" title="创建测试库"></a>创建测试库</h4><ul><li>新建数据库和表及其插入部分表中数据代码如下：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> [sch_240];</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> D(</span><br><span class="line">dno <span class="built_in">char</span>(<span class="number">2</span>) PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">dn <span class="keyword">NCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">UNIQUE</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> T(</span><br><span class="line">tno <span class="built_in">CHAR</span>(<span class="number">4</span>) PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">tn <span class="built_in">CHAR</span>(<span class="number">8</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">sex <span class="built_in">CHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">CHECK</span>(sex = <span class="string">'男'</span> <span class="keyword">or</span> sex = <span class="string">'女'</span>),</span><br><span class="line">age <span class="built_in">INT</span> <span class="keyword">CHECK</span>(age&gt;=<span class="number">20</span> <span class="keyword">AND</span> age &lt;= <span class="number">70</span>),</span><br><span class="line">prof <span class="built_in">CHAR</span>(<span class="number">6</span>) <span class="keyword">CHECK</span>(prof = <span class="string">'教授'</span> <span class="keyword">OR</span> prof = <span class="string">'副教授'</span> <span class="keyword">OR</span> prof = <span class="string">'讲师'</span> <span class="keyword">OR</span> prof = <span class="string">'助教'</span>),</span><br><span class="line">Sal <span class="built_in">FLOAT</span>(<span class="number">20</span>) <span class="keyword">CHECK</span>(Sal &gt;= <span class="number">800</span>),</span><br><span class="line">comm <span class="built_in">FLOAT</span>(<span class="number">20</span>) <span class="keyword">CHECK</span>(comm &gt;= <span class="number">1200</span>),</span><br><span class="line">    dno <span class="built_in">CHAR</span>(<span class="number">2</span>) <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> <span class="keyword">REFERENCES</span> D(dno)</span><br><span class="line">)</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> S(</span><br><span class="line">sno <span class="built_in">CHAR</span>(<span class="number">10</span>) PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">sn <span class="built_in">CHAR</span>(<span class="number">8</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">sex <span class="built_in">CHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">CHECK</span>(sex = <span class="string">'男'</span> <span class="keyword">OR</span> sex = <span class="string">'女'</span>),</span><br><span class="line">age <span class="built_in">INT</span> <span class="keyword">CHECK</span>((age&gt;=<span class="number">15</span>) <span class="keyword">AND</span> (age &lt;= <span class="number">40</span>)),</span><br><span class="line">dno <span class="built_in">CHAR</span>(<span class="number">2</span>) <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> <span class="keyword">REFERENCES</span> D(dno)</span><br><span class="line">)</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> C(</span><br><span class="line">cno <span class="built_in">CHAR</span>(<span class="number">3</span>) PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">cn <span class="keyword">NCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">UNIQUE</span>,</span><br><span class="line">ct <span class="built_in">INT</span> <span class="keyword">CHECK</span>(ct&gt;=<span class="number">32</span> <span class="keyword">AND</span> ct &lt;= <span class="number">80</span>)</span><br><span class="line">)</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> SC(</span><br><span class="line">sno <span class="built_in">CHAR</span>(<span class="number">10</span>) <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> <span class="keyword">REFERENCES</span> S(sno),</span><br><span class="line">cno <span class="built_in">CHAR</span>(<span class="number">3</span>) <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> <span class="keyword">REFERENCES</span> C(cno) PRIMARY <span class="keyword">KEY</span>(sno,cno),</span><br><span class="line">score <span class="built_in">FLOAT</span>(<span class="number">3</span>) <span class="keyword">CHECK</span>(score&gt;=<span class="number">0</span> <span class="keyword">AND</span> score &lt;= <span class="number">100</span>)</span><br><span class="line">)</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> TC(</span><br><span class="line">tno <span class="built_in">CHAR</span>(<span class="number">4</span>) <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> <span class="keyword">REFERENCES</span> T(tno),</span><br><span class="line">cno <span class="built_in">CHAR</span>(<span class="number">3</span>) <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> <span class="keyword">REFERENCES</span> C(cno) PRIMARY <span class="keyword">KEY</span>(tno,cno),</span><br><span class="line">)</span><br><span class="line"><span class="keyword">INSERT</span> D(dno,dn) <span class="keyword">VALUES</span>(<span class="string">'d1'</span>,<span class="string">'计算机系'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> D(dno,dn) <span class="keyword">VALUES</span>(<span class="string">'d2'</span>,<span class="string">'信息'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> D(dno,dn) <span class="keyword">VALUES</span>(<span class="string">'d3'</span>,<span class="string">'通信'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> D(dno,dn) <span class="keyword">VALUES</span>(<span class="string">'d4'</span>,<span class="string">'数理'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> T(tno,tn,sex,age,prof,sal,comm,dno) <span class="keyword">VALUES</span>(<span class="string">'t1'</span>,<span class="string">'张三'</span>,<span class="string">'女'</span>,<span class="number">20</span>,<span class="string">'副教授'</span>,<span class="number">800</span>,<span class="number">1200</span>,<span class="string">'d1'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> T(tno,tn,sex,age,prof,sal,comm,dno) <span class="keyword">VALUES</span>(<span class="string">'t2'</span>,<span class="string">'安厚星'</span>,<span class="string">'男'</span>,<span class="number">70</span>,<span class="string">'教授'</span>,<span class="number">1000</span>,<span class="number">1500</span>,<span class="string">'d2'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> T(tno,tn,sex,age,prof,sal,comm,dno) <span class="keyword">VALUES</span>(<span class="string">'t3'</span>,<span class="string">'王五'</span>,<span class="string">'男'</span>,<span class="number">50</span>,<span class="string">'讲师'</span>,<span class="number">800.2</span>,<span class="number">1200.3</span>,<span class="string">'d3'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> T(tno,tn,sex,age,prof,sal,comm,dno) <span class="keyword">VALUES</span>(<span class="string">'t4'</span>,<span class="string">'李四'</span>,<span class="string">'女'</span>,<span class="number">21</span>,<span class="string">'助教'</span>,<span class="number">8000.11</span>,<span class="number">12000.22</span>,<span class="string">'d4'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> T(tno,tn,sex,age,prof,sal,comm,dno) <span class="keyword">VALUES</span>(<span class="string">'t5'</span>,<span class="string">'王六'</span>,<span class="string">'男'</span>,<span class="number">50</span>,<span class="string">'讲师'</span>,<span class="number">800.2</span>,<span class="number">1200.3</span>,<span class="string">'d3'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> T(tno,tn,sex,age,prof,sal,comm,dno) <span class="keyword">VALUES</span>(<span class="string">'t6'</span>,<span class="string">'赵琦'</span>,<span class="string">'男'</span>,<span class="number">50</span>,<span class="string">'讲师'</span>,<span class="number">800.2</span>,<span class="number">1200.3</span>,<span class="string">'d2'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> T(tno,tn,sex,age,prof,sal,comm,dno) <span class="keyword">VALUES</span>(<span class="string">'t7'</span>,<span class="string">'孙凯'</span>,<span class="string">'男'</span>,<span class="number">50</span>,<span class="string">'讲师'</span>,<span class="number">800.2</span>,<span class="number">1200.3</span>,<span class="string">'d1'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> S <span class="keyword">VALUES</span>(<span class="string">'s1'</span>,<span class="string">'高令平'</span>,<span class="string">'女'</span>,<span class="number">40</span>,<span class="string">'d1'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> S <span class="keyword">VALUES</span>(<span class="string">'s2'</span>,<span class="string">'张明喜'</span>,<span class="string">'男'</span>,<span class="number">15</span>,<span class="string">'d2'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> S <span class="keyword">VALUES</span>(<span class="string">'s3'</span>,<span class="string">'李福鑫'</span>,<span class="string">'男'</span>,<span class="number">26</span>,<span class="string">'d3'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> S <span class="keyword">VALUES</span>(<span class="string">'s4'</span>,<span class="string">'乔杉扮'</span>,<span class="string">'男'</span>,<span class="number">26</span>,<span class="string">'d4'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> S <span class="keyword">VALUES</span>(<span class="string">'s5'</span>,<span class="string">'李金成'</span>,<span class="string">'男'</span>,<span class="number">26</span>,<span class="string">'d3'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> S <span class="keyword">VALUES</span>(<span class="string">'s6'</span>,<span class="string">'赵贤帅'</span>,<span class="string">'女'</span>,<span class="number">26</span>,<span class="string">'d2'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> S <span class="keyword">VALUES</span>(<span class="string">'s7'</span>,<span class="string">'高德晨'</span>,<span class="string">'男'</span>,<span class="number">26</span>,<span class="string">'d1'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> S <span class="keyword">VALUES</span>(<span class="string">'s8'</span>,<span class="string">'凡凡'</span>,<span class="string">'女'</span>,<span class="number">26</span>,<span class="string">'d2'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> C(cno,cn,ct) <span class="keyword">VALUES</span>(<span class="string">'c1'</span>,<span class="string">'数据库'</span>,<span class="number">32</span>);</span><br><span class="line"><span class="keyword">INSERT</span> C(cno,cn,ct) <span class="keyword">VALUES</span>(<span class="string">'c2'</span>,<span class="string">'大物'</span>,<span class="number">80</span>);</span><br><span class="line"><span class="keyword">INSERT</span> C(cno,cn,ct) <span class="keyword">VALUES</span>(<span class="string">'c3'</span>,<span class="string">'web'</span>,<span class="number">40</span>);</span><br><span class="line"><span class="keyword">INSERT</span> C(cno,cn,ct) <span class="keyword">VALUES</span>(<span class="string">'c4'</span>,<span class="string">'英语'</span>,<span class="number">40</span>);</span><br><span class="line"><span class="keyword">INSERT</span> C(cno,cn,ct) <span class="keyword">VALUES</span>(<span class="string">'c5'</span>,<span class="string">'语文'</span>,<span class="number">78</span>);</span><br><span class="line"><span class="keyword">INSERT</span> C(cno,cn,ct) <span class="keyword">VALUES</span>(<span class="string">'c6'</span>,<span class="string">'化学'</span>,<span class="number">40</span>);</span><br><span class="line"><span class="keyword">INSERT</span> C(cno,cn,ct) <span class="keyword">VALUES</span>(<span class="string">'c7'</span>,<span class="string">'高数'</span>,<span class="number">50</span>);</span><br><span class="line"><span class="keyword">INSERT</span> C(cno,cn,ct) <span class="keyword">VALUES</span>(<span class="string">'c8'</span>,<span class="string">'生物'</span>,<span class="number">40</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> SC(sno,cno,score) <span class="keyword">VALUES</span>(<span class="string">'s1'</span>,<span class="string">'c1'</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">INSERT</span> SC(sno,cno,score) <span class="keyword">VALUES</span>(<span class="string">'s2'</span>,<span class="string">'c2'</span>,<span class="number">100</span>);</span><br><span class="line"><span class="keyword">INSERT</span> SC(sno,cno,score) <span class="keyword">VALUES</span>(<span class="string">'s3'</span>,<span class="string">'c3'</span>,<span class="number">50.4</span>);</span><br><span class="line"><span class="keyword">INSERT</span> SC <span class="keyword">VALUES</span>(<span class="string">'s4'</span>,<span class="string">'c4'</span>,<span class="number">111</span>);</span><br><span class="line"><span class="keyword">INSERT</span> SC <span class="keyword">VALUES</span>(<span class="string">'s5'</span>,<span class="string">'c5'</span>,<span class="number">60</span>);</span><br><span class="line"><span class="keyword">INSERT</span> SC <span class="keyword">VALUES</span>(<span class="string">'s6'</span>,<span class="string">'c6'</span>,<span class="number">66</span>);</span><br><span class="line"><span class="keyword">INSERT</span> SC(sno,cno,score) <span class="keyword">VALUES</span>(<span class="string">'s7'</span>,<span class="string">'c7'</span>,<span class="number">50.4</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> TC(tno,cno) <span class="keyword">VALUES</span>(<span class="string">'t1'</span>,<span class="string">'c1'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> TC(tno,cno) <span class="keyword">VALUES</span>(<span class="string">'t2'</span>,<span class="string">'c2'</span>);</span><br><span class="line"><span class="keyword">insert</span> TC <span class="keyword">values</span>(<span class="string">'t3'</span>,<span class="string">'c3'</span>);</span><br><span class="line"><span class="keyword">insert</span> TC <span class="keyword">values</span>(<span class="string">'t4'</span>,<span class="string">'c4'</span>);</span><br></pre></td></tr></table></figure></li></ul><h4 id="Insert-amp-Update-amp-Delete"><a href="#Insert-amp-Update-amp-Delete" class="headerlink" title="Insert &amp; Update &amp; Delete"></a>Insert &amp; Update &amp; Delete</h4><ol><li>向数据库的每张用户表（除SC表）中至少添加3条元组，其中S表中插入2位计算机专业的同学，一位非计算机专业的同学。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> S(sno,sn,dno,sex) <span class="keyword">values</span>(<span class="string">'s20'</span>,<span class="string">'王志刚'</span>,<span class="string">'d1'</span>,<span class="string">'男'</span>);</span><br><span class="line"><span class="keyword">insert</span> S(sno,sn,dno,sex) <span class="keyword">values</span>(<span class="string">'s21'</span>,<span class="string">'王志'</span>,<span class="string">'d3'</span>,<span class="string">'女'</span>);</span><br><span class="line"><span class="keyword">insert</span> S(sno,sn,dno,sex) <span class="keyword">values</span>(<span class="string">'s22'</span>,<span class="string">'张明欣'</span>,<span class="string">'d1'</span>,<span class="string">'男'</span>);</span><br></pre></td></tr></table></figure></li><li>向SC表中插入选课记录，为计算机专业的同学选上全部课程，成绩取值为空值。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> SC(sno,cno) <span class="keyword">values</span>(<span class="string">'s20'</span>,<span class="string">'c1'</span>);</span><br><span class="line"><span class="keyword">insert</span> SC(sno,cno) <span class="keyword">values</span>(<span class="string">'s20'</span>,<span class="string">'c2'</span>);</span><br><span class="line"><span class="keyword">insert</span> SC(sno,cno) <span class="keyword">values</span>(<span class="string">'s20'</span>,<span class="string">'c5'</span>);</span><br><span class="line"><span class="keyword">insert</span> SC(sno,cno) <span class="keyword">values</span>(<span class="string">'s20'</span>,<span class="string">'001'</span>);</span><br><span class="line"><span class="keyword">insert</span> SC(sno,cno) <span class="keyword">values</span>(<span class="string">'s22'</span>,<span class="string">'c1'</span>);</span><br><span class="line"><span class="keyword">insert</span> SC(sno,cno) <span class="keyword">values</span>(<span class="string">'s22'</span>,<span class="string">'c2'</span>);</span><br><span class="line"><span class="keyword">insert</span> SC(sno,cno) <span class="keyword">values</span>(<span class="string">'s22'</span>,<span class="string">'c5'</span>);</span><br><span class="line"><span class="keyword">insert</span> SC(sno,cno) <span class="keyword">values</span>(<span class="string">'s22'</span>,<span class="string">'001'</span>);</span><br></pre></td></tr></table></figure></li><li>将课时大于等于80学时的课程全部改为72学时。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> C <span class="keyword">set</span> ct=<span class="number">72</span> <span class="keyword">where</span> ct&gt;=<span class="number">80</span>;</span><br></pre></td></tr></table></figure></li><li>删除成绩为空值的选课记录。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> SC <span class="keyword">where</span> score <span class="keyword">is</span> <span class="literal">null</span>;</span><br></pre></td></tr></table></figure></li><li>删除姓名为刘伟的老师的授课记录。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> TC <span class="keyword">where</span> tno <span class="keyword">in</span>(<span class="keyword">select</span> tno <span class="keyword">from</span> T <span class="keyword">where</span> tn=<span class="string">'刘伟'</span>);</span><br></pre></td></tr></table></figure></li><li>调整岗位津贴，教授岗贴增长10%，副教授岗贴增长20%，讲师岗贴增长30%。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> T <span class="keyword">set</span> comm=comm*<span class="keyword">CASE</span> prof </span><br><span class="line"><span class="keyword">when</span> <span class="string">'教授'</span> <span class="keyword">then</span> <span class="number">1.1</span></span><br><span class="line"><span class="keyword">when</span> <span class="string">'副教授'</span> <span class="keyword">then</span> <span class="number">1.2</span></span><br><span class="line"><span class="keyword">when</span> <span class="string">'讲师'</span> <span class="keyword">then</span> <span class="number">1.3</span></span><br><span class="line"><span class="keyword">else</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li>将基本工资低于平均基本工资的教师的工资增长10%。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> T <span class="keyword">set</span> Sal = Sal*<span class="number">1.1</span> <span class="keyword">where</span> Sal &lt; (<span class="keyword">select</span> <span class="keyword">AVG</span>(Sal)<span class="keyword">from</span> T);</span><br></pre></td></tr></table></figure></li><li>将基本工资低于同职称教师基本工资的教师工资增长10%。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> T <span class="keyword">set</span> Sal=Sal*<span class="number">1.1</span> <span class="keyword">where</span> Sal &lt; (<span class="keyword">select</span> <span class="keyword">AVG</span>(Sal) <span class="keyword">from</span> T t1 <span class="keyword">where</span> t1.prof=T.prof);</span><br></pre></td></tr></table></figure></li><li>将有授课记录的老师的工资提高百分之十。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> T <span class="keyword">set</span> Sal=Sal*<span class="number">1.1</span> <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> tno <span class="keyword">from</span> TC <span class="keyword">where</span> TC.tno = T.tno);</span><br></pre></td></tr></table></figure></li><li>修改S表中一位已经选过课的学生的学号（例如：学号从11223344改为111）。<br>①. 先将SC表中sno原有的外键约束删除，<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--alter alter table SC drop constraint 外键约束名</span></span><br><span class="line"><span class="keyword">Alter</span> <span class="keyword">table</span> SC <span class="keyword">drop</span> <span class="keyword">constraint</span> FK__SC__sno__1FCDBCEB;</span><br></pre></td></tr></table></figure>然后在重新使用alter语句加入外键，并且设置级联。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Alter</span> <span class="keyword">TABLE</span> SC <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> [FK_sc] <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (sno) <span class="keyword">REFERENCES</span> S(sno) <span class="keyword">ON</span> <span class="keyword">Update</span> <span class="keyword">CASCADE</span>;</span><br></pre></td></tr></table></figure>②. 使用数据库的增删改查实现数据的修改。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">into</span> <span class="comment">#S_1 from S where sno='11223344';</span></span><br><span class="line"><span class="keyword">update</span> <span class="comment">#S_1 set sno='111' where sno='11223344';</span></span><br><span class="line"><span class="keyword">insert</span> S <span class="keyword">select</span> *<span class="keyword">from</span> <span class="comment">#S_1;</span></span><br><span class="line"><span class="keyword">update</span> SC <span class="keyword">set</span> sno=<span class="string">'111'</span> <span class="keyword">where</span> sno=<span class="string">'11223344'</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> S <span class="keyword">where</span> sno=<span class="string">'11223344'</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><ol><li>查询学号s5的同学的姓名和所在系，将查询结果的列名显示为中文。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sn 姓名,dno 所在系 <span class="keyword">from</span> S <span class="keyword">where</span> sno=<span class="string">'s5'</span>;</span><br></pre></td></tr></table></figure></li><li>查询教过课程号为C2或C5的课程的教师的编号（写两个查询语句完成同样的功能）<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> tno <span class="keyword">from</span> TC <span class="keyword">where</span> cno=<span class="string">'C2'</span> <span class="keyword">or</span> cno=<span class="string">'C5'</span>;</span><br><span class="line"><span class="keyword">select</span> tno <span class="keyword">from</span> TC <span class="keyword">where</span> cno <span class="keyword">in</span>(<span class="string">'C2'</span>,<span class="string">'C5'</span>);</span><br></pre></td></tr></table></figure></li><li>查询学号为S5的同学所学课程的平均成绩。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">AVG</span>(score) 平均成绩 <span class="keyword">from</span> SC <span class="keyword">where</span> sno=<span class="string">'s5'</span>;</span><br></pre></td></tr></table></figure></li><li>查询选过课程号为C1的课程的人数。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">COUNT</span>(*) <span class="keyword">from</span> SC <span class="keyword">where</span> cno=<span class="string">'C1'</span>;</span><br></pre></td></tr></table></figure></li><li>查询计算机系学生的最大年龄，显示系名和最大年龄（查询结果的每列都要有列名且为中文）。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> dn 系名,<span class="keyword">MAX</span>(age) 最大年龄 <span class="keyword">from</span> S <span class="keyword">join</span> D <span class="keyword">on</span> S.dno=D.dno <span class="keyword">where</span> dn=<span class="string">'计算机系'</span> <span class="keyword">Group</span> <span class="keyword">by</span> dn;</span><br></pre></td></tr></table></figure></li><li>查询所有教过课的老师的人数（教过多门课的同一位老师只计数1次）。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(<span class="keyword">DISTINCT</span> tno) <span class="keyword">as</span> 教过课的教师人数 <span class="keyword">from</span> TC <span class="keyword">where</span> tno <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span>;</span><br></pre></td></tr></table></figure></li><li>查询信息系年龄在30到39岁之间（包括30和39）的男老师人数。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">COUNT</span>(*) <span class="keyword">from</span> T <span class="keyword">join</span> D <span class="keyword">on</span> T.dno=D.dno <span class="keyword">where</span> dn=<span class="string">'信息系'</span> <span class="keyword">and</span> age&gt;=<span class="number">30</span> <span class="keyword">and</span> age&lt;=<span class="number">39</span> <span class="keyword">and</span> sex=<span class="string">'男'</span>;</span><br></pre></td></tr></table></figure></li><li>查询选过课的各位学生的学号，选课门数和平均成绩。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sno,<span class="keyword">count</span>(cno),<span class="keyword">AVG</span>(score) <span class="keyword">from</span> SC <span class="keyword">where</span> cno <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">group</span> <span class="keyword">by</span> sno;</span><br></pre></td></tr></table></figure></li><li>查询各系的名称和所属教师人数（查询结果的每列都要有列名且为中文）。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> dn 系名,<span class="keyword">COUNT</span>(tno) 教师人数 <span class="keyword">from</span> T <span class="keyword">join</span> D <span class="keyword">on</span> D.dno=T.dno <span class="keyword">group</span> <span class="keyword">by</span> dn;</span><br></pre></td></tr></table></figure></li><li>查询选课表中各门课的课程号，最高分，最低分和平均分（查询结果的每列都要有列名且为中文）。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> SC.cno 课程号,<span class="keyword">MAX</span>(score) 最高分,<span class="keyword">MIN</span>(score) 最低分,<span class="keyword">AVG</span>(score) 平均分 <span class="keyword">from</span> SC <span class="keyword">join</span> C <span class="keyword">on</span> SC.cno=C.cno <span class="keyword">group</span> <span class="keyword">by</span> SC.cno;</span><br></pre></td></tr></table></figure></li><li>查询计算机系女生的学生信息，按年龄的降序、学号的升序显示学生学号，姓名，年龄。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> S.sno 学号,sn 姓名,age 年龄, S.dno <span class="keyword">from</span> S <span class="keyword">join</span> D <span class="keyword">on</span> D.dno=S.dno <span class="keyword">where</span> dn=<span class="string">'计算机系'</span><span class="keyword">and</span> sex=<span class="string">'女'</span> <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">DESC</span>,S.sno <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure></li><li>查询各职称的老师的职称，最高工资，最低工资，最高和最低工资间的差额，平均工资，按平均工资的降序显示上述信息（查询结果的每列都要有列名且为中文）。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> prof 职称,<span class="keyword">MAX</span>(comm) 最高工资,<span class="keyword">MIN</span>(comm) 最低工资,<span class="keyword">MAX</span>(comm)-<span class="keyword">MIN</span>(comm) 差额,<span class="keyword">AVG</span>(comm) 平均工资 <span class="keyword">from</span> T <span class="keyword">group</span> <span class="keyword">by</span> prof <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">AVG</span>(comm) <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure></li><li>查询选修了C1和C2两门课的学生的学号。（使用连接和嵌套两种方式完成查询）。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> S1.sno <span class="keyword">from</span> SC S1 <span class="keyword">join</span> SC S2 <span class="keyword">on</span> S1.sno=S2.sno <span class="keyword">where</span> S2.cno=<span class="string">'C1'</span> <span class="keyword">and</span> S1.cno=<span class="string">'C2'</span>;</span><br><span class="line"><span class="keyword">select</span> sno <span class="keyword">from</span> SC <span class="keyword">where</span> cno =<span class="string">'C1'</span> <span class="keyword">and</span> sno <span class="keyword">in</span>(<span class="keyword">select</span> sno <span class="keyword">from</span> SC <span class="keyword">where</span> cno=<span class="string">'C2'</span>);</span><br></pre></td></tr></table></figure></li><li>查询计算机系所有学生选修信息，显示学生学号，课程号和成绩。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> S.sno,cno,score <span class="keyword">from</span> S <span class="keyword">join</span> SC <span class="keyword">on</span> S.sno=SC.sno <span class="keyword">join</span> D <span class="keyword">on</span> S.dno=D.dno <span class="keyword">where</span> dn=<span class="string">'计算机系'</span>;</span><br></pre></td></tr></table></figure></li><li>查询所有教过课程号为C1的课程的老师姓名，职称，系别。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> tn,prof,dn <span class="keyword">from</span> T <span class="keyword">join</span> TC <span class="keyword">on</span> T.tno=TC.tno <span class="keyword">join</span> D <span class="keyword">on</span> D.dno=T.dno <span class="keyword">where</span> cno=<span class="string">'C1'</span>;</span><br></pre></td></tr></table></figure></li><li>查询具有教授和副教授职称的老师所教课程的编号和名称。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> C.cno,cn <span class="keyword">from</span> C <span class="keyword">join</span> TC <span class="keyword">on</span> C.cno=TC.cno <span class="keyword">join</span> T <span class="keyword">on</span> T.tno=TC.tno <span class="keyword">where</span> prof <span class="keyword">in</span>(<span class="string">'教授'</span>,<span class="string">'副教授'</span>);</span><br></pre></td></tr></table></figure></li><li>查询孙珊同学的成绩单，显示课程号，课程名和成绩。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> C.cno,cn,score <span class="keyword">from</span> C <span class="keyword">join</span> SC <span class="keyword">on</span> C.cno=SC.cno <span class="keyword">join</span> S <span class="keyword">on</span> S.sno=SC.sno <span class="keyword">where</span> sn=<span class="string">'孙珊'</span>;</span><br></pre></td></tr></table></figure></li><li>查询选修了C1但没有选修C2课程的学生的学号。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sno <span class="keyword">from</span> SC <span class="keyword">where</span> cno=<span class="string">'C1'</span> <span class="keyword">and</span> sno <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> sno <span class="keyword">from</span> SC <span class="keyword">where</span> cno=<span class="string">'C2'</span>);</span><br></pre></td></tr></table></figure></li><li>查询计算机系学生选修过的课程编号和名称。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">Distinct</span> C.cno,cn <span class="keyword">from</span> SC <span class="keyword">join</span> S <span class="keyword">on</span> S.sno=SC.sno <span class="keyword">join</span> C <span class="keyword">on</span> C.cno=SC.cno <span class="keyword">join</span> D <span class="keyword">on</span> D.dno=S.dno <span class="keyword">where</span> dn=<span class="string">'计算机系'</span>;</span><br></pre></td></tr></table></figure></li><li>查询所有没有选修过任何课程的学生的学号和姓名。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> S.sno,sn,dno <span class="keyword">from</span> S <span class="keyword">left</span> <span class="keyword">join</span> SC <span class="keyword">on</span> S.sno=SC.sno <span class="keyword">where</span> cno <span class="keyword">is</span> <span class="literal">null</span>;</span><br></pre></td></tr></table></figure></li><li>查询教授课程门数超过3门的老师的编号和姓名。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> T.tno,tn <span class="keyword">from</span> TC <span class="keyword">join</span> T <span class="keyword">on</span> T.tno=TC.tno <span class="keyword">group</span> <span class="keyword">by</span> T.tno,tn <span class="keyword">having</span> <span class="keyword">COUNT</span>(cno)&gt;<span class="number">3</span>;</span><br></pre></td></tr></table></figure></li><li>查询选课表中出现过的不及格情况的学生编号，学生姓名及其不及格门数。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> S.sno 学生编号,sn 姓名,<span class="keyword">COUNT</span>(cno) 不及格门数 <span class="keyword">from</span> SC <span class="keyword">join</span> S <span class="keyword">on</span> S.sno=SC.sno <span class="keyword">where</span> score&lt;<span class="number">60</span> <span class="keyword">group</span> <span class="keyword">by</span> sn,S.sno;</span><br></pre></td></tr></table></figure></li></ol></font></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Database </category>
          
          <category> SQL Server </category>
          
          <category> Basis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> Create </tag>
            
            <tag> Insert </tag>
            
            <tag> Update </tag>
            
            <tag> Delete </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL实践—Index&amp;View&amp;Proc&amp;Trigger</title>
      <link href="/2020/06/17/SQL%E8%AF%AD%E5%8F%A5%E7%BB%83%E4%B9%A0%E4%B9%8B%E7%B4%A2%E5%BC%95%E8%A7%86%E5%9B%BE%E5%AD%98%E5%82%A8%E8%A7%A6%E5%8F%91%E5%99%A8/"/>
      <url>/2020/06/17/SQL%E8%AF%AD%E5%8F%A5%E7%BB%83%E4%B9%A0%E4%B9%8B%E7%B4%A2%E5%BC%95%E8%A7%86%E5%9B%BE%E5%AD%98%E5%82%A8%E8%A7%A6%E5%8F%91%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="Index-amp-View"><a href="#Index-amp-View" class="headerlink" title="Index &amp; View"></a>Index &amp; View</h4><ol><li>定义视图V_TCS（定义时不加with check option），存放全部计算机系老师的信息。<a id="more"></a><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> V_TCS </span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line"><span class="keyword">select</span> T.* <span class="keyword">from</span> T <span class="keyword">join</span> D <span class="keyword">on</span> T.dno=D.dno <span class="keyword">where</span> D.dn=<span class="string">'计算机系'</span>;</span><br><span class="line"><span class="comment">-- 视图查询语句：</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> V_TCS;</span><br></pre></td></tr></table></figure></li><li>定义视图V_sal，存放全体教师的教师号，姓名，教师酬金（工资+岗位津贴）和职称信息。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">go</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> V_sal</span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line"><span class="keyword">select</span> tno 教师号,tn 教师姓名,Sal+comm 教师酬金,prof 职称信息 <span class="keyword">from</span> T;</span><br><span class="line">go</span><br></pre></td></tr></table></figure></li><li>向V_TCS中插入一条计算机专业教师的新记录，并查询V_TCS视图的全部记录。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> V_TCS <span class="keyword">values</span>(<span class="string">'t8'</span>,<span class="string">'周杰'</span>,<span class="string">'男'</span>,<span class="string">'34'</span>,<span class="string">'教授'</span>,<span class="number">1000</span>,<span class="number">2000</span>,<span class="string">'d1'</span>);</span><br></pre></td></tr></table></figure></li><li>向V_TCS中插入一条信息专业教师的新记录，并查询V_TCS视图的全部记录。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> V_TCS <span class="keyword">values</span>(<span class="string">'t9'</span>,<span class="string">'奕迅'</span>,<span class="string">'男'</span>,<span class="string">'40'</span>,<span class="string">'讲师'</span>,<span class="number">1000</span>,<span class="number">2000</span>,<span class="string">'d3'</span>);</span><br></pre></td></tr></table></figure></li><li>修改V_TCS中的记录，使得编号为t22的教师的职称为副教授。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> V_TCS <span class="keyword">set</span> prof=<span class="string">'副教授'</span> <span class="keyword">where</span> tno=<span class="string">'t22'</span>;</span><br></pre></td></tr></table></figure></li><li>定义视图V_TCS_ck（定义时加with check option），存放全部计算机系老师的信息，对比该视图与V_TCS在进行数据更新时的差别。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">go</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> V_TCS_ck</span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line"><span class="keyword">select</span> T.* <span class="keyword">from</span> T <span class="keyword">join</span> D <span class="keyword">on</span> T.dno=D.dno <span class="keyword">where</span> D.dn=<span class="string">'计算机系'</span></span><br><span class="line"><span class="keyword">with</span> <span class="keyword">check</span> <span class="keyword">option</span>;</span><br><span class="line">go</span><br></pre></td></tr></table></figure></li></ol><ul><li>在插入时的对比<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- V_TCS_ck：无法插入别的系的老师信息</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> V_TCS_ck <span class="keyword">values</span>(<span class="string">'t10'</span>,<span class="string">'奕迅'</span>,<span class="string">'男'</span>,<span class="string">'40'</span>,<span class="string">'讲师'</span>,<span class="number">1000</span>,<span class="number">2000</span>,<span class="string">'d3'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- V_TCS：可以插入其他系的老师信息，但是查询不出来其他系的老师信息</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> V_TCS <span class="keyword">values</span>(<span class="string">'t12'</span>,<span class="string">'奕迅'</span>,<span class="string">'男'</span>,<span class="string">'40'</span>,<span class="string">'讲师'</span>,<span class="number">1000</span>,<span class="number">2000</span>,<span class="string">'d3'</span>);</span><br></pre></td></tr></table></figure></li><li>在更新时的对比<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- V_TCS_ck：无法将老师信息更新为其他系</span></span><br><span class="line"><span class="keyword">update</span> V_TCS_ck <span class="keyword">set</span> dno=<span class="string">'d3'</span> <span class="keyword">where</span> tno=<span class="string">'t8'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- V_TCS：可以更新为其他系，但是查询视图时查不出该条信息</span></span><br><span class="line"><span class="keyword">update</span> V_TCS <span class="keyword">set</span> dno=<span class="string">'d3'</span> <span class="keyword">where</span> tno=<span class="string">'t8'</span>;</span><br></pre></td></tr></table></figure></li></ul><ol start="7"><li>在课程C表的课程名属性上按降序创建唯一索引I_cn。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> <span class="keyword">index</span> I_cn <span class="keyword">on</span> C(cn <span class="keyword">DESC</span>);</span><br></pre></td></tr></table></figure></li><li>删除C表上的索引I_cn。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">index</span> C.I_cn;</span><br></pre></td></tr></table></figure></li><li>定义SC_C1视图，存放所有选修了C1课程的学生的学号和姓名。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">go</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> SC_C1</span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line"><span class="keyword">select</span> S.sno,sn <span class="keyword">from</span> S <span class="keyword">join</span> SC <span class="keyword">on</span> S.sno=SC.sno <span class="keyword">where</span> SC.cno=<span class="string">'c1'</span>;</span><br><span class="line">go</span><br></pre></td></tr></table></figure></li></ol><ul><li>插入时的受限情况：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 无法插入任何新的信息</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> SC_C1 <span class="keyword">values</span>(<span class="string">'s33'</span>,<span class="string">'毕福剑'</span>);</span><br><span class="line"><span class="comment">--（缺少原表不能为空的值，以向原表插入的信息格式插入会报错提供值得数目与表定义不匹配）</span></span><br><span class="line"><span class="comment">--不能将值NULL插入列'sex'，表'sch_240.dbo.S'；列不允许有Null值。INSERT失败。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> SC_C1 <span class="keyword">values</span>(<span class="string">'s34'</span>,<span class="string">'毕福剑'</span>,<span class="string">'男'</span>,<span class="number">23</span>,<span class="string">'d1'</span>,<span class="string">'1'</span>);</span><br><span class="line"><span class="comment">--列名或所提供值的数目与表定义不匹配。</span></span><br></pre></td></tr></table></figure></li><li>更新时的受限情况：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> SC_C1 <span class="keyword">set</span> sno=<span class="string">'s9'</span> <span class="keyword">where</span> sno=<span class="string">'s1'</span>;</span><br><span class="line"><span class="keyword">update</span> SC_C1 <span class="keyword">set</span> sn=<span class="string">'毕福'</span> <span class="keyword">where</span> sno=<span class="string">'s1'</span>;</span><br><span class="line"><span class="comment">--（该视图来自选课表，其中sno是选课表参考学生表的外键，有外键约束，直接更新受限）</span></span><br><span class="line"><span class="keyword">UPDATE</span>语句与<span class="keyword">REFERENCE</span>约束<span class="string">"FK__SC__sno__4BAC3F29"</span>冲突。该冲突发生于数据库<span class="string">"sch_240"</span>，表<span class="string">"dbo.SC"</span>,<span class="keyword">column</span> <span class="string">'sno'</span>。</span><br></pre></td></tr></table></figure></li><li>删除时的受限情况：<br>视图或函数&#39;SC_C1&#39;不可更新，因为修改会影响多个基表。</li></ul><ol start="10"><li>定义一个C_score视图，存放各门课课程编号以及成绩的最大值。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">go</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> C_score (课程号,课程最高分)</span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line"><span class="keyword">select</span> cno,<span class="keyword">MAX</span>(score) <span class="keyword">from</span> SC</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cno</span><br><span class="line"><span class="keyword">go</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>插入时的受限情况：<br>对视图或函数&#39;C_score&#39;的更新或插入失败，因其包含派生域或常量域。</li><li>更新时的受限情况：<br>因为视图或函数&#39;C_score&#39;包含聚合、DISTINCT或GROUP BY子句或者PIVOT或UNPIVOT运算符，所以无法进行更新。</li><li>删除时的受限情况：<br>因为视图或函数&#39;C_score&#39;包含聚合、DISTINCT或GROUP BY子句或者PIVOT或UNPIVOT运算符，所以无法进行更新。</li></ul><h4 id="Procedure-amp-Trigger"><a href="#Procedure-amp-Trigger" class="headerlink" title="Procedure &amp; Trigger"></a>Procedure &amp; Trigger</h4><p><strong>触发器的工作原理</strong><br>触发器建立在一个表或者视图之上，在数据发生更改时自动执行相关代码，以保证数据的完整性，比如在修改一个表的一个元组某个属性时，可能其他表某属性是该属性的外键，而修改后的内容是基本表没有的属性，这时外键表的属性没有随着基本表改变而产生错误，这时我们可以在基本表建立一个触发器，当进行修改属性值时，同时将外键表的值做相应的修改。</p><ol><li>创建存储过程JSXX_PROC，调用该存储过程时可显示各任课教师姓名及其所教课程名称。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> proc JSXX_PROC</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> tn,cn <span class="keyword">from</span> TC <span class="keyword">join</span> C <span class="keyword">on</span> TC.cno=C.cno <span class="keyword">join</span> T <span class="keyword">on</span> TC.tno=T.tno</span><br><span class="line"><span class="comment">-- 存储过程执行语句</span></span><br><span class="line">exec JSXX_PROC;</span><br></pre></td></tr></table></figure></li><li>创建存储过程XM_PROC，该存储过程可根据输入参数（学生姓名）查询并显示该学生的学号、所学课程名称和成绩；如果没有该姓名学生，则提示“无该姓名的同学”。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> XM_PROC</span><br><span class="line">@sn <span class="built_in">char</span>(<span class="number">20</span>)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exists</span> (<span class="keyword">select</span> * <span class="keyword">from</span> S <span class="keyword">where</span> sn=@sn)</span><br><span class="line"><span class="keyword">select</span> S.sno,cn,score <span class="keyword">from</span> SC <span class="keyword">join</span> C <span class="keyword">on</span> SC.cno=C.cno <span class="keyword">join</span> S <span class="keyword">on</span> S.sno=SC.sno <span class="keyword">where</span> sn=@sn</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">print <span class="string">'无该姓名的学生'</span></span><br></pre></td></tr></table></figure></li><li>创建存储过程XBNL_PROC，该存储过程可根据输入参数（专业名词，默认值为计算机专业），统计并显示该专业各年龄段男、女生人数。如果没有该专业，则显示“无此专业”。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> XBNL_PROC </span><br><span class="line">@dn <span class="built_in">char</span>(<span class="number">20</span>)=<span class="string">'计算机系'</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exists</span>(<span class="keyword">select</span> * <span class="keyword">from</span> D <span class="keyword">where</span> dn=@dn) </span><br><span class="line"><span class="keyword">select</span> age,<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> sex=<span class="string">'男'</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">as</span> 男生人数,<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> sex=<span class="string">'女'</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">as</span> 女生人数 </span><br><span class="line"><span class="keyword">from</span> S <span class="keyword">join</span> D <span class="keyword">on</span> s.dno=D.dno <span class="keyword">where</span> dn=@dn <span class="keyword">group</span> <span class="keyword">by</span> age</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">print <span class="string">'无此专业'</span></span><br></pre></td></tr></table></figure></li><li>分别查看XBNL_PROC存储过程的一般信息。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec sp_helptext XBNL_PROC</span><br></pre></td></tr></table></figure></li><li>删除XM_PROC存储过程。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> proc XBNL_PROC</span><br></pre></td></tr></table></figure></li><li>创建触发器T_insertS，当向S表添加记录时，验证学生的班级号是否出现在B表中，如果不是则撤销S表添加记录的操作，如果学生的班号在班级表中则自动修改相应班级的人数字段值。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> T_insertS <span class="keyword">on</span> S</span><br><span class="line"><span class="keyword">after</span> <span class="keyword">insert</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exists</span>(<span class="keyword">select</span> * <span class="keyword">from</span> inserted <span class="keyword">join</span> B <span class="keyword">on</span> B.bno=inserted.bno)</span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">update</span> B <span class="keyword">set</span> <span class="keyword">num</span>=<span class="keyword">num</span>+<span class="number">1</span> <span class="keyword">where</span> bno <span class="keyword">in</span> (<span class="keyword">select</span> bno <span class="keyword">from</span> inserted)</span><br><span class="line">  print <span class="string">'insert OK'</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="keyword">rollback</span> <span class="keyword">transaction</span></span><br></pre></td></tr></table></figure></li><li>禁用T_insertS触发器语句。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">disable trigger T_insertS on S</span><br></pre></td></tr></table></figure></li><li>启用T_insertS触发器语句。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">enable trigger T_insertS on S</span><br></pre></td></tr></table></figure></li><li>创建触发器T_updateS，当修改S表一位同学的班级字段值时，验证学生的班级号是否出现在B表中，如果不是则撤销对S表中该条记录的修改操作，如果修改后的班号在班级表中则自动修改相应班级的人数字段值。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> T_updateS <span class="keyword">on</span> S</span><br><span class="line"><span class="keyword">after</span> <span class="keyword">update</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exists</span>(<span class="keyword">select</span> * <span class="keyword">from</span> inserted <span class="keyword">join</span> B <span class="keyword">on</span> B.bno=inserted.bno)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">update</span> B <span class="keyword">set</span> <span class="keyword">num</span>=<span class="keyword">num</span>+<span class="number">1</span> <span class="keyword">where</span> bno <span class="keyword">in</span>(<span class="keyword">select</span> bno <span class="keyword">from</span> inserted)</span><br><span class="line"><span class="keyword">update</span> B <span class="keyword">set</span> <span class="keyword">num</span>=<span class="keyword">num</span><span class="number">-1</span> <span class="keyword">where</span> bno <span class="keyword">in</span> (<span class="keyword">select</span> bno <span class="keyword">from</span> deleted) </span><br><span class="line">print <span class="string">'update OK'</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">rollback</span> <span class="keyword">transaction</span></span><br></pre></td></tr></table></figure></li><li>请定义一个视图V_T，该视图体现了职称是副教授的老师的编号、姓名、性别和所教课程编号、课程名的信息。尝试对视图V_T进行数据插入，例如，插入编号为t111的男教师李晨副教授讲授编号为c11的“信息安全”课的信息，观察是否能成功。请自行编写一个该视图的触发器，使得定义触发器后，用户可以对视图V_T进行上述数据记录的插入。注意：所插入的教师和课程可能从未出现在教师表和课程表中。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--视图创建：</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> V_T</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> T.tno,tn,sex,C.cno,cn <span class="keyword">from</span> T <span class="keyword">join</span> TC <span class="keyword">on</span> TC.tno=T.tno <span class="keyword">join</span> C <span class="keyword">on</span> C.cno=TC.cno <span class="keyword">where</span> prof=<span class="string">'副教授'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--触发器创建：</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> Trigger_V_T</span><br><span class="line"><span class="keyword">on</span> V_T instead <span class="keyword">of</span> <span class="keyword">insert</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span>(<span class="keyword">select</span> *<span class="keyword">from</span> C <span class="keyword">where</span> cno <span class="keyword">in</span>(<span class="keyword">select</span> cno <span class="keyword">from</span> inserted))</span><br><span class="line"><span class="keyword">insert</span> C(cno,cn) <span class="keyword">select</span> cno,cn <span class="keyword">from</span> inserted</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span>(<span class="keyword">select</span> *<span class="keyword">from</span> T <span class="keyword">where</span> tno <span class="keyword">in</span>(<span class="keyword">select</span> tno <span class="keyword">from</span> inserted))</span><br><span class="line"><span class="keyword">insert</span> T(tno,tn,sex) <span class="keyword">select</span> tno,tn,sex <span class="keyword">from</span> inserted</span><br><span class="line"><span class="keyword">update</span> T <span class="keyword">set</span> prof=<span class="string">'副教授'</span> <span class="keyword">where</span> tno <span class="keyword">in</span>(<span class="keyword">select</span> tno <span class="keyword">from</span> inserted)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span>(<span class="keyword">select</span> T.tno,C.cno <span class="keyword">from</span> TC <span class="keyword">join</span> T <span class="keyword">on</span> T.tno=TC.tno <span class="keyword">join</span> C <span class="keyword">on</span> C.cno=TC.cno <span class="keyword">where</span> TC.tno <span class="keyword">in</span> (<span class="keyword">select</span> tno <span class="keyword">from</span> inserted))</span><br><span class="line"><span class="keyword">insert</span> TC(tno,cno) <span class="keyword">select</span> tno,cno <span class="keyword">from</span> inserted</span><br></pre></td></tr></table></figure></li></ol></font></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Database </category>
          
          <category> SQL Server </category>
          
          <category> Basis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> Index </tag>
            
            <tag> View </tag>
            
            <tag> Procedure </tag>
            
            <tag> Trigger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中=、copy()和deepcopy()的区别</title>
      <link href="/2020/03/31/Python%E4%B8%AD=%E3%80%81copy()%E5%92%8Cdeepcopy()%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2020/03/31/Python%E4%B8%AD=%E3%80%81copy()%E5%92%8Cdeepcopy()%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><ul><li><strong>数值，字符串str，元组tuple类型变量为静态变量（不可变对象）。</strong>    </li><li><strong>列表list，字典dict，集合set类型变量为动态变量（可变对象）。</strong> <a id="more"></a></li></ul><ol><li>b = a：赋值引用，a和b都指向同一个对象。<img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py17-1.png" alt=" "></li><li>b = a.copy()：浅拷贝，a和b是一个独立的对象，但其的子对象还是指向同一对象（是引用）。<img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py17-2.png" alt=" "></li><li>b = copy.deepcopy(a)：深度拷贝，a和b完全拷贝了父对象及其子对象，两者是完全独立的。<img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py17-3.png" alt=" "></li></ol><ul><li>变量的赋值均为引用（传址）；</li><li>变量的copy()过程中不明确区分拷贝（传值）和引用（传址）。一般对静态变量的copy为拷贝（传值），对动态变量的copy为引用（传址）。（注，对静态变量首次赋值时也是引用，当需要修改静态变量时，因为静态变量不能改变，所以需要生成一个新的空间存储数据）；</li><li>变量的deepcopy()在对一般静态变量和动态变量的处理上和copy()相同。</li><li>变量有时比较复杂，存在组合现象，比如字典中包含列表，列表中包含字典，但其数据类型是最外层类型，对变量的处理也遵循该数据类型。与非组合类型的区别在于对子对象的处理：deepcopy()拷贝（传值）子对象，而copy()对子对象引用（传址）。</li></ul><p><strong>直接赋值</strong>：对象的引用（别名）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># a, b为数值类型</span></span><br><span class="line">a = <span class="number">1</span></span><br><span class="line">b = a</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># True</span></span><br><span class="line">a = <span class="number">2</span></span><br><span class="line">print(a == b)  <span class="comment"># False</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为字符串（str）类型</span></span><br><span class="line">a = <span class="string">'abcdefg'</span></span><br><span class="line">b = a</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># True</span></span><br><span class="line">a = <span class="string">'abc'</span></span><br><span class="line">print(a == b)  <span class="comment"># False</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为元组（tuple）类型</span></span><br><span class="line">a = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">b = a</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># True</span></span><br><span class="line">a = (<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>)</span><br><span class="line">print(a == b)  <span class="comment"># False</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为列表（list）类型</span></span><br><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">b = a</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># Ture</span></span><br><span class="line">a.append(<span class="number">5</span>)</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># True</span></span><br><span class="line">a = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">print(a == b)  <span class="comment"># False</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为集合（set）类型</span></span><br><span class="line">a = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">b = a</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># Ture</span></span><br><span class="line">a = &#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</span><br><span class="line">print(a == b)  <span class="comment"># False</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为字典（dict）类型</span></span><br><span class="line">a = &#123;<span class="number">1</span>: <span class="string">'aaa'</span>, <span class="number">2</span>: <span class="string">'bbb'</span>, <span class="number">3</span>: <span class="string">"ccc"</span>&#125;</span><br><span class="line">b = a</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># Ture</span></span><br><span class="line">a = &#123;<span class="number">4</span>: <span class="string">'ddd'</span>, <span class="number">5</span>: <span class="string">'eee'</span>, <span class="number">6</span>: <span class="string">'fff'</span>&#125;</span><br><span class="line">print(a == b)  <span class="comment"># False</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为含子对象的组合类型</span></span><br><span class="line">a =&#123;<span class="string">'l'</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], <span class="string">"i"</span>: <span class="number">11</span>&#125;</span><br><span class="line">b = a</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># Ture</span></span><br><span class="line"></span><br><span class="line">a[<span class="string">'l'</span>][<span class="number">0</span>] = <span class="number">11</span></span><br><span class="line">a[<span class="string">'i'</span>] = <span class="number">12</span></span><br><span class="line">print(a)  <span class="comment"># &#123;'l': [11, 2, 3, 4, 5], 'i': 12&#125;</span></span><br><span class="line">print(b)  <span class="comment"># &#123;'l': [11, 2, 3, 4, 5], 'i': 12&#125;</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># True</span></span><br></pre></td></tr></table></figure><p><strong>copy</strong>：copy模块的copy()方法拷贝组合对象时，拷贝父对象，不会拷贝对象的内部的子对象。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"><span class="comment"># a, b为数值类型</span></span><br><span class="line">a = <span class="number">1</span></span><br><span class="line">b = copy.copy(a)</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># True</span></span><br><span class="line">a = <span class="number">2</span></span><br><span class="line">print(a == b)  <span class="comment"># False</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为字符串（str）类型</span></span><br><span class="line">a = <span class="string">'abcdefg'</span></span><br><span class="line">b = copy.copy(a)</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># True</span></span><br><span class="line">a = <span class="string">'abc'</span></span><br><span class="line">print(a == b)  <span class="comment"># False</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为元组（tuple）类型</span></span><br><span class="line">a = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">b = copy.copy(a)</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># True</span></span><br><span class="line">a = (<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>)</span><br><span class="line">print(a == b)  <span class="comment"># False</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为列表（list）类型</span></span><br><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">b = copy.copy(a)</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line">a = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">print(a == b)  <span class="comment"># False</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为集合（set）类型</span></span><br><span class="line">a = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">b = copy.copy(a)</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line">a = &#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</span><br><span class="line">print(a == b)  <span class="comment"># False</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为字典（dict）类型</span></span><br><span class="line">a = &#123;<span class="number">1</span>: <span class="string">'aaa'</span>, <span class="number">2</span>: <span class="string">'bbb'</span>, <span class="number">3</span>: <span class="string">"ccc"</span>&#125;</span><br><span class="line">b = copy.copy(a)</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line">a = &#123;<span class="number">4</span>: <span class="string">'ddd'</span>, <span class="number">5</span>: <span class="string">'eee'</span>, <span class="number">6</span>:<span class="string">'fff'</span>&#125;</span><br><span class="line">print(a == b)  <span class="comment"># False</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为含子对象的组合类型</span></span><br><span class="line">a =&#123;<span class="string">'l'</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], <span class="string">"i"</span>: <span class="number">11</span>&#125;</span><br><span class="line">b = copy.copy(a)</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line">a[<span class="string">'l'</span>][<span class="number">0</span>] = <span class="number">11</span></span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a)  <span class="comment"># &#123;'l': [11, 2, 3, 4, 5], 'i': 11&#125;</span></span><br><span class="line">print(b)  <span class="comment"># &#123;'l': [11, 2, 3, 4, 5], 'i': 11&#125;</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line">a[<span class="string">'i'</span>] = <span class="number">12</span></span><br><span class="line">print(a == b)  <span class="comment"># False</span></span><br><span class="line">print(a)  <span class="comment"># &#123;'l': [11, 2, 3, 4, 5], 'i': 12&#125;</span></span><br><span class="line">print(b)  <span class="comment"># &#123;'l': [11, 2, 3, 4, 5], 'i': 11&#125;</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># Flase</span></span><br></pre></td></tr></table></figure><p><strong>deepcopy</strong>：copy模块的deepcopy()方法处理含子对象的组合变量时，完全拷贝了父对象及其子对象。深拷贝会完全复制原变量相关的所有数据，在内存中生成完全一样的内容，在这个过程中对这两个变量中的一个进行任意修改都不会影响其他变量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"><span class="comment"># a, b为数值类型</span></span><br><span class="line">a = <span class="number">1</span></span><br><span class="line">b = copy.deepcopy(a)</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># True</span></span><br><span class="line">a = <span class="number">2</span></span><br><span class="line">print(a == b)  <span class="comment"># False</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为字符串（str）类型</span></span><br><span class="line">a = <span class="string">'abcdefg'</span></span><br><span class="line">b = copy.deepcopy(a)</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># True</span></span><br><span class="line">a = <span class="string">'abc'</span></span><br><span class="line">print(a == b)  <span class="comment"># False</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为元组（tuple）类型</span></span><br><span class="line">a = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">b = copy.deepcopy(a)</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># True</span></span><br><span class="line">a = (<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>)</span><br><span class="line">print(a == b)  <span class="comment"># False</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为列表（list）类型</span></span><br><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">b = copy.deepcopy(a)</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line">a = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">print(a == b)  <span class="comment"># False</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为集合（set）类型</span></span><br><span class="line">a = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">b = copy.deepcopy(a)</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line">a = &#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</span><br><span class="line">print(a == b)  <span class="comment"># False</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为字典（dict）类型</span></span><br><span class="line">a = &#123;<span class="number">1</span>: <span class="string">'aaa'</span>, <span class="number">2</span>: <span class="string">'bbb'</span>, <span class="number">3</span>: <span class="string">"ccc"</span>&#125;</span><br><span class="line">b = copy.deepcopy(a)</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line">a = &#123;<span class="number">4</span>: <span class="string">'ddd'</span>, <span class="number">5</span>: <span class="string">'eee'</span>, <span class="number">6</span>:<span class="string">'fff'</span>&#125;</span><br><span class="line">print(a == b)  <span class="comment"># False</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为含子对象的组合类型</span></span><br><span class="line">a =&#123;<span class="string">'l'</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], <span class="string">"i"</span>: <span class="number">11</span>&#125;</span><br><span class="line">b = copy.deepcopy(a)</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line">a[<span class="string">'l'</span>][<span class="number">0</span>] = <span class="number">11</span></span><br><span class="line">print(a == b)  <span class="comment"># False</span></span><br><span class="line">print(a)  <span class="comment"># &#123;'l': [11, 2, 3, 4, 5], 'i': 11&#125;</span></span><br><span class="line">print(b)  <span class="comment"># &#123;'l': [1, 2, 3, 4, 5], 'i': 11&#125;</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line">a[<span class="string">'i'</span>] = <span class="number">12</span></span><br><span class="line">print(a == b)  <span class="comment"># False</span></span><br><span class="line">print(a)  <span class="comment"># &#123;'l': [11, 2, 3, 4, 5], 'i': 12&#125;</span></span><br><span class="line">print(b)  <span class="comment"># &#123;'l': [1, 2, 3, 4, 5], 'i': 11&#125;</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># Flase</span></span><br></pre></td></tr></table></figure></font></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Basis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python基础 </tag>
            
            <tag> = </tag>
            
            <tag> copy() </tag>
            
            <tag> deepcopy() </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中is和==的区别</title>
      <link href="/2020/03/31/Python%E4%B8%ADis%E5%92%8C==%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2020/03/31/Python%E4%B8%ADis%E5%92%8C==%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><p>Python中对象包含的三个基本要素：<strong>id(身份标识)</strong>、<strong>type(数据类型)</strong>和<strong>value(值)</strong>。</p><p>==是python标准操作符中的比较操作符，比较两个对象的value(值)是否相等，例如，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'cheesezh'</span></span><br><span class="line">b = <span class="string">'cheesezh'</span></span><br><span class="line">a == b  <span class="comment"># True</span></span><br></pre></td></tr></table></figure><a id="more"></a>is运算符比较对象间的唯一身份标识，也就是id是否相同。例如，<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">x = y = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">z = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">x == y  <span class="comment"># True</span></span><br><span class="line">x <span class="keyword">is</span> y  <span class="comment"># True</span></span><br><span class="line">x == z  <span class="comment"># True</span></span><br><span class="line">x <span class="keyword">is</span> z  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line">print(id(x))  <span class="comment"># 3075326572</span></span><br><span class="line">print(id(y))  <span class="comment"># 3075326572</span></span><br><span class="line">print(id(z))  <span class="comment"># 3075328140</span></span><br></pre></td></tr></table></figure><p>同一类型且赋值相同的a和b，a==b结果都为True，而a is b结果如下，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># a, b为数值类型</span></span><br><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">1</span></span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># True</span></span><br><span class="line">print(id(a) == id(b))  <span class="comment"># Ture</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为字符串（str）类型</span></span><br><span class="line">a = <span class="string">'abcdefg'</span></span><br><span class="line">b = <span class="string">'abcdefg'</span></span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># True</span></span><br><span class="line">print(id(a) == id(b))  <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为元组（tuple）类型</span></span><br><span class="line">a = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">b = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># True</span></span><br><span class="line">print(id(a) == id(b))  <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为列表（list）类型</span></span><br><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">b = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line">print(id(a) == id(b))  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为集合（set）类型</span></span><br><span class="line">a = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">b = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line">print(id(a) == id(b))  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a, b为字典（dict）类型</span></span><br><span class="line">a = &#123;<span class="number">1</span>: <span class="string">'aaa'</span>, <span class="number">2</span>: <span class="string">'bbb'</span>, <span class="number">3</span>: <span class="string">"ccc"</span>&#125;</span><br><span class="line">b = &#123;<span class="number">1</span>: <span class="string">'aaa'</span>, <span class="number">2</span>: <span class="string">'bbb'</span>, <span class="number">3</span>: <span class="string">"ccc"</span>&#125;</span><br><span class="line">print(a == b)  <span class="comment"># True</span></span><br><span class="line">print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></span><br><span class="line">print(id(a) == id(b))  <span class="comment"># False</span></span><br></pre></td></tr></table></figure><p>结论：</p><ul><li><strong>同一类型且赋值相同的变量a和b，a==b结果为True，即a和b的value相同；</strong></li><li><strong>同一类型且赋值相同的变量a和b，当a和b的数据类型是数值、字符串str和元组tuple时，a is b为True，即id相同；当a和b的数据类型是列表list，字典dict或集合set时，a is b为False，即id不同。</strong></li><li><strong>同一类型且赋值相同的变量a和b，id相同则value相同，即a is b则a == b；value相同但id不一定相同，即a==b但a is b不一定为True。</strong></li><li><strong>定义两个相同大小的可变类型变量，内存开辟两个空间，分别存储两个值，所以两个变量value相同但id不同；定义两个相同大小的不可变类型的变量，内存只开辟一个空间存储值，两个变量引用同一个空间内的值，所以两个变量value和id都相同。</strong></li></ul></font></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Basis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python基础 </tag>
            
            <tag> is </tag>
            
            <tag> == </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python装饰器</title>
      <link href="/2020/03/31/Python%E4%B8%ADdecorator%E8%A3%85%E9%A5%B0%E5%99%A8/"/>
      <url>/2020/03/31/Python%E4%B8%ADdecorator%E8%A3%85%E9%A5%B0%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py16-8.png" alt=" "><a id="more"></a></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py16-9.png" alt=" "></p><h4 id="无参decorator"><a href="#无参decorator" class="headerlink" title="无参decorator"></a>无参decorator</h4><p><strong>Python的decorator本质是一个高阶函数，它接收一个函数作为参数，返回一个新函数。</strong></p><p>Python提供<strong>@</strong>语法使用decorator，避免手动编写f = decorate(f)这样的代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span><span class="params">(f)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fn</span><span class="params">(x)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'call '</span> + f.__name__ + <span class="string">'()...'</span></span><br><span class="line">        <span class="keyword">return</span> f(x)</span><br><span class="line">    <span class="keyword">return</span> fn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于阶乘函数，</span></span><br><span class="line"><span class="meta">@log</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">factorial</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> reduce(<span class="keyword">lambda</span> x,y: x*y, range(<span class="number">1</span>, n+<span class="number">1</span>))</span><br><span class="line"><span class="keyword">print</span> factorial(<span class="number">10</span>)</span><br><span class="line"><span class="comment"># 结果：</span></span><br><span class="line">call factorial()...</span><br><span class="line"><span class="number">3628800</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#对于参数不是一个的函数，调用将报错：</span></span><br><span class="line"><span class="meta">@log</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line"><span class="keyword">print</span> add(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="comment">#结果：</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"test.py"</span>, line <span class="number">15</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="keyword">print</span> add(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">TypeError: fn() takes exactly <span class="number">1</span> argument (<span class="number">2</span> given)</span><br></pre></td></tr></table></figure><p>因为add()函数需要传入两个参数，但是@log写死了只含一个参数的返回函数。<br>要让@log自适应任何参数定义的函数，可以利用Python的*args和**kw，保证任意个数的参数总是能正常调用，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span><span class="params">(f)</span>:</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">fn</span><span class="params">(*args, **kw)</span>:</span></span><br><span class="line">       <span class="keyword">print</span> <span class="string">'call '</span> + f.__name__ + <span class="string">'()...'</span></span><br><span class="line">       <span class="keyword">return</span> f(*args, **kw)</span><br><span class="line">   <span class="keyword">return</span> fn</span><br></pre></td></tr></table></figure><h4 id="有参decorator"><a href="#有参decorator" class="headerlink" title="有参decorator"></a>有参decorator</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span><span class="params">(f)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fn</span><span class="params">(x)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'call '</span> + f.__name__ + <span class="string">'()...'</span></span><br><span class="line">        <span class="keyword">return</span> f(x)</span><br><span class="line">    <span class="keyword">return</span> fn</span><br></pre></td></tr></table></figure><p>对于被装饰的函数，log打印的语句是不能变的（除了函数名）。<br>如果有的函数非常重要，希望打印出&#39;[INFO] call xxx()…&#39;，有的函数不太重要，希望打印出&#39;[DEBUG] call xxx()…&#39;，这时，log函数本身就需要传入&#39;INFO&#39;或&#39;DEBUG&#39;这样的参数，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@log('DEBUG')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>把上面的定义翻译成高阶函数的调用，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my_func = log(<span class="string">'DEBUG'</span>)(my_func)</span><br></pre></td></tr></table></figure><p>上面的语句看上去还是比较绕，再展开一下，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">log_decorator = log(<span class="string">'DEBUG'</span>)</span><br><span class="line">my_func = log_decorator(my_func)</span><br></pre></td></tr></table></figure><p>上面的语句又相当于，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">log_decorator = log(<span class="string">'DEBUG'</span>)</span><br><span class="line"><span class="meta">@log_decorator</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>所以，带参数的log函数先返回一个decorator函数，再让这个decorator函数接收my_func并返回新函数，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span><span class="params">(prefix)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">log_decorator</span><span class="params">(f)</span>:</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kw)</span>:</span></span><br><span class="line">            <span class="keyword">print</span> <span class="string">'[%s] %s()...'</span> % (prefix, f.__name__)</span><br><span class="line">            <span class="keyword">return</span> f(*args, **kw)</span><br><span class="line">        <span class="keyword">return</span> wrapper</span><br><span class="line">    <span class="keyword">return</span> log_decorator</span><br><span class="line"></span><br><span class="line"><span class="meta">@log('DEBUG')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">print</span> test()</span><br><span class="line"><span class="comment"># 执行结果：</span></span><br><span class="line"><span class="comment"># [DEBUG] test()...</span></span><br><span class="line"><span class="comment"># None</span></span><br></pre></td></tr></table></figure><p>对于这种3层嵌套的decorator定义，可以先把它拆开，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 标准decorator:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log_decorator</span><span class="params">(f)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kw)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'[%s] %s()...'</span> % (prefix, f.__name__)</span><br><span class="line">        <span class="keyword">return</span> f(*args, **kw)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"><span class="keyword">return</span> log_decorator</span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回decorator:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span><span class="params">(prefix)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> log_decorator(f)</span><br></pre></td></tr></table></figure><p>拆开以后会发现，调用会失败，因为在3层嵌套的decorator定义中，最内层的wrapper引用了最外层的参数prefix，所以，把一个闭包拆成普通的函数调用会比较困难。不支持闭包的编程语言要实现同样的功能就需要更多的代码</p><h4 id="完善decorator"><a href="#完善decorator" class="headerlink" title="完善decorator"></a>完善decorator</h4><p>@decorator可以动态实现函数功能的增加，但是，经过@decorator“改造”后的函数，和原函数相比，除了功能多一点外，有没有其它不同的地方？<br>在没有decorator的情况下，打印函数名，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">print</span> f1.__name__  <span class="comment"># f1</span></span><br></pre></td></tr></table></figure><p>有decorator的情况下，再打印函数名，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span><span class="params">(f)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kw)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'call...'</span></span><br><span class="line">        <span class="keyword">return</span> f(*args, **kw)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"><span class="meta">@log</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">print</span> f2.__name__  <span class="comment"># wrapper</span></span><br></pre></td></tr></table></figure><p>可见，由于decorator返回的新函数函数名已经不是&#39;f2&#39;，而是@log内部定义的&#39;wrapper&#39;。这对于那些依赖函数名的代码就会失效。decorator还改变了函数的<strong>doc</strong>等其它属性。如果要让调用者看不出一个函数经过了@decorator的“改造”，就需要把原函数的一些属性复制到新函数中，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span><span class="params">(f)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kw)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'call...'</span></span><br><span class="line">        <span class="keyword">return</span> f(*args, **kw)</span><br><span class="line">    wrapper.__name__ = f.__name__</span><br><span class="line">    wrapper.__doc__ = f.__doc__</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br></pre></td></tr></table></figure><p>这样写decorator很不方便，因为很难把原函数的所有必要属性都一个一个复制到新函数上，所以Python内置的functools可以用来自动化完成这个“复制”的任务，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span><span class="params">(f)</span>:</span></span><br><span class="line"><span class="meta">    @functools.wraps(f)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kw)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'call...'</span></span><br><span class="line">        <span class="keyword">return</span> f(*args, **kw)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br></pre></td></tr></table></figure><p>最后需要指出，由于把原函数签名改成了(*args, **kw)，因此，无法获得原函数的原始参数信息。即便采用固定参数来装饰只有一个参数的函数，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span><span class="params">(f)</span>:</span></span><br><span class="line"><span class="meta">    @functools.wraps(f)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(x)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'call...'</span></span><br><span class="line">        <span class="keyword">return</span> f(x)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br></pre></td></tr></table></figure><p>也可能改变原函数的参数名，因为新函数的参数名始终是&#39;x&#39;，原函数定义的参数名不一定叫&#39;x&#39;。<br></p></font><p></p></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Advan </category>
          
          <category> Functional </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python进阶 </tag>
            
            <tag> decorator </tag>
            
            <tag> 装饰器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python高阶函数</title>
      <link href="/2020/03/31/Python%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/"/>
      <url>/2020/03/31/Python%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="函数式编程简介"><a href="#函数式编程简介" class="headerlink" title="函数式编程简介"></a>函数式编程简介</h4><p><strong>函数式：functional，一种编程范式，与函数是完全不同的东西</strong>。<a id="more"></a><br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py16-1.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py16-2.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py16-3.png" alt=" "></p><h4 id="高阶函数简介"><a href="#高阶函数简介" class="headerlink" title="高阶函数简介"></a>高阶函数简介</h4><p><strong>高阶函数：能接收函数做参数的函数</strong>。<br>1.变量可以指向函数，函数名就是指向函数的变量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f = abs</span><br><span class="line"><span class="keyword">print</span> (f(<span class="number">-12</span>))  <span class="comment"># 12</span></span><br></pre></td></tr></table></figure><p>2.函数的参数可以接收变量，所以一个函数可以接收另一个函数作为参数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x,y,f=abs)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> f(x) + f(y)</span><br><span class="line"><span class="keyword">print</span> (add(<span class="number">1</span>,<span class="number">-1</span>))  <span class="comment"># 2</span></span><br><span class="line"><span class="keyword">print</span> (add(<span class="number">4</span>,<span class="number">9</span>,math.sqrt))  <span class="comment"># 5.0</span></span><br></pre></td></tr></table></figure><h4 id="Python中返回函数"><a href="#Python中返回函数" class="headerlink" title="Python中返回函数"></a>Python中返回函数</h4><p>Python的函数不但可以返回int、str、list、dict等数据类型，还可以返回函数。注意区分返回函数和返回值，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myabs</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> abs   <span class="comment"># 返回函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myabs2</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> abs(x)   <span class="comment"># 返回函数调用的结果，返回值是一个数值</span></span><br></pre></td></tr></table></figure><p>返回函数可以把一些计算延迟执行。例如，如果定义一个普通的求和函数，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc_sum</span><span class="params">(lst)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> sum(lst)</span><br><span class="line"><span class="comment"># 调用calc_sum()函数时，将立刻计算并得到结果</span></span><br><span class="line">calc_sum([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])  <span class="comment"># 10</span></span><br><span class="line"><span class="comment">#如果返回一个函数，就可以“延迟计算”</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc_sum</span><span class="params">(lst)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">lazy_sum</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">return</span> sum(lst)</span><br><span class="line">    <span class="keyword">return</span> lazy_sum</span><br><span class="line"><span class="comment"># 调用calc_sum()并没有计算出结果，而是返回函数</span></span><br><span class="line">f = calc_sum([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">print(f)  <span class="comment"># &lt;function lazy_sum at 0x1037bfaa0&gt;</span></span><br><span class="line"><span class="comment"># 对返回的函数进行调用时，才计算出结果:</span></span><br><span class="line">print(f())  <span class="comment"># 10</span></span><br></pre></td></tr></table></figure><p>由于可以返回函数，在后续代码里就可以决定到底要不要调用该函数。</p><h4 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h4><p><strong>在函数内部定义的函数和外部定义的函数是一样的，只是无法被外部访问</strong>。<br>例如，将g的定义移入函数f内部，防止其他代码调用g，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'f()...'</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">g</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'g()...'</span></span><br><span class="line">    <span class="keyword">return</span> g</span><br></pre></td></tr></table></figure><p>但是，考察如下calc_sum函数,</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc_sum</span><span class="params">(lst)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">lazy_sum</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">return</span> sum(lst)</span><br><span class="line">    <span class="keyword">return</span> lazy_sum</span><br></pre></td></tr></table></figure><p>注意:发现没法把lazy_sum移到calc_sum的外部，因为它引用了calc_sum的参数lst。<br><strong>像这种内层函数引用了外层函数的变量（参数也算变量），然后返回内层函数的情况，称为闭包（Closure）</strong>。<br>闭包的特点是返回的函数还引用了外层函数的局部变量，所以，要正确使用闭包，就要确保引用的局部变量在函数返回后不能变。举例如下,</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 希望一次返回3个函数，分别计算1x1,2x2,3x3:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">count</span><span class="params">()</span>:</span></span><br><span class="line">    fs = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">4</span>):</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">()</span>:</span></span><br><span class="line">             <span class="keyword">return</span> i*i</span><br><span class="line">        fs.append(f)</span><br><span class="line">    <span class="keyword">return</span> fs</span><br><span class="line">f1, f2, f3 = count()</span><br><span class="line">``</span><br><span class="line">f1()，f2()和f3()实际结果全部都是<span class="number">9</span>，而不是<span class="number">1</span>，<span class="number">4</span>，<span class="number">9</span>。原因就是当count()函数返回了<span class="number">3</span>个函数时，这<span class="number">3</span>个函数所引用的变量i的值已经变成了<span class="number">3</span>。由于f1、f2、f3并没有被调用，所以，此时他们并未计算i*i，当f1被调用时，</span><br><span class="line">​```Python</span><br><span class="line">print(f1())  <span class="comment"># 9     因为f1现在才计算i*i，但现在i的值已经变为3</span></span><br></pre></td></tr></table></figure><p>第一步：执行代码“f1, f2, f3 = count()”赋值号的右边，调用count()函数，开始执行count()函数的内部命令<br>第二步：创建一个局部变量fs<br>第三步：开始执行for循环遍历列表[1,2,3]，i赋值1，然后执行fs.append(f)代码，得到[f]，注意这时候并不需要执行函数f()，因为没有调用<br>第四步：继续执行for循环遍历列表[1,2,3]，i赋值2，然后执行fs.append(f)代码，得到[f,f]，注意这时候并不需要执行函数f()，因为没有调用<br>第五步：继续执行for循环遍历列表[1,2,3]，i赋值3，然后执行fs.append(f)代码，得到[f,f,f]，注意这时候并不需要执行函数f()，因为没有调用<br>第六步：执行代码“f1, f2, f3 = count()”赋值号的左边，将fs（即[f,f,f])赋值给f1，f2，f3，使用到了高级序列赋值语句模式<br>第七步：执行print (f1(),f2(),f3())代码<br>第八步：调用函数f()，执行return i<em>i，此时的i的地址值指向的是外层函数中i的地址，i的值应为for之前的for循环重新赋值为3，所以return 3</em>3<br>因此，返回函数不要引用任何循环变量，或者后续会发生变化的变量。</p><h4 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h4><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py16-5.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py16-6.png" alt=" "></p><p>在Python中，对匿名函数提供了有限支持。以map()函数为例，计算 f(x)=x2时，除了定义一个f(x)的函数外，还可以直接传入匿名函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">map(<span class="keyword">lambda</span> x: x * x, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])  <span class="comment"># [1, 4, 9, 16, 25, 36, 49, 64, 81]</span></span><br></pre></td></tr></table></figure><p>通过对比可以看出，匿名函数lambda x: x * x实际上就是,</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x * x</span><br></pre></td></tr></table></figure><p><strong>关键字lambda表示匿名函数，冒号前面的x表示函数参数</strong>。<br><strong>匿名函数只能有一个表达式，不写return，返回值就是该表达式的结果</strong>。<br><strong>使用匿名函数，可以不必定义函数名，直接创建一个函数对象</strong>，可以简化代码，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sorted([<span class="number">1</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">0</span>], <span class="keyword">lambda</span> x,y: -cmp(x,y))  <span class="comment"># [9, 5, 3, 1, 0]</span></span><br></pre></td></tr></table></figure><p><strong>返回函数的时候，也可以返回匿名函数</strong>，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">myabs = <span class="keyword">lambda</span> x: -x <span class="keyword">if</span> x &lt; <span class="number">0</span> <span class="keyword">else</span> x </span><br><span class="line">myabs(<span class="number">-1</span>)  <span class="comment"># 1</span></span><br><span class="line">myabs(<span class="number">1</span>)  <span class="comment"># 1</span></span><br></pre></td></tr></table></figure><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py16-7.png" alt=" "></p><h4 id="偏函数"><a href="#偏函数" class="headerlink" title="偏函数"></a>偏函数</h4><p>当一个函数有很多参数时，调用者就需要提供多个参数。如果减少参数个数，就可以简化调用者的负担。<br>比如，int()函数可以把字符串转换为整数，当仅传入字符串时，int()函数默认按十进制转换，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(int(<span class="string">'12345'</span>))  <span class="comment"># 12345</span></span><br></pre></td></tr></table></figure><p>但int()函数还提供额外的base参数，默认值为10。如果传入base参数，就可以做N进制的转换，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(int(<span class="string">'12345'</span>, base=<span class="number">8</span>))  <span class="comment"># 5349</span></span><br><span class="line">print(int(<span class="string">'12345'</span>, <span class="number">16</span>))  <span class="comment"># 74565</span></span><br></pre></td></tr></table></figure><p>假设要转换大量的二进制字符串，每次都传入int(x, base=2)非常麻烦，于是，可以定义一个int2()的函数，默认把base=2传进去，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">int2</span><span class="params">(x, base=<span class="number">2</span>)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> int(x, base)</span><br><span class="line"></span><br><span class="line">print(int2(<span class="string">'1000000'</span>))  <span class="comment"># 64</span></span><br><span class="line">print(int2(<span class="string">'1010101'</span>))  <span class="comment"># 85</span></span><br></pre></td></tr></table></figure><p><strong>functools.partial用来创建偏函数</strong>，不需要自己定义int2()，可以直接使用下面的代码创建一个新的函数int2，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> functools</span><br><span class="line">int2 = functools.partial(int, base=<span class="number">2</span>)</span><br><span class="line">int2(<span class="string">'1000000'</span>)  <span class="comment"># 64</span></span><br><span class="line">int2(<span class="string">'1010101'</span>)  <span class="comment"># 85</span></span><br></pre></td></tr></table></figure><p>所以，functools.partial可以把一个参数多的函数变成一个参数少的新函数，少的参数需要在创建时指定默认值。<br></p></font><p></p></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Advan </category>
          
          <category> Functional </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python进阶 </tag>
            
            <tag> 高阶函数 </tag>
            
            <tag> 函数式编程 </tag>
            
            <tag> 闭包 </tag>
            
            <tag> 返回函数 </tag>
            
            <tag> 偏函数 </tag>
            
            <tag> 匿名函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python特殊方法</title>
      <link href="/2020/03/31/Python%E7%89%B9%E6%AE%8A%E6%96%B9%E6%B3%95/"/>
      <url>/2020/03/31/Python%E7%89%B9%E6%AE%8A%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="特殊方法简介"><a href="#特殊方法简介" class="headerlink" title="特殊方法简介"></a>特殊方法简介</h4><p>Python之所以能把把任意变量变成str输出，因为任何数据类型的实例都有一个特殊方法<strong>str</strong>()。<a id="more"></a><br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py15-16.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py15-17.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py15-18.png" alt=" "></p><h4 id="常用特殊方法举例"><a href="#常用特殊方法举例" class="headerlink" title="常用特殊方法举例"></a>常用特殊方法举例</h4><h5 id="str"><a href="#str" class="headerlink" title="__str()__"></a>__str()__</h5><p>如果要把一个类的实例变成str，需要实现特殊方法__str__()，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, gender)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.gender = gender</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'(Person: %s, %s)'</span> % (self.name, self.gender)</span><br><span class="line"></span><br><span class="line">p = Person(<span class="string">'Bob'</span>, <span class="string">'male'</span>)</span><br><span class="line">print(p)  <span class="comment"># (Person: Bob, male)</span></span><br></pre></td></tr></table></figure><h5 id="cmp"><a href="#cmp" class="headerlink" title="__cmp()__"></a>__cmp()__</h5><p>对int、str等内置数据类型排序时，Python的sorted()函数按照默认的比较函数cmp排序，但是，如果对一组Student类的实例排序时，就必须实现特殊方法__cmp__()，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, score)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.score = score</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'(%s: %s)'</span> % (self.name, self.score)</span><br><span class="line">    __repr__ = __str__</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__cmp__</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.name &lt; s.name:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">        <span class="keyword">elif</span> self.name &gt; s.name:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">L = [Student(<span class="string">'Tim'</span>, <span class="number">99</span>), Student(<span class="string">'Bob'</span>, <span class="number">88</span>), Student(<span class="string">'Alice'</span>, <span class="number">77</span>)]</span><br><span class="line"><span class="keyword">print</span> sorted(L)  <span class="comment"># [(Alice: 77), (Bob: 88), (Tim: 99)]</span></span><br></pre></td></tr></table></figure><p>上述Student类实现了__cmp__()方法，__cmp__用实例自身self和传入的实例s进行比较，如果self应该排在前面，就返回-1，如果s应该排在前面，就返回1，如果两者相当，返回0。<br>注意: 如果list不仅仅包含Student类，则__cmp__可能会报错。<strong>Python3已经取消该函数</strong>。</p><h5 id="len"><a href="#len" class="headerlink" title="__len()__"></a>__len()__</h5><p>如果一个类表现得像一个list，要获取有多少个元素，就得用len()函数。要让len()函数工作正常，类必须提供一个特殊方法__len__()，它返回元素的个数。<br>例如，写一个Students类，把名字传进去，只要正确实现了__len__()方法，就可以用len()函数返回Students实例的“长度”,</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Students</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, *args)</span>:</span></span><br><span class="line">        self.names = args</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__len__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> len(self.names)</span><br><span class="line"></span><br><span class="line">ss = Students(<span class="string">'Bob'</span>, <span class="string">'Alice'</span>, <span class="string">'Tim'</span>)</span><br><span class="line"><span class="keyword">print</span> len(ss)  <span class="comment"># 3</span></span><br></pre></td></tr></table></figure><h5 id="slots"><a href="#slots" class="headerlink" title="__slots__"></a>__slots__</h5><p>由于Python是动态语言，任何实例在运行期都可以动态地添加属性。<br>如果要限制添加的属性，例如，Student类只允许添加name、gender和score这3个属性，可以利用Python的__slots__来实现。__slots__是指一个类允许的属性列表，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></span><br><span class="line">    __slots__ = (<span class="string">'name'</span>, <span class="string">'gender'</span>, <span class="string">'score'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, gender, score)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.gender = gender</span><br><span class="line">        self.score = score</span><br><span class="line"></span><br><span class="line">s = Student(<span class="string">'Bob'</span>, <span class="string">'male'</span>, <span class="number">59</span>)</span><br><span class="line">s.name = <span class="string">'Tim'</span> <span class="comment"># OK</span></span><br><span class="line">s.score = <span class="number">99</span> <span class="comment"># OK</span></span><br><span class="line">.grade = <span class="string">'A'</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  ...</span><br><span class="line">AttributeError: <span class="string">'Student'</span> object has no attribute <span class="string">'grade'</span></span><br></pre></td></tr></table></figure><p><strong>__slots__的目的是限制当前类所能拥有的属性</strong>，如果不需要添加任意动态的属性，使用__slots__也能节省内存。<strong><strong>slots</strong>定义的属性仅对当前类实例起作用，对继承的子类是不起作用的</strong>。</p><h5 id="call"><a href="#call" class="headerlink" title="__call()__"></a>__call()__</h5><p>在Python中，函数其实是一个对象。如下，由于f可以被调用，所以，f被称为可调用对象。<strong>所有的函数都是可调用对象</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f = abs</span><br><span class="line">print(f.__name__)  <span class="comment"># 'abs'</span></span><br><span class="line">print(f(<span class="number">-123</span>))  <span class="comment"># 123</span></span><br></pre></td></tr></table></figure><p>一个类实例也可以变成一个可调用对象，只需要实现一个特殊方法__call__()。该函数在调用类的实例时自动调用。把Person类变成一个可调用对象如下，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, gender)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.gender = gender</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span><span class="params">(self, friend)</span>:</span></span><br><span class="line">        print(<span class="string">'My name is %s...'</span> % self.name)</span><br><span class="line">        print(<span class="string">'My friend is %s...'</span> % friend)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以对Person实例直接调用：</span></span><br><span class="line">p = Person(<span class="string">'Bob'</span>, <span class="string">'male'</span>)</span><br><span class="line">p(<span class="string">'Tim'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># My name is Bob...</span></span><br><span class="line"><span class="comment"># My friend is Tim...</span></span><br></pre></td></tr></table></figure><p>单看p(&#39;Tim&#39;)无法确定p是一个函数还是一个类实例，所以，<strong>在Python中，函数也是对象，对象和函数的区别并不显著</strong>。<br></p></font><p></p></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Advan </category>
          
          <category> Object-oriented </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python进阶 </tag>
            
            <tag> 特殊方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python文件读写</title>
      <link href="/2020/03/31/Python%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/"/>
      <url>/2020/03/31/Python%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="文件内容读取"><a href="#文件内容读取" class="headerlink" title="文件内容读取"></a>文件内容读取</h4><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py13-9.png" alt=" "></p><a id="more"></a><p>&lt;f&gt;.readline(size=-1) 读入文件一行，如果给定参数，输出文件前size行内容<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py13-10.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py13-11.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py13-12.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py13-13.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py13-14.png" alt=" "></p><h4 id="文件内容写入"><a href="#文件内容写入" class="headerlink" title="文件内容写入"></a>文件内容写入</h4><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py13-15.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py13-16.png" alt=" "></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fo = open(<span class="string">"D:/test.txt"</span>, <span class="string">"w+"</span>)</span><br><span class="line">list = [<span class="string">'中国'</span>, <span class="string">'法国'</span>, <span class="string">'美国'</span>]</span><br><span class="line">fo.writelines(list)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fo:</span><br><span class="line">    print(line)</span><br><span class="line">fo.close()</span><br></pre></td></tr></table></figure><p>以上代码，创建文件test.txt，并写入内容“中国法国美国”，但是没有读取文件内容。因为在向文件写入数据后，文件操作指针移动到文件末尾，而读取文件操作是读取从指针当前位置到文件末尾的内容，所以读取不到内容。使用seek()函数，改变当前指针位置到文件开头，如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fo = open(<span class="string">"D:/test.txt"</span>, <span class="string">"w+"</span>)</span><br><span class="line">list = [<span class="string">'中国'</span>, <span class="string">'法国'</span>, <span class="string">'美国'</span>]</span><br><span class="line">fo.writelines(list)</span><br><span class="line">fo.seek(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fo:</span><br><span class="line">    print(line)</span><br><span class="line">fo.close()</span><br></pre></td></tr></table></figure><h4 id="数据的表示和处理"><a href="#数据的表示和处理" class="headerlink" title="数据的表示和处理"></a>数据的表示和处理</h4><h5 id="一维数据格式化处理"><a href="#一维数据格式化处理" class="headerlink" title="一维数据格式化处理"></a>一维数据格式化处理</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fo = open(<span class="string">"D:/test.txt"</span>, <span class="string">"w+"</span>)</span><br><span class="line">list = [<span class="string">'中国'</span>, <span class="string">'法国'</span>, <span class="string">'美国'</span>]</span><br><span class="line">fo.writelines(list)</span><br><span class="line">fo.seek(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fo:</span><br><span class="line">    print(line)</span><br><span class="line">fo.close()</span><br></pre></td></tr></table></figure><h5 id="二维数据格式化处理"><a href="#二维数据格式化处理" class="headerlink" title="二维数据格式化处理"></a>二维数据格式化处理</h5><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py13-17.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py13-18.png" alt=" "></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从csv文件中读取二维数据存储到二维列表中</span></span><br><span class="line">fo = open(<span class="string">"test.txt"</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">ls = []</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fo</span><br><span class="line">    line = line.replace(<span class="string">"\n"</span>, <span class="string">''</span>)</span><br><span class="line">    ls.append(line.split(<span class="string">","</span>))</span><br><span class="line">fo.close()</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 将列表中的二维数据写入到csv格式的文件中</span></span><br><span class="line">ls = [[<span class="number">1</span>,<span class="number">2</span>], [<span class="number">3</span>,<span class="number">4</span>], [<span class="number">5</span>,<span class="number">6</span>]]</span><br><span class="line">fo = open(<span class="string">"test.txt"</span>, <span class="string">"w"</span>, encoding=<span class="string">"utf-8"</span>)</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> ls:</span><br><span class="line">    f.write(<span class="string">","</span>.join(item) + <span class="string">'\n'</span>)</span><br><span class="line">fo.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 二维数据的遍历</span></span><br><span class="line">ls = [[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>], [<span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> ls:</span><br><span class="line">    print(row)</span><br><span class="line">    <span class="keyword">for</span> column <span class="keyword">in</span> row:</span><br><span class="line">        print(column)</span><br></pre></td></tr></table></figure></font></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Advan </category>
          
          <category> File &amp; Data </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python进阶 </tag>
            
            <tag> 文件读取 </tag>
            
            <tag> 文件写入 </tag>
            
            <tag> 数据格式化处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python文件打开和关闭</title>
      <link href="/2020/03/31/Python%E6%96%87%E4%BB%B6%E6%89%93%E5%BC%80%E5%92%8C%E5%85%B3%E9%97%AD/"/>
      <url>/2020/03/31/Python%E6%96%87%E4%BB%B6%E6%89%93%E5%BC%80%E5%92%8C%E5%85%B3%E9%97%AD/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="文件的理解"><a href="#文件的理解" class="headerlink" title="文件的理解"></a>文件的理解</h4><p>文件是数据的抽象和集合，是存储在辅助存储器上的数据序列，是数据存储的一种形式。<a id="more"></a><br><strong>文件展现形态：文本文件和二进制文件</strong>。<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py13-1.png" alt=" "></p><p><strong>文本文件</strong>：由单一特定编码组成的文件，如UTF-8编码；由于存在编码，也被看成是存储着的长字符串；适用于例如：.txt文件、.py文件等。<br><strong>二进制文件</strong>：直接由比特0和1组成，没有统一的字符编码；一般存在二进制0和1的组织结构，即文件格式；适用于例如：.png文件、.avi文件等。</p><h4 id="文件的打开和关闭"><a href="#文件的打开和关闭" class="headerlink" title="文件的打开和关闭"></a>文件的打开和关闭</h4><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py13-4.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py13-5.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py13-6.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py13-7.png" alt=" "></p><p><strong>文件关闭：&lt;变量名&gt;.close()</strong><br>注意调用close()方法将文件及时关闭，如果没有关闭，Python在程序正常关闭时也会关闭文件。</p></font></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Advan </category>
          
          <category> File &amp; Data </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python进阶 </tag>
            
            <tag> 文件打开 </tag>
            
            <tag> 文件关闭 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python模块和包</title>
      <link href="/2020/03/31/Python%E6%A8%A1%E5%9D%97%E5%92%8C%E5%8C%85/"/>
      <url>/2020/03/31/Python%E6%A8%A1%E5%9D%97%E5%92%8C%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="模块和包的概念"><a href="#模块和包的概念" class="headerlink" title="模块和包的概念"></a>模块和包的概念<a id="more"></a></h4><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py15-1.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py15-2.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py15-3.png" alt=" "></p><p>调用模块时，由于同名模块的完整模块名不同（p1.util和p2.util），所以此时同名的模块不产生冲突。<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py15-4.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py15-5.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py15-6.png" alt=" "></p><h4 id="导入模块"><a href="#导入模块" class="headerlink" title="导入模块"></a>导入模块</h4><p>Python使用import语句导入一个模块。例如，导入系统自带的模块math。可以认为math就是一个指向已导入模块的变量，通过该变量，可以访问math模块中所定义的所有公开的函数、变量和类。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line">math.pow(<span class="number">2</span>, <span class="number">0.5</span>) <span class="comment"># pow是函数  # 1.4142135623730951</span></span><br><span class="line">math.pi <span class="comment"># pi是变量  # 3.141592653589793</span></span><br></pre></td></tr></table></figure><p>如果只希望导入用到的math模块的某几个函数，而不是所有函数，可以用下面的语句。这样，可以直接引用pow, sin, log这3个函数，但math的其他函数没有导入进来，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> pow, sin, log</span><br><span class="line">pow(<span class="number">2</span>, <span class="number">10</span>)  <span class="comment"># 1024.0</span></span><br><span class="line">sin(<span class="number">3.14</span>)  <span class="comment"># 0.0015926529164868282</span></span><br></pre></td></tr></table></figure><p>如果遇到名字冲突，比如math模块有一个log函数，logging模块也有一个log函数：如果使用import导入模块名，由于必须通过模块名引用函数名，因此不存在冲突；如果使用from…import导入log 函数，势必引起冲突。这时，可以给函数起个“别名”来避免冲突。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math, logging</span><br><span class="line">print(math.log(<span class="number">10</span>))   <span class="comment"># 调用的是math的log函数</span></span><br><span class="line">logging.log(<span class="number">10</span>, <span class="string">'something'</span>)   <span class="comment"># 调用的是logging的log函数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> log</span><br><span class="line"><span class="keyword">from</span> logging <span class="keyword">import</span> log <span class="keyword">as</span> logger   <span class="comment"># logging的log现在变成了logger</span></span><br><span class="line">print(log(<span class="number">10</span>))   <span class="comment"># 调用的是math的log</span></span><br><span class="line">logger(<span class="number">10</span>, <span class="string">'import from logging'</span>)   <span class="comment"># 调用的是logging的log</span></span><br></pre></td></tr></table></figure><h4 id="动态导入模块"><a href="#动态导入模块" class="headerlink" title="动态导入模块"></a>动态导入模块</h4><p>如果导入的模块不存在，Python解释器会报ImportError错误，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> something</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">ImportError: No module named something</span><br></pre></td></tr></table></figure><p><strong>Python中存在不同模块提供相同的功能</strong>，比如io和cStringIO都提供了StringIO这个功能。这是因为Python是动态语言，解释执行，因此Python代码运行速度慢。如果要提高Python代码的运行速度，最简单的方法是把某些关键函数用C语言重写，这样就能大大提高执行速度。同样的功能，io是纯Python代码编写的，而cStringIO部分函数是C写的，因此cStringIO运行速度更快。<br>利用异常捕捉ImportError错误，可以在Python中动态导入模块，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">from</span> cStringIO <span class="keyword">import</span> StringIO</span><br><span class="line"><span class="keyword">except</span> ImportError:</span><br><span class="line">    <span class="keyword">from</span> io <span class="keyword">import</span> StringIO</span><br></pre></td></tr></table></figure><p>上述代码先尝试从cStringIO导入，如果失败了（比如cStringIO没有被安装），再尝试从io导入。这样，如果cStringIO模块存在，则将获得更快的运行速度，如果cStringIO不存在，则顶多代码运行速度会变慢，但不会影响代码的正常执行。<br><strong>try的作用是捕获错误，并在捕获到指定错误时执行except语句</strong>。</p><h4 id="fulture"><a href="#fulture" class="headerlink" title="__fulture__"></a>__fulture__</h4><p>Python的新版本会引入新的功能，但是，实际上这些功能可能在上一个版本中就已经存在了。要在旧版本“试用”某一新的特性，可以通过导入__future__模块的某些功能来实现。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 2.7的整数除法运算结果仍是整数</span></span><br><span class="line"><span class="number">10</span> / <span class="number">3</span>  <span class="comment"># 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Python 3.x已经改进了整数的除法运算，“/”除将得到浮点数，“//”除才仍是整数</span></span><br><span class="line"><span class="number">10</span> / <span class="number">3</span>  <span class="comment"># 3.3333333333333335</span></span><br><span class="line"><span class="number">10</span> // <span class="number">3</span>  <span class="comment"># 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 要在Python 2.7中引入3.x的除法规则，导入__future__的division</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> division</span><br><span class="line"><span class="keyword">print</span> <span class="number">10</span> / <span class="number">3</span>  <span class="comment"># 3.3333333333333335</span></span><br></pre></td></tr></table></figure><p><strong>当新版本的一个特性与旧版本不兼容时，该特性将会在旧版本中添加到__future__中，以便旧的代码能在旧版本中测试新特性</strong>。</p><h4 id="第三方库的安装"><a href="#第三方库的安装" class="headerlink" title="第三方库的安装"></a>第三方库的安装</h4><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py15-7.png" alt=" "></p><p><strong>常用的pip命令</strong><br>pip install &lt;第三方库名&gt;&emsp;&emsp;&emsp;&emsp;&emsp;&nbsp;&nbsp;安装指定的第三方库<br>pip install -U &lt;第三方库名&gt;&emsp;&emsp;&emsp;&emsp;使用-U标签更新已安装的指定第三方库<br>pip uninstall &lt;第三方库名&gt;&emsp;&emsp;&emsp;&emsp;&nbsp;&nbsp;卸载指定的第三方库<br>pip show &lt;第三方库名&gt;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;列出某个指定第三方库的详细信息<br>pip search &lt;关键词&gt;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&nbsp;&nbsp;根据关键词在名称和介绍中搜索第三方库<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py15-8.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py15-9.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py15-10.png" alt=" "></p><p>注：某些第三方库提供下载的不是可执行文件，而是源文件。这时需要下载后需要在本地环境编译后安装，而由于本地环境的问题，常常发生安装失败，这时可以使用文件安装方法。<br></p></font><p></p></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Advan </category>
          
          <category> Module </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python进阶 </tag>
            
            <tag> 模块 </tag>
            
            <tag> 包 </tag>
            
            <tag> 第三方库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python面向对象—继承和多态</title>
      <link href="/2020/03/31/Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E2%80%94%E7%BB%A7%E6%89%BF%E5%92%8C%E5%A4%9A%E6%80%81/"/>
      <url>/2020/03/31/Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E2%80%94%E7%BB%A7%E6%89%BF%E5%92%8C%E5%A4%9A%E6%80%81/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="类的继承"><a href="#类的继承" class="headerlink" title="类的继承"></a>类的继承</h4><p>继承可以复用已有代码，自动拥有现有类的所有功能，只需编写缺少的新功能。<a id="more"></a><br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py15-11.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py15-12.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py15-13.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py15-14.png" alt=" "></p><p>如果已经定义了Person类，需要定义新的Student和Teacher类时，可以直接从Person类继承，定义Student类时，只需要把额外的属性加上，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, gender)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.gender = gender</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(Person)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, gender, score)</span>:</span></span><br><span class="line">        super(Student, self).__init__(name, gender)</span><br><span class="line">        self.score = score</span><br></pre></td></tr></table></figure><p><strong>一定要用super(Student, self).__init__(name, gender)去初始化父类，否则，继承自Person的Student将没有name和gender</strong>。<br><strong>函数super(Student, self)将返回当前类继承的父类，即Person，然后调用__init__()方法，注意self参数已在super()中传入，在__init__()中将隐式传递，不需要写出（也不能写）</strong>。</p><h4 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h4><p><strong>类具有继承关系，并且子类类型可以向上转型看做父类类型</strong>。如果从Person派生出Student和Teacher，并都拥有whoAmI()方法如下，那么在该函数中，如果接收一个变量x，则无论该x是Person、Student还是Teacher，都可以正确打印出结果，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, gender)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.gender = gender</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">whoAmI</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'I am a Person, my name is %s'</span> % self.name</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(Person)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, gender, score)</span>:</span></span><br><span class="line">        super(Student, self).__init__(name, gender)</span><br><span class="line">        self.score = score</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">whoAmI</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'I am a Student, my name is %s'</span> % self.name</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span><span class="params">(Person)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, gender, course)</span>:</span></span><br><span class="line">        super(Teacher, self).__init__(name, gender)</span><br><span class="line">        self.course = course</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">whoAmI</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'I am a Teacher, my name is %s'</span> % self.name</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">who_am_i</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">print</span> x.whoAmI()</span><br><span class="line"></span><br><span class="line">p = Person(<span class="string">'Tim'</span>, <span class="string">'Male'</span>)</span><br><span class="line">s = Student(<span class="string">'Bob'</span>, <span class="string">'Male'</span>, <span class="number">88</span>)</span><br><span class="line">t = Teacher(<span class="string">'Alice'</span>, <span class="string">'Female'</span>, <span class="string">'English'</span>)</span><br><span class="line"></span><br><span class="line">who_am_i(p)</span><br><span class="line">who_am_i(s)</span><br><span class="line">who_am_i(t)</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行结果：</span></span><br><span class="line">I am a Person, my name <span class="keyword">is</span> Tim</span><br><span class="line">I am a Student, my name <span class="keyword">is</span> Bob</span><br><span class="line">I am a Teacher, my name <span class="keyword">is</span> Alice</span><br></pre></td></tr></table></figure><p>这种行为称为多态。也就是说，方法调用将作用在x的实际类型上。s是Student类型，它实际上拥有自己的whoAmI()方法以及从Person继承的whoAmI()方法，但调用s.whoAmI()总是先查找它自身的定义，如果没有定义，则顺着继承链向上查找，直到在某个父类中找到为止。<br>由于Python是动态语言，所以，传递给函数who_am_i(x)的参数x不一定是Person或Person的子类型。任何数据类型的实例都可以，只要它有一个whoAmI()的方法即可。<br>这是动态语言和静态语言（例如Java）最大的差别之一。<strong>动态语言调用实例方法，不检查类型，只要方法存在，参数正确，就可以调用</strong>。</p><h4 id="多重继承"><a href="#多重继承" class="headerlink" title="多重继承"></a>多重继承</h4><p>Python允许从多个父类继承，称为多重继承。多重继承的继承链就不是一棵树了，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, a)</span>:</span></span><br><span class="line">        print(<span class="string">'init A...'</span>)</span><br><span class="line">        self.a = a</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span><span class="params">(A)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, a)</span>:</span></span><br><span class="line">        super(B, self).__init__(a)</span><br><span class="line">        print(<span class="string">'init B...'</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span><span class="params">(A)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, a)</span>:</span></span><br><span class="line">        super(C, self).__init__(a)</span><br><span class="line">        print(<span class="string">'init C...'</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span><span class="params">(B, C)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, a)</span>:</span></span><br><span class="line">        super(D, self).__init__(a)</span><br><span class="line">        print(<span class="string">'init D...'</span>)</span><br><span class="line"></span><br><span class="line">d = D(<span class="string">'d'</span>)</span><br><span class="line"><span class="comment">#结果</span></span><br><span class="line">init A...</span><br><span class="line">init C...</span><br><span class="line">init B...</span><br><span class="line">init D...</span><br></pre></td></tr></table></figure><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py15-15.png" alt=" "></p><p>如上，D同时继承自B和C，D就拥有了A、B、C的全部功能。多重继承通过super()调用__init__()方法时，A虽然被继承了两次，但__init__()只调用一次。</p><p>多重继承的目的是从两种继承树中分别选择并继承出子类，以便组合功能使用。举个例子，Python的网络服务器有TCPServer、UDPServer、UnixStreamServer、UnixDatagramServer，而服务器运行模式有多进程ForkingMixin和多线程ThreadingMixin两种。要创建多进程模式的TCPServer和多线程模式的UDPServer分别如下，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyTCPServer</span><span class="params">(TCPServer, ForkingMixin)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyUDPServer</span><span class="params">(UDPServer, ThreadingMixin)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>如果没有多重继承，要实现上述所有可能的组合需要4x2=8个子类。</p><h4 id="判断变量类型"><a href="#判断变量类型" class="headerlink" title="判断变量类型"></a>判断变量类型</h4><p>函数isinstance()可以判断一个变量的类型，既可以用在Python内置的数据类型如str、list、dict，也可以用在自定义的类（它们本质上都是数据类型）。<br>假设有如下的Person、Student和Teacher的定义及继承关系如下，当拿到变量p、s、t时，可以使用isinstance判断类型，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, gender)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.gender = gender</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(Person)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, gender, score)</span>:</span></span><br><span class="line">        super(Student, self).__init__(name, gender)</span><br><span class="line">        self.score = score</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span><span class="params">(Person)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, gender, course)</span>:</span></span><br><span class="line">        super(Teacher, self).__init__(name, gender)</span><br><span class="line">        self.course = course</span><br><span class="line"></span><br><span class="line">p = Person(<span class="string">'Tim'</span>, <span class="string">'Male'</span>)</span><br><span class="line">s = Student(<span class="string">'Bob'</span>, <span class="string">'Male'</span>, <span class="number">88</span>)</span><br><span class="line">t = Teacher(<span class="string">'Alice'</span>, <span class="string">'Female'</span>, <span class="string">'English'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 考察p</span></span><br><span class="line">print(isinstance(p, Person))  <span class="comment">#True  p是Person类型</span></span><br><span class="line">print(isinstance(p, Student))  <span class="comment"># False  p不是Student类型</span></span><br><span class="line">print(isinstance(p, Teacher))  <span class="comment"># False  p不是Teacher类型</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 再考察s：</span></span><br><span class="line">print(isinstance(s, Person))  <span class="comment"># True  s是Person类型</span></span><br><span class="line">print(isinstance(s, Student))  <span class="comment"># True  s是Student类型</span></span><br><span class="line">print(isinstance(s, Teacher))  <span class="comment"># False  s不是Teacher类型</span></span><br></pre></td></tr></table></figure><p>对p的考察说明<strong>在继承链上，一个父类的实例不能是子类类型，因为子类比父类多了一些属性和方法</strong>。<br>考察s时，s是Student类型，不是Teacher类型。s也是Person类型，因为Student继承自Person，拥有Person的所有公开的属性和方法。这说明<strong>在一条继承链上，一个实例可以看成它本身的类型，也可以看成它父类的类型</strong>。</p><h4 id="获取对象信息"><a href="#获取对象信息" class="headerlink" title="获取对象信息"></a>获取对象信息</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, gender)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.gender = gender</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(Person)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, gender, score)</span>:</span></span><br><span class="line">        super(Student, self).__init__(name, gender)</span><br><span class="line">        self.score = score</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">whoAmI</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'I am a Student, my name is %s'</span> % self.name</span><br></pre></td></tr></table></figure><p>用<strong>type()函数获取变量的类型，它返回一个Type对象</strong>；用<strong>dir()函数获取变量的所有属性</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">print(type(<span class="number">123</span>))  <span class="comment"># &lt;type 'int'&gt;</span></span><br><span class="line">s = Student(<span class="string">'Bob'</span>, <span class="string">'Male'</span>, <span class="number">88</span>)</span><br><span class="line">print(type(s))  <span class="comment"># &lt;class '__main__.Student'&gt;</span></span><br><span class="line">print(dir(<span class="number">123</span>))   <span class="comment"># 整数也有很多属性...  # ['__abs__', '__add__', '__and__', '__class__', '__cmp__', ...]</span></span><br><span class="line">print(dir(s))</span><br><span class="line">[<span class="string">'__class__'</span>, <span class="string">'__delattr__'</span>, <span class="string">'__dict__'</span>, <span class="string">'__doc__'</span>, <span class="string">'__format__'</span>,</span><br><span class="line"> <span class="string">'__getattribute__'</span>, <span class="string">'__hash__'</span>, <span class="string">'__init__'</span>, <span class="string">'__module__'</span>, <span class="string">'__new__'</span>,</span><br><span class="line">  <span class="string">'__reduce__'</span>, <span class="string">'__reduce_ex__'</span>, <span class="string">'__repr__'</span>, <span class="string">'__setattr__'</span>, <span class="string">'__sizeof__'</span>, </span><br><span class="line">  <span class="string">'__str__'</span>, <span class="string">'__subclasshook__'</span>, <span class="string">'__weakref__'</span>, <span class="string">'gender'</span>, <span class="string">'name'</span>, <span class="string">'score'</span>, </span><br><span class="line">  <span class="string">'whoAmI'</span>]</span><br></pre></td></tr></table></figure><p>对于实例变量，dir()返回所有实例属性，包括&#39;__class__&#39;这类有特殊意义的属性。注意到方法&#39;whoAmI&#39;也是s的一个属性。<br>dir()返回的属性是字符串列表，如果已知一个属性名称，要获取或者设置对象的属性，就需要用getattr()和setattr()函数，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取name属性</span></span><br><span class="line">print(getattr(s, <span class="string">'name'</span>))  <span class="comment"># 'Bob'</span></span><br><span class="line"><span class="comment"># 设置新的name属性</span></span><br><span class="line">setattr(s, <span class="string">'name'</span>, <span class="string">'Adam'</span>)  </span><br><span class="line">print(s.name)   <span class="comment"># 'Adam'</span></span><br><span class="line"><span class="comment"># 获取age属性，但是属性不存在，报错</span></span><br><span class="line">print(getattr(s, <span class="string">'age'</span>))  </span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">AttributeError: <span class="string">'Student'</span> object has no attribute <span class="string">'age'</span></span><br><span class="line"><span class="comment"># 获取age属性，如果属性不存在，就返回默认值20</span></span><br><span class="line">print(getattr(s, <span class="string">'age'</span>, <span class="number">20</span>))  <span class="comment"># 20</span></span><br></pre></td></tr></table></figure></font></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Advan </category>
          
          <category> Object-oriented </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python进阶 </tag>
            
            <tag> 面向对象 </tag>
            
            <tag> 继承 </tag>
            
            <tag> 多态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python面向对象—类和实例的属性及方法</title>
      <link href="/2020/03/31/Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E2%80%94%E7%B1%BB%E5%92%8C%E5%AE%9E%E4%BE%8B%E7%9A%84%E5%B1%9E%E6%80%A7%E5%8F%8A%E6%96%B9%E6%B3%95/"/>
      <url>/2020/03/31/Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E2%80%94%E7%B1%BB%E5%92%8C%E5%AE%9E%E4%BE%8B%E7%9A%84%E5%B1%9E%E6%80%A7%E5%8F%8A%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="类属性和实例属性区别"><a href="#类属性和实例属性区别" class="headerlink" title="类属性和实例属性区别"></a>类属性和实例属性区别</h4><p><strong>类是模板，而实例则是根据类创建的对象</strong>。<a id="more"></a><br>绑定在一个实例上的属性不会影响其他实例，但是，类本身也是一个对象，如果在类上绑定一个属性，则所有实例都可以访问类的属性，并且，所有实例访问的类属性都是同一个。即<strong>实例属性每个实例各自拥有，互相独立，而类属性有且只有一份，所有实例共同拥有</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义类属性可以直接在class中定义</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    address = <span class="string">'Earth'</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line"><span class="comment"># 因为类属性是直接绑定在类上的，所以，访问类属性不需要创建实例，就可以直接访问</span></span><br><span class="line">print(Person.address)  <span class="comment"># =&gt; Earth</span></span><br><span class="line"><span class="comment"># 对一个实例调用类的属性也是可以访问的，所有实例都可以访问到它所属的类的属性</span></span><br><span class="line">p1 = Person(<span class="string">'Bob'</span>)</span><br><span class="line">p2 = Person(<span class="string">'Alice'</span>)</span><br><span class="line">print(p1.address)  <span class="comment"># =&gt; Earth</span></span><br><span class="line">print(p2.address)  <span class="comment"># =&gt; Earth</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 类属性也是可以动态添加和修改的</span></span><br><span class="line"><span class="comment">#因为类属性只有一份，所以，当Person类的address改变时，所有实例访问到的类属性都改变了</span></span><br><span class="line">Person.address = <span class="string">'China'</span></span><br><span class="line">print(p1.address)  <span class="comment"># =&gt; 'China'</span></span><br><span class="line">print(p2.address)  <span class="comment"># =&gt; 'China'</span></span><br></pre></td></tr></table></figure><h4 id="类属性和实例属性冲突"><a href="#类属性和实例属性冲突" class="headerlink" title="类属性和实例属性冲突"></a>类属性和实例属性冲突</h4><p>修改类属性会导致所有实例访问到的类属性全部都受影响。下面测试在实例对象上修改类属性，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    address = <span class="string">'Earth'</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">p1 = Person(<span class="string">'Bob'</span>)</span><br><span class="line">p2 = Person(<span class="string">'Alice'</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'Person.address = '</span> + Person.address)</span><br><span class="line"></span><br><span class="line">p1.address = <span class="string">'China'</span></span><br><span class="line">print(<span class="string">'p1.address = '</span> + p1.address)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'Person.address = '</span> + Person.address)</span><br><span class="line">print(<span class="string">'p2.address = '</span> + p2.address)</span><br><span class="line"></span><br><span class="line"><span class="comment">#结果如下：</span></span><br><span class="line">Person.address = Earth</span><br><span class="line">p1.address = China</span><br><span class="line">Person.address = Earth</span><br><span class="line">p2.address = Earth</span><br></pre></td></tr></table></figure><p>在设置了p1.address = &#39;China&#39;后，p1访问address确实变成了&#39;China&#39;，但是，Person.address和p2.address仍然是&#39;Earch&#39;。原因是p1.address = &#39;China&#39;并没有改变Person的address，而是给p1这个实例绑定了实例属性address，对p1来说，它有一个实例属性address（值是&#39;China&#39;），而它所属的类Person也有一个类属性address，所以访问p1.address时，优先查找实例属性，返回&#39;China&#39;；访问p2.address时，p2没有实例属性address，但是有类属性address，因此返回&#39;Earth&#39;。<br>可见，<strong>当实例属性和类属性重名时，实例属性优先级高，它将屏蔽掉对类属性的访问</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当p1的address实例属性删除后，p1.address就又返回类属性的值'Earth'了：</span></span><br><span class="line"><span class="keyword">del</span> p1.address</span><br><span class="line">print(p1.address)  <span class="comment"># =&gt; Earth</span></span><br></pre></td></tr></table></figure><h4 id="实例方法"><a href="#实例方法" class="headerlink" title="实例方法"></a>实例方法</h4><p>私有属性无法从类外部访问，但是从类的内部可以访问。除了可以定义实例的属性外，还可以定义实例的方法。<br><strong>实例方法就是在类中定义的函数，它的第一个参数永远是self，指向调用该方法的实例本身，其他参数和一个普通函数是完全一样的</strong>，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.__name = name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_name</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.__name</span><br></pre></td></tr></table></figure><p>如上，get_name(self)就是一个实例方法，它的第一个参数是self。__init__(self, name)其实也可看做是一个特殊的实例方法。<br><strong>调用实例方法必须通过实例调用</strong>，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p1 = Person(<span class="string">'Bob'</span>)</span><br><span class="line">print(p1.get_name())  <span class="comment"># self不需要显式传入</span></span><br><span class="line"><span class="comment"># =&gt; Bob</span></span><br></pre></td></tr></table></figure><p><strong>在实例方法内部，可以访问所有实例属性</strong>，这样，如果外部需要访问私有属性，可以通过方法调用获得，这种数据封装的形式除了能保护内部数据一致性外，还可以简化外部调用的难度。</p><h4 id="方法也是属性"><a href="#方法也是属性" class="headerlink" title="方法也是属性"></a>方法也是属性</h4><p>在class中定义的实例方法其实也是属性，它实际上是一个函数对象，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, score)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.score = score</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_grade</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'A'</span></span><br><span class="line"></span><br><span class="line">p1 = Person(<span class="string">'Bob'</span>, <span class="number">90</span>)</span><br><span class="line">print(p1.get_grade)  <span class="comment"># =&gt; &lt;bound method Person.get_grade of &lt;__main__.Person object at 0x109e58510&gt;&gt;</span></span><br><span class="line">print(p1.get_grade())  <span class="comment"># =&gt; A</span></span><br></pre></td></tr></table></figure><p>如上，p1.get_grade返回的是一个函数对象，p1.get_grade()才是方法调用。<br>因为方法也是一个属性，所以，它也可以动态地添加到实例上，只是需要用types.MethodType()把一个函数变为一个实例方法，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> types</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fn_get_grade</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> self.score &gt;= <span class="number">80</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'A'</span></span><br><span class="line">    <span class="keyword">if</span> self.score &gt;= <span class="number">60</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'B'</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'C'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, score)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.score = score</span><br><span class="line"></span><br><span class="line">p1 = Person(<span class="string">'Bob'</span>, <span class="number">90</span>)</span><br><span class="line">p1.get_grade = types.MethodType(fn_get_grade, p1)</span><br><span class="line">print(p1.get_grade())  <span class="comment"># =&gt; A</span></span><br><span class="line">p2 = Person(<span class="string">'Alice'</span>, <span class="number">65</span>)</span><br><span class="line">print(p2.get_grade())  <span class="comment"># ERROR: AttributeError: 'Person' object has no attribute 'get_grade'</span></span><br><span class="line"><span class="comment"># 因为p2实例并没有绑定get_grade</span></span><br></pre></td></tr></table></figure><p>给一个实例动态添加方法并不常见，直接在class中定义要更直观。</p><h4 id="类方法"><a href="#类方法" class="headerlink" title="类方法"></a>类方法</h4><p><strong>在class中定义的全部是实例方法，实例方法第一个参数self是实例本身</strong>。在class中定义类方法，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">how_many</span><span class="params">(cls)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> cls.count</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        Person.count = Person.count + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">print(Person.how_many())</span><br><span class="line">p1 = Person(<span class="string">'Bob'</span>)</span><br><span class="line">print(Person.how_many())</span><br></pre></td></tr></table></figure><p><strong>通过标记一个@classmethod，该方法将绑定到Person类，而非类的实例上</strong>。<strong>类方法的第一个参数将传入类本身，通常将参数名命名为cls，上面的cls.count实际上相当于Person.count</strong>。<br>因为是在类上调用，而非实例上调用，因此<strong>类方法无法获得任何实例变量，只能获得类的引用</strong>。<br></p></font><p></p></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Advan </category>
          
          <category> Object-oriented </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python进阶 </tag>
            
            <tag> 面向对象 </tag>
            
            <tag> 类方法 </tag>
            
            <tag> 实例方法 </tag>
            
            <tag> 类属性 </tag>
            
            <tag> 实例属性 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python面向对象—类的定义和实例创建</title>
      <link href="/2020/03/31/Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E2%80%94%E7%B1%BB%E7%9A%84%E5%AE%9A%E4%B9%89%E5%92%8C%E5%AE%9E%E4%BE%8B%E5%88%9B%E5%BB%BA/"/>
      <url>/2020/03/31/Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E2%80%94%E7%B1%BB%E7%9A%84%E5%AE%9A%E4%B9%89%E5%92%8C%E5%AE%9E%E4%BE%8B%E5%88%9B%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="面向对象编程简介"><a href="#面向对象编程简介" class="headerlink" title="面向对象编程简介"></a>面向对象编程简介</h4><p>面向对象编程是一种程序设计范式，把程序看做不同对象的相互调用，对现实世界建立对象模型。<a id="more"></a><br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py14-1.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py14-2.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py14-3.png" alt=" "></p><h4 id="定义类并创建实例"><a href="#定义类并创建实例" class="headerlink" title="定义类并创建实例"></a>定义类并创建实例</h4><h5 id="类的定义"><a href="#类的定义" class="headerlink" title="类的定义"></a>类的定义</h5><p>在Python中，类通过class关键字定义。以Person为例，定义一个Person类如下，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>按照Python的编程习惯，类名以大写字母开头，紧接着是(object)，表示该类是从哪个类继承下来的。根据现有类创建实例如下，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xiaoming = Person()</span><br><span class="line">xiaohong = Person()</span><br></pre></td></tr></table></figure><h5 id="创建实例属性"><a href="#创建实例属性" class="headerlink" title="创建实例属性"></a>创建实例属性</h5><p>每一个实例，都可以直接给它们的属性赋不同的值，实例的属性可以像普通变量一样进行操作，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 给xiaoming加上name、gender和birth属性</span></span><br><span class="line">xiaoming = Person()</span><br><span class="line">xiaoming.name = <span class="string">'Xiao Ming'</span></span><br><span class="line">xiaoming.gender = <span class="string">'Male'</span></span><br><span class="line">xiaoming.birth = <span class="string">'1990-1-1'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 给xiaohong加上的属性不一定要和xiaoming相同</span></span><br><span class="line">xiaohong = Person()</span><br><span class="line">xiaohong.name = <span class="string">'Xiao Hong'</span></span><br><span class="line">xiaohong.school = <span class="string">'No. 1 High School'</span></span><br><span class="line">xiaohong.grade = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">xiaohong.grade = xiaohong.grade + <span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="初始化实例属性"><a href="#初始化实例属性" class="headerlink" title="初始化实例属性"></a>初始化实例属性</h4><p>在定义Person类时，可以为Person类添加一个特殊的__init__()方法。当创建实例时，__init__()方法被自动调用，就能为每个实例都统一加上某些属性，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, gender, birth)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.gender = gender</span><br><span class="line">        self.birth = birth</span><br></pre></td></tr></table></figure><p><strong>__init__()方法的第一个参数必须是self（也可以用别的名字，但建议使用习惯用法），后续参数则可以自由指定，和定义函数没有任何区别</strong>。<br>相应地，创建实例时，就必须要提供除self以外的参数，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xiaoming = Person(<span class="string">'Xiao Ming'</span>, <span class="string">'Male'</span>, <span class="string">'1991-1-1'</span>)</span><br><span class="line">xiaohong = Person(<span class="string">'Xiao Hong'</span>, <span class="string">'Female'</span>, <span class="string">'1992-2-2'</span>)</span><br></pre></td></tr></table></figure><p>有了上述__init__()方法，每个Person实例在创建时，都会有name、gender和birth这3个属性，并且，被赋予不同的属性值，访问属性使用“.”操作符，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(xiaoming.name)  <span class="comment"># 输出 'Xiao Ming'</span></span><br><span class="line">print(xiaohong.birth)  <span class="comment"># 输出 '1992-2-2'</span></span><br></pre></td></tr></table></figure><p>要特别注意的是，定义__init__()方法一定不能忘记self参数，否则会导致创建失败或运行不正常，因为第一个参数name被Python解释器传入了实例的引用，从而导致整个方法的调用参数位置全部没有对上。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">     <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(name, gender, birth)</span>:</span></span><br><span class="line">         <span class="keyword">pass</span></span><br><span class="line">xiaoming = Person(<span class="string">'Xiao Ming'</span>, <span class="string">'Male'</span>, <span class="string">'1990-1-1'</span>)</span><br><span class="line"></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: __init__() takes exactly <span class="number">3</span> arguments (<span class="number">4</span> given)</span><br></pre></td></tr></table></figure><p>如果要接受任意关键字参数，允许把其作为属性赋值给实例，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,gender,birth,**kw)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.gender = gender</span><br><span class="line">        self.birth = birth</span><br><span class="line">        <span class="keyword">for</span> k,v <span class="keyword">in</span> kw.items():</span><br><span class="line">            setattr(self,k,v)</span><br><span class="line"></span><br><span class="line">xiaoming = Person(<span class="string">'Xiao Ming'</span>, <span class="string">'Male'</span>, <span class="string">'1990-1-1'</span>, job=<span class="string">'Student'</span>)</span><br><span class="line"></span><br><span class="line">print(xiaoming.name)</span><br><span class="line">print(xiaoming.job)</span><br></pre></td></tr></table></figure><h4 id="访问限制"><a href="#访问限制" class="headerlink" title="访问限制"></a>访问限制</h4><p><strong>Python对属性权限的控制是通过属性名来实现的，如果一个属性由双下划线开头(__)，该属性就无法被外部访问</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self._title = <span class="string">'Mr'</span></span><br><span class="line">        self.__job = <span class="string">'Student'</span></span><br><span class="line">p = Person(<span class="string">'Bob'</span>)</span><br><span class="line"><span class="keyword">print</span> p.name  <span class="comment"># =&gt; Bob</span></span><br><span class="line"><span class="keyword">print</span> p._title  <span class="comment"># =&gt; Mr</span></span><br><span class="line"><span class="keyword">print</span> p.__job  <span class="comment"># =&gt; Error</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">AttributeError: <span class="string">'Person'</span> object has no attribute <span class="string">'__job'</span></span><br></pre></td></tr></table></figure><p>可见，只有以双下划线开头的&quot;__job&quot;不能直接被外部访问。但是，<strong>如果一个属性以&quot;__xxx__&quot;的形式定义，那它又可以被外部访问了，以&quot;__xxx__&quot;定义的属性在Python的类中被称为特殊属性，有很多预定义的特殊属性可以使用，通常不要把普通属性用&quot;__xxx__&quot;定义</strong>。<strong>以单下划线开头的属性&quot;_xxx&quot;虽然也可以被外部访问，但是，按照习惯，它们不应该被外部访问</strong>。<br></p></font><p></p></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Advan </category>
          
          <category> Object-oriented </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python进阶 </tag>
            
            <tag> 面向对象 </tag>
            
            <tag> 类的定义 </tag>
            
            <tag> 实例创建 </tag>
            
            <tag> 初始化实例 </tag>
            
            <tag> 权限控制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python列表生成式</title>
      <link href="/2020/03/31/Python%E5%88%97%E8%A1%A8%E7%94%9F%E6%88%90%E5%BC%8F/"/>
      <url>/2020/03/31/Python%E5%88%97%E8%A1%A8%E7%94%9F%E6%88%90%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><p>要生成list [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]，可以用range(1, 11)：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>range(<span class="number">1</span>, <span class="number">11</span>)  <span class="comment"># [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>但如果要生成[1x1, 2x2, 3x3, …, 10x10]方法一是循环：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">L = []</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">    L.append(x * x)</span><br><span class="line">print(L)  <span class="comment"># [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]</span></span><br></pre></td></tr></table></figure><p>但是循环太繁琐，而列表生成式则可以用一行语句代替循环生成上面的list：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print([x * x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>)])  <span class="comment"># [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]</span></span><br></pre></td></tr></table></figure><p>这种写法就是Python特有的列表生成式。利用列表生成式，可以以简洁的代码生成list。写列表生成式时，把要生成的元素x*x放到前面，后面跟for循环，就可以把list创建出来。</p><h5 id="复杂表达式"><a href="#复杂表达式" class="headerlink" title="复杂表达式"></a>复杂表达式</h5><p>使用for循环的迭代不仅可以迭代普通的list，还可以迭代dict。比如一个dict如下，可以通过一个复杂的列表生成式把它变成一个HTML表格，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">d = &#123; <span class="string">'Adam'</span>: <span class="number">95</span>, <span class="string">'Lisa'</span>: <span class="number">85</span>, <span class="string">'Bart'</span>: <span class="number">59</span> &#125;</span><br><span class="line">tds = [<span class="string">'&lt;tr&gt;&lt;td&gt;%s&lt;/td&gt;&lt;td&gt;%s&lt;/td&gt;&lt;/tr&gt;'</span> % (name, score) <span class="keyword">for</span> name, score <span class="keyword">in</span> d.iteritems()]</span><br><span class="line"><span class="keyword">print</span> <span class="string">'&lt;table&gt;'</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'&lt;tr&gt;&lt;th&gt;Name&lt;/th&gt;&lt;th&gt;Score&lt;/th&gt;&lt;tr&gt;'</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'\n'</span>.join(tds)</span><br><span class="line"><span class="keyword">print</span> <span class="string">'&lt;/table&gt;'</span></span><br></pre></td></tr></table></figure><p>注：字符串可以通过%进行格式化，用指定的参数替代%s。字符串的join()方法可以把一个list拼接成一个字符串。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>Score<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Lisa<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>85<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Adam<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>95<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Bart<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>59<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将以上打印出来的结果保存为一个html文件，就可以在浏览器中看到效果了：<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py12-1.png" alt=" "></p><h5 id="条件过滤"><a href="#条件过滤" class="headerlink" title="条件过滤"></a>条件过滤</h5><p>列表生成式的for循环后面还可以加上if判断。如上平方的列表生成式，如果只想要偶数的平方，不改动range()的情况下，可以加上if来筛选，有了if条件，只有if判断为True的时候，才把循环的当前元素添加到列表中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print([x * x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>) <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span>])  <span class="comment"># [4, 16, 36, 64, 100]</span></span><br></pre></td></tr></table></figure><h5 id="多层表达式"><a href="#多层表达式" class="headerlink" title="多层表达式"></a>多层表达式</h5><p>for循环可以嵌套，因此，在列表生成式中，也可以用多层for循环来生成列表。<br>对于字符串’ABC’和’123’，可以使用两层循环，生成全排列：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">print([m + n <span class="keyword">for</span> m <span class="keyword">in</span> <span class="string">'ABC'</span> <span class="keyword">for</span> n <span class="keyword">in</span> <span class="string">'123'</span>])</span><br><span class="line"><span class="comment"># ['A1', 'A2', 'A3', 'B1', 'B2', 'B3', 'C1', 'C2', 'C3']</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 等价于</span></span><br><span class="line">L = []</span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> <span class="string">'ABC'</span>:</span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> <span class="string">'123'</span>:</span><br><span class="line">        L.append(m + n)</span><br><span class="line">print(L)</span><br></pre></td></tr></table></figure></font></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Basis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python基础 </tag>
            
            <tag> 列表生成式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中迭代</title>
      <link href="/2020/03/31/Python%E8%BF%AD%E4%BB%A3/"/>
      <url>/2020/03/31/Python%E8%BF%AD%E4%BB%A3/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><p>在Python中，如果给定一list或tuple，通过for循环可以遍历，这种遍历称为迭代（Iteration）。<br>Python的for循环可以作用在任何可迭代对象上。因此，迭代操作就是对于一个集合，无论该集合是有序还是无序，用for循环总是可以依次取出集合的每一个元素。<a id="more"></a></p><p>注意：集合是指包含一组元素的数据结构，包括：<br><strong>1.有序集合：list，tuple，str和unicode；<br>2.无序集合：set<br>3.无序集合并且具有key-value对：dict</strong><br>而迭代是一个动词，是一种操作，在Python中就是指for循环。<br>迭代与按下标访问数组最大的不同是，后者是一种具体的迭代实现方式，而前者只关心迭代结果，根本不关心迭代内部是如何实现的。</p><h5 id="索引迭代"><a href="#索引迭代" class="headerlink" title="索引迭代"></a>索引迭代</h5><p>Python中，迭代永远是取出元素本身，而非元素的索引。<br>对于有序集合，元素确实是有索引的。有时需要在for循环中拿到索引，方法是使用enumerate()函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">L = [<span class="string">'Adam'</span>, <span class="string">'Lisa'</span>, <span class="string">'Bart'</span>, <span class="string">'Paul'</span>]</span><br><span class="line"><span class="keyword">for</span> index, name <span class="keyword">in</span> enumerate(L):</span><br><span class="line">    <span class="keyword">print</span> index, <span class="string">'-'</span>, name</span><br><span class="line"></span><br><span class="line"><span class="number">0</span> - Adam</span><br><span class="line"><span class="number">1</span> - Lisa</span><br><span class="line"><span class="number">2</span> - Bart</span><br><span class="line"><span class="number">3</span> - Paul</span><br></pre></td></tr></table></figure><p>使用enumerate()函数，可以在for循环中同时绑定索引index和元素name。实际上，enumerate()函数把：[&#39;Adam&#39;, &#39;Lisa&#39;, &#39;Bart&#39;, &#39;Paul&#39;]变成了类似：[(0, &#39;Adam&#39;), (1, &#39;Lisa&#39;), (2, &#39;Bart&#39;), (3, &#39;Paul&#39;)]。因此，迭代的每一个元素实际上是一个tuple：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> enumerate(L):</span><br><span class="line">    index = t[<span class="number">0</span>]</span><br><span class="line">    name = t[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">print</span> index, <span class="string">'-'</span>, name</span><br></pre></td></tr></table></figure><p>可见，索引迭代也不是真的按索引访问，而是由<strong>enumerate() 函数自动把每个元素变成(index, element)这样的tuple</strong>，再迭代，就同时获得了索引和元素本身。</p><h5 id="迭代dict的value"><a href="#迭代dict的value" class="headerlink" title="迭代dict的value"></a>迭代dict的value</h5><p>dict对象本身就是可迭代对象，用for循环直接迭代dict，可以每次拿到dict的一个key。<br>如果迭代dict对象的value，dict对象有一个values()方法，这个方法把dict转换成一个包含所有value的list，这样，我们迭代的就是dict的每一个value：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">d = &#123; <span class="string">'Adam'</span>: <span class="number">95</span>, <span class="string">'Lisa'</span>: <span class="number">85</span>, <span class="string">'Bart'</span>: <span class="number">59</span> &#125;</span><br><span class="line"><span class="keyword">print</span> d.values()  <span class="comment"># [85, 95, 59]</span></span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> d.values():</span><br><span class="line">    <span class="keyword">print</span> v</span><br><span class="line"><span class="comment"># 85</span></span><br><span class="line"><span class="comment"># 95</span></span><br><span class="line"><span class="comment"># 59</span></span><br></pre></td></tr></table></figure><p>dict除了values()方法外，还有一个itervalues()方法，用itervalues()方法替代values()方法，迭代效果完全一样：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> d.itervalues()</span><br><span class="line"><span class="comment"># &lt;dictionary-valueiterator object at 0x106adbb50&gt;</span></span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> d.itervalues():</span><br><span class="line">         <span class="keyword">print</span> v</span><br><span class="line"><span class="comment"># 85</span></span><br><span class="line"><span class="comment"># 95</span></span><br><span class="line"><span class="comment"># 59</span></span><br></pre></td></tr></table></figure><p>这两个方法区别：<br>1.values()方法实际上把一个dict转换成了包含value的list。<br>2.但是itervalues()方法不会转换，它会在迭代过程中依次从dict中取出 value，所以itervalues()方法比values()方法节省了生成list所需的内存。<br>3.打印itervalues()发现它返回一个<dictionary-valueiterator>对象，这说明在Python中，for循环可作用的迭代对象远不止list，tuple，str，unicode，dict等，任何可迭代对象都可以作用于for循环，而内部如何迭代通常并不用关心。</dictionary-valueiterator></p><p>如果一个对象可迭代，那就直接用for循环去迭代它，可见，迭代是一种抽象的数据操作，它不对迭代对象内部的数据有任何要求。</p><h5 id="迭代dict的key和value"><a href="#迭代dict的key和value" class="headerlink" title="迭代dict的key和value"></a>迭代dict的key和value</h5><p>items()方法把dict对象转换成了包含tuple的list，对这个list进行迭代，可以同时获得key和value：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> d.items():</span><br><span class="line">    <span class="keyword">print</span> key, <span class="string">':'</span>, value</span><br><span class="line"></span><br><span class="line">Lisa : <span class="number">85</span></span><br><span class="line">Adam : <span class="number">95</span></span><br><span class="line">Bart : <span class="number">59</span></span><br></pre></td></tr></table></figure><p>类似values()对应itervalues()，items()也有对应的iteritems()，iteritems()不把dict转换成list，而是在迭代过程中不断给出tuple，所以，iteritems()不占用额外的内存。</p></font></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Basis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python基础 </tag>
            
            <tag> 迭代 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python切片操作</title>
      <link href="/2020/03/31/Python%E5%88%87%E7%89%87%E6%93%8D%E4%BD%9C/"/>
      <url>/2020/03/31/Python%E5%88%87%E7%89%87%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h5 id="list切片"><a href="#list切片" class="headerlink" title="list切片"></a>list切片</h5><p>Python提供了切片（Slice）操作符“<strong>:</strong>”，简化取指定索引范围的操作。<br>L = [&#39;Adam&#39;, &#39;Lisa&#39;, &#39;Bart&#39;, &#39;Paul&#39;]取前3个元素，用<strong>L[0:3]实现，表示从索引0开始取，直到索引3为止，但不包括索引3</strong>。<a id="more"></a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">L[<span class="number">0</span>:<span class="number">3</span>]  <span class="comment"># ['Adam', 'Lisa', 'Bart']</span></span><br><span class="line"><span class="comment"># 如果第一个索引是0，可以省略</span></span><br><span class="line">L[:<span class="number">3</span>]  <span class="comment"># ['Adam', 'Lisa', 'Bart']</span></span><br><span class="line"><span class="comment"># 也可以从索引1开始，取出2个元素出来</span></span><br><span class="line">L[<span class="number">1</span>:<span class="number">3</span>]  <span class="comment"># ['Lisa', 'Bart']</span></span><br><span class="line"><span class="comment"># 只用一个“:”，表示从头到尾取出所有元素，L[:]实际上复制出了一个新list</span></span><br><span class="line">L[:]  <span class="comment"># ['Adam', 'Lisa', 'Bart', 'Paul']</span></span><br></pre></td></tr></table></figure><p>切片操作还可以指定第三个参数，<strong>第三个参数表示每N个元素取一个</strong>，上面的L[::2]会每两个元素取出一个来，也就是隔一个取一个。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">L[::<span class="number">2</span>]  <span class="comment"># ['Adam', 'Bart']</span></span><br></pre></td></tr></table></figure><p>把list换成tuple，切片操作完全相同，只是切片的结果也变成了tuple。</p><h5 id="倒序切片"><a href="#倒序切片" class="headerlink" title="倒序切片"></a>倒序切片</h5><p>对于list，既然Python支持L[-1]取倒数第一个元素，那么它同样支持倒数切片，如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">L = [<span class="string">'Adam'</span>, <span class="string">'Lisa'</span>, <span class="string">'Bart'</span>, <span class="string">'Paul'</span>]</span><br><span class="line">L[<span class="number">-2</span>:]  <span class="comment"># ['Bart', 'Paul']</span></span><br><span class="line">L[:<span class="number">-2</span>]  <span class="comment"># ['Adam', 'Lisa']</span></span><br><span class="line">L[<span class="number">-3</span>:<span class="number">-1</span>]  <span class="comment"># ['Lisa', 'Bart']</span></span><br><span class="line">L[<span class="number">-4</span>:<span class="number">-1</span>:<span class="number">2</span>]  <span class="comment"># ['Adam', 'Bart']</span></span><br></pre></td></tr></table></figure><p><strong>倒数第一个元素的索引是-1。倒序切片包含起始索引，不包含结束索引</strong>。</p><h5 id="字符串切片"><a href="#字符串切片" class="headerlink" title="字符串切片"></a>字符串切片</h5><p>字符串’xxx’和Unicode字符串u’xxx’（Python3不再需要u）也可以看成是一种list，每个元素就是一个字符。因此，字符串也可以用切片操作，只是操作结果仍是字符串：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'ABCDEFG'</span>[:<span class="number">3</span>]  <span class="comment"># 'ABC'</span></span><br><span class="line"><span class="string">'ABCDEFG'</span>[<span class="number">-3</span>:]  <span class="comment"># 'EFG'</span></span><br><span class="line"><span class="string">'ABCDEFG'</span>[::<span class="number">2</span>]  <span class="comment"># 'ACEG'</span></span><br></pre></td></tr></table></figure><p>在很多编程语言中，针对字符串提供了很多各种截取函数，其实目的就是对字符串切片。Python没有针对字符串的截取函数，只需要切片操作就可以完成。</p></font></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Basis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python基础 </tag>
            
            <tag> 切片 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中set类型</title>
      <link href="/2020/03/31/Python%E4%B8%ADset%E7%B1%BB%E5%9E%8B/"/>
      <url>/2020/03/31/Python%E4%B8%ADset%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><p>set像list一样，有一系列元素，但是<strong>set的元素没有重复，而且是无序的</strong>，这和dict的key很像。</p><a id="more"></a><h5 id="set的特点"><a href="#set的特点" class="headerlink" title="set的特点"></a>set的特点</h5><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py10-1.png" alt=" "></p><p>set的内部结构和dict很像，唯一区别是<strong>不存储value</strong>，因此，判断一个元素是否在set中速度很快。<br><strong>set存储的元素和dict的key类似，必须是不变对象，因此，任何可变对象是不能放入set中的</strong>。<br><strong>set存储的元素也是没有顺序的</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">weekdays = set([<span class="string">'MON'</span>, <span class="string">'TUE'</span>, <span class="string">'WED'</span>, <span class="string">'THU'</span>, <span class="string">'FRI'</span>, <span class="string">'SAT'</span>, <span class="string">'SUN'</span>])</span><br><span class="line">x = input() <span class="comment"># 用户输入的字符串</span></span><br><span class="line"><span class="keyword">if</span> x <span class="keyword">in</span> weekdays:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'input ok'</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'input error'</span></span><br></pre></td></tr></table></figure><h5 id="set的处理方法"><a href="#set的处理方法" class="headerlink" title="set的处理方法"></a>set的处理方法</h5><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py10-2.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py10-3.png" alt=" "></p><h5 id="创建set"><a href="#创建set" class="headerlink" title="创建set"></a>创建set</h5><p>可以直接通过<strong>{}</strong>创建set，亦可以调用set()函数（可以理解为强制类型转换）创建。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">set1 = &#123;<span class="string">'123'</span>,<span class="string">'1'</span>,<span class="string">'2'</span>&#125;</span><br><span class="line">print(set1)  <span class="comment"># &#123;'123','1','2'&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 传入一个list，list的元素将作为set的元素：</span></span><br><span class="line">s = set([<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>])</span><br><span class="line">print(s)  <span class="comment"># &#123;'A', 'C', 'B'&#125;</span></span><br><span class="line"></span><br><span class="line">s = set(<span class="string">'12345'</span>)</span><br><span class="line">print(s)  <span class="comment"># &#123;'1','2','3','4','5'&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 传入包含重复元素的list,set会自动去掉重复元素</span></span><br><span class="line"><span class="comment"># 如下，原来的list有4个元素，但set只有3个元素</span></span><br><span class="line">s = set([<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'C'</span>])</span><br><span class="line">print(s)  <span class="comment"># &#123;'A', 'C', 'B'&#125;</span></span><br><span class="line">len(s)  <span class="comment"># 3</span></span><br></pre></td></tr></table></figure><h5 id="访问set"><a href="#访问set" class="headerlink" title="访问set"></a>访问set</h5><p>访问set中的某个元素实际上就是判断一个元素是否在set中。由于set也是一个集合，所以，遍历set和遍历list类似，都可以通过for循环实现。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s = set([<span class="string">'Adam'</span>, <span class="string">'Lisa'</span>, <span class="string">'Bart'</span>, <span class="string">'Paul'</span>])</span><br><span class="line">print(<span class="string">'bart'</span> <span class="keyword">in</span> s)  <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line">s = set([<span class="string">'Adam'</span>, <span class="string">'Lisa'</span>, <span class="string">'Bart'</span>])</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> s:</span><br><span class="line">    print(name)</span><br></pre></td></tr></table></figure><h5 id="更新set"><a href="#更新set" class="headerlink" title="更新set"></a>更新set</h5><p>由于set存储的是一组不重复的无序元素，因此，更新set操作主要是添加新元素到set中和删除set已有元素两种。<br>添加元素时，用set的add()方法。如果添加的元素已经存在，add()不会报错，但是不再添加：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s = set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">s.add(<span class="number">4</span>)</span><br><span class="line">print(s)  <span class="comment"># &#123;1, 2, 3, 4&#125;</span></span><br><span class="line"></span><br><span class="line">s = set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">s.add(<span class="number">3</span>)</span><br><span class="line">print(s)  <span class="comment"># &#123;1, 2, 3&#125;</span></span><br></pre></td></tr></table></figure><p>删除元素时，用set的remove()方法。如果删除的元素不存在set中，remove()会报错：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">s = set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">s.remove(<span class="number">4</span>)</span><br><span class="line">print(s)  <span class="comment"># &#123;1, 2, 3&#125;</span></span><br><span class="line"></span><br><span class="line">s = set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">s.remove(<span class="number">4</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">      File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">KeyError: <span class="number">4</span></span><br></pre></td></tr></table></figure><p>所以<strong>用add()可以直接添加，而使用remove()前需要判断</strong>。</p><h5 id="set操作符"><a href="#set操作符" class="headerlink" title="set操作符"></a>set操作符</h5><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py10-4.png" alt=" "></p><p>另有&lt;=，&lt;，&gt;=，&gt;两组关系操作符判断集合的包含关系。<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py10-5.png" alt=" "></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">A = &#123;<span class="string">'p'</span>, <span class="string">'y'</span>, <span class="string">'123'</span>&#125;</span><br><span class="line">B = set(<span class="string">'pypy123'</span>)  <span class="comment">#B = &#123;'p', 'y', '1', '2', '3'&#125;</span></span><br><span class="line"></span><br><span class="line">A |= B</span><br><span class="line">print(A)  <span class="comment"># &#123;'p','y','123','1','2','3'&#125;</span></span><br><span class="line"></span><br><span class="line">A -= B</span><br><span class="line">print(A)  <span class="comment"># &#123;'123'&#125;</span></span><br><span class="line"></span><br><span class="line">A &amp;= B</span><br><span class="line">print(A)  <span class="comment"># &#123;'p','y'&#125;</span></span><br><span class="line"></span><br><span class="line">A ^= B</span><br><span class="line">print(A)  <span class="comment"># &#123;'123','1','2','3'&#125;</span></span><br></pre></td></tr></table></figure><h5 id="set应用"><a href="#set应用" class="headerlink" title="set应用"></a>set应用</h5><p>1.关系比较（判断包含关系）<br>2.数据去重</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">l = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>]</span><br><span class="line">s = set(l)</span><br><span class="line">l = list(s)</span><br><span class="line">print(l)</span><br></pre></td></tr></table></figure></font></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Basis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python基础 </tag>
            
            <tag> set </tag>
            
            <tag> 集合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中dict类型</title>
      <link href="/2020/03/31/Python%E4%B8%ADdict%E7%B1%BB%E5%9E%8B/"/>
      <url>/2020/03/31/Python%E4%B8%ADdict%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py9-1.png" alt=" "><a id="more"></a></p><p>Python中list和tuple可以用来表示顺序集合，例如，班里同学的名字：[‘Adam’, ‘Lisa’, ‘Bart’]或者考试的成绩列表：[95, 85, 59]。<br>Python用dict表示“名字”-“成绩”的查找表如下，<strong>花括号{}表示这是一个dict，然后按照key: value,写出来即可</strong>。最后一个key: value的逗号可以省略。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">d = &#123;</span><br><span class="line">    <span class="string">'Adam'</span>: <span class="number">95</span>,</span><br><span class="line">    <span class="string">'Lisa'</span>: <span class="number">85</span>,</span><br><span class="line">    <span class="string">'Bart'</span>: <span class="number">59</span></span><br><span class="line">&#125;</span><br><span class="line">print(len(d)) <span class="comment"># 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增键值对 Cindy:65</span></span><br><span class="line">d[<span class="string">'Cindy'</span>] = <span class="number">65</span></span><br></pre></td></tr></table></figure><h5 id="dict访问"><a href="#dict访问" class="headerlink" title="dict访问"></a>dict访问</h5><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py9-2.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py9-3.png" alt=" "></p><p>对于以上Dict，使用d[key]的形式来查找对应的value，这和list很像，不同之处是，<strong>list必须使用索引返回对应的元素，而dict使用key</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> (d[<span class="string">'Adam'</span>]) <span class="comment"># 95</span></span><br><span class="line"><span class="keyword">print</span> (d[<span class="string">'Paul'</span>])</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"index.py"</span>, line <span class="number">11</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="keyword">print</span> d[<span class="string">'Paul'</span>]</span><br><span class="line">KeyError: <span class="string">'Paul'</span></span><br></pre></td></tr></table></figure><p>注意:通过key访问dict的value，只要key存在，dict就返回对应的value。如果key不存在，会直接报错：KeyError。要避免KeyError发生，有两个办法：<br>一是先判断一下key是否存在，如果&#39;Paul&#39;不存在，if语句判断为False，自然不会执行print d[&#39;Paul&#39;]，从而避免了错误。用in操作符：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="string">'Paul'</span> <span class="keyword">in</span> d:</span><br><span class="line">    <span class="keyword">print</span> (d[<span class="string">'Paul'</span>])</span><br></pre></td></tr></table></figure><p>二是使用dict本身提供的一个get方法，在key不存在的时候，返回None：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> (d.get(<span class="string">'Bart'</span>)) <span class="comment"># 59</span></span><br><span class="line"><span class="keyword">print</span> (d.get(<span class="string">'Paul'</span>)) <span class="comment"># None</span></span><br></pre></td></tr></table></figure><h5 id="dict特点"><a href="#dict特点" class="headerlink" title="dict特点"></a>dict特点</h5><p>dict的第一个特点是<strong>查找速度快</strong>，无论dict有10个元素还是10万个元素，查找速度都一样。而list的查找速度随着元素增加而逐渐下降。不过dict的查找速度快不是没有代价的，<strong>dict的缺点是占用内存大，还会浪费很多内容，list正好相反，占用内存小，但是查找速度慢</strong>。<br>由于dict是按key查找，所以，<strong>在一个dict中，key不能重复</strong>。</p><p>dict的第二个特点就是<strong>存储的key-value序对是没有顺序的</strong>！而list是有序的，当打印以上dict时，打印的顺序不一定是创建时的顺序，而且，不同的机器打印的顺序都可能不同，这说明dict内部是无序的，不能用dict存储有序的集合。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> (d) <span class="comment"># &#123;'Lisa': 85, 'Adam': 95, 'Bart': 59&#125;</span></span><br></pre></td></tr></table></figure><p>dict的第三个特点是<strong>作为key的元素必须不可变，Python的基本类型如字符串、整数、浮点数都是不可变的，都可以作为key。但是list是可变的，就不能作为key</strong>。<br><strong>不可变这个限制仅作用于key，value是否可变无所谓</strong>。</p><h5 id="更新dict"><a href="#更新dict" class="headerlink" title="更新dict"></a>更新dict</h5><p>dict是可变的，可以随时往dict中添加新的key-value。如果key已经存在，则赋值会用新的value替换掉原来的value：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">d[<span class="string">'Paul'</span>] = <span class="number">72</span></span><br><span class="line"><span class="keyword">print</span> (d) <span class="comment"># &#123;'Lisa': 85, 'Paul': 72, 'Adam': 95, 'Bart': 59&#125;</span></span><br><span class="line"></span><br><span class="line">d[<span class="string">'Bart'</span>] = <span class="number">60</span></span><br><span class="line">print(d) <span class="comment"># &#123;'Lisa': 85, 'Paul': 72, 'Adam': 95, 'Bart': 60&#125;</span></span><br></pre></td></tr></table></figure><h5 id="遍历dict"><a href="#遍历dict" class="headerlink" title="遍历dict"></a>遍历dict</h5><p>由于dict也是一个集合，所以，遍历dict和遍历list类似，都可以通过for循环实现。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 直接使用for循环可以遍历dict的key：</span></span><br><span class="line">d = &#123; <span class="string">'Adam'</span>: <span class="number">95</span>, <span class="string">'Lisa'</span>: <span class="number">85</span>, <span class="string">'Bart'</span>: <span class="number">59</span> &#125;</span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> d:</span><br><span class="line">    print(key)</span><br><span class="line">Lisa</span><br><span class="line">Adam</span><br><span class="line">Bart</span><br></pre></td></tr></table></figure><p>由于通过key可以获取对应的value，因此，在循环体内，可以获取到value的值。<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py9-4.png" alt=" "></p></font></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Basis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python基础 </tag>
            
            <tag> 字典 </tag>
            
            <tag> dict </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中tuple类型</title>
      <link href="/2020/03/31/Python%E4%B8%ADtuple%E7%B1%BB%E5%9E%8B/"/>
      <url>/2020/03/31/Python%E4%B8%ADtuple%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py7-1.png" alt=" "></p><a id="more"></a><h5 id="创建tuple"><a href="#创建tuple" class="headerlink" title="创建tuple"></a>创建tuple</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">t = (<span class="string">'Adam'</span>, <span class="string">'Lisa'</span>, <span class="string">'Bart'</span>) <span class="comment">#使用()创建</span></span><br><span class="line">t = tuple((<span class="string">'Adam'</span>, <span class="string">'Lisa'</span>, <span class="string">'Bart'</span>))</span><br><span class="line">t = <span class="string">'Adam'</span>, <span class="string">'Lisa'</span>, <span class="string">'Bart'</span>  <span class="comment"># 'A', 'B' 不论是否用小括号包括，本身就是元组类型</span></span><br></pre></td></tr></table></figure><p><strong>创建tuple和创建list唯一不同之处是用( )替代了[ ]</strong>。<br><strong>创建后元组t就不能改变了，不能向tuple中删除和添加元素</strong>。</p><p>获取tuple元素的方式和list是一样的，可以使用t[0]，t[-1]等索引方式访问元素，但是不能赋值成别的元素，否则就会报错：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">t[<span class="number">0</span>] = <span class="string">'Paul'</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: <span class="string">'tuple'</span> object does <span class="keyword">not</span> support item assignment</span><br></pre></td></tr></table></figure><p>tuple和list一样，可以包含0个、1个和任意多个元素。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 包含0个元素的tuple，也就是空tuple</span></span><br><span class="line">t = ()</span><br><span class="line">print(t)  <span class="comment"># ()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#包含一个元素的tuple</span></span><br><span class="line">t = (<span class="number">1</span>)</span><br><span class="line">print(t)  <span class="comment"># 1</span></span><br></pre></td></tr></table></figure><p>上述包含一个元素1的元组输出内容为整数1，不是元组类型(1)。因为()既可以表示tuple，又可以作为括号表示运算时的优先级，结果(1)被Python解释器计算出结果1，导致我们得到的不是tuple，而是整数1。<br>正是因为用()定义单元素的tuple有歧义，所以<strong>Python规定，单元素tuple要多加一个逗号“,”</strong>，这样就避免了歧义：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">t = (<span class="number">1</span>,)</span><br><span class="line">print(t)  <span class="comment"># (1,)</span></span><br><span class="line">t = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>,)</span><br><span class="line">print(t)  <span class="comment"># (1, 2, 3)</span></span><br></pre></td></tr></table></figure><p>Python在打印单元素tuple时，也自动添加了一个“,”，为了更明确地表明这是一个tuple。多元素tuple加不加这个额外的“,”效果是一样的。</p><h5 id="“可变”的tuple"><a href="#“可变”的tuple" class="headerlink" title="“可变”的tuple"></a>“可变”的tuple</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t = (<span class="string">'a'</span>, <span class="string">'b'</span>, [<span class="string">'A'</span>, <span class="string">'B'</span>])</span><br><span class="line">L = t[<span class="number">2</span>]</span><br></pre></td></tr></table></figure><p>注意到t有3个元素：&#39;a&#39;，&#39;b&#39;和一个list：[&#39;A&#39;, &#39;B&#39;]。list作为一个整体是tuple的第3个元素，可以通过t[2]拿到。<br>修改list的两个元素，再看tuple的内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">L[<span class="number">0</span>] = <span class="string">'X'</span></span><br><span class="line">L[<span class="number">1</span>] = <span class="string">'Y'</span></span><br><span class="line">print(t)  <span class="comment"># ('a', 'b', ['X', 'Y'])</span></span><br></pre></td></tr></table></figure><p>不是说tuple一旦定义后就不可变了吗？怎么现在又变了？<br>定义的时候tuple包含的3个元素：<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py7-2.png" alt=" "></p><p>当把list的元素’A’和’B’修改为’X’和’Y’后，tuple变为：<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py7-3.png" alt=" "></p><p>表面上看，tuple的元素确实变了，但其实变的不是tuple的元素，而是list的元素。tuple一开始指向的list并没有改成别的list，所以，tuple所谓的“不变”是说，tuple的每个元素，指向永远不变。即指向&#39;a&#39;，就不能改成指向&#39;b&#39;，指向一个list，就不能改成指向其他对象，但这里指向的list本身可变导致tuple“可变”。所以要创建一个内容不变的tuple必须保证tuple的每一个元素本身也不能变。</p></font></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Basis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python基础 </tag>
            
            <tag> 序列 </tag>
            
            <tag> tuple </tag>
            
            <tag> 元组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中list类型</title>
      <link href="/2020/03/31/Python%E4%B8%ADlist%E7%B1%BB%E5%9E%8B/"/>
      <url>/2020/03/31/Python%E4%B8%ADlist%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py6-1.png" alt=" "> <a id="more"></a></p><p><strong>list是一种有序的集合，其中的元素是按照顺序排列的，可以随时添加和删除其中的元素</strong>。<br>构造list非常简单，直接用<strong>[]</strong>把list的所有元素都括起来，就是一个list对象。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用list列出班里所有同学的名字</span></span><br><span class="line">classmates = [<span class="string">'Michael'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>]   </span><br><span class="line"><span class="comment">#等价于 classmates = list(['Michael', 'Bob', 'Tracy'])</span></span><br><span class="line">print(classmates)<span class="comment"># ['Michael', 'Bob', 'Tracy']</span></span><br></pre></td></tr></table></figure><p>由于Python是动态语言，所以list中包含的元素并不要求都必须是同一种数据类型，完全可以在list中包含各种数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">L = [<span class="string">'Michael'</span>, <span class="number">100</span>, <span class="literal">True</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一个元素也没有的list，即空list</span></span><br><span class="line">empty_list = []</span><br></pre></td></tr></table></figure><h5 id="Python按照索引访问list"><a href="#Python按照索引访问list" class="headerlink" title="Python按照索引访问list"></a>Python按照索引访问list</h5><p>通过索引来获取list中的指定元素。索引从0开始，也就是说，第一个元素的索引是0，第二个元素的索引是1，以此类推。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">L = [<span class="string">'Adam'</span>, <span class="string">'Lisa'</span>, <span class="string">'Bart'</span>]</span><br><span class="line"><span class="keyword">print</span> L[<span class="number">0</span>] <span class="comment"># 要打印第一名同学的名字</span></span><br><span class="line"><span class="keyword">print</span> L[<span class="number">3</span>] <span class="comment"># 打印第四名同学的名字</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">IndexError: list index out of range</span><br></pre></td></tr></table></figure><p>IndexError表示索引超出了范围，因为上面的list只有3个元素，有效的索引是0，1，2。所以，使用索引时，不论正数还是负数索引，注意不要越界。</p><h5 id="list常用方法"><a href="#list常用方法" class="headerlink" title="list常用方法"></a>list常用方法</h5><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py6-2.png" alt=" "></p><p>L.insert(0, &#39;Paul&#39;)的作用是将&#39;Paul&#39;添加到索引为0的位置上（也就是第一个），而原来索引为0的Adam同学，以及后面的所有同学，都自动向后移动一位。</p><p>pop()方法可以不接受参数直接删掉list的最后一个元素，也可以接受索引号作为参数，删除索引位置上的元素，同时都会返回删除的元素。</p><p>序列中del()，index()，max()，min()，len()等函数分别用于列表的元素删除，查看元素下标，最大值，最小值，如下,</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">L = [<span class="string">'Adam'</span>, <span class="string">'Lisa'</span>, <span class="string">'Bart'</span>, <span class="string">'Bob'</span>, <span class="string">'Tian'</span>]</span><br><span class="line">L.insert(<span class="number">0</span>, <span class="string">'Paul'</span>)</span><br><span class="line">L.pop(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改第一个元素的值为'Da'</span></span><br><span class="line">L[<span class="number">0</span>] = <span class="string">'Da'</span></span><br><span class="line"><span class="comment"># 删除下标为1的元素</span></span><br><span class="line"><span class="keyword">del</span> L[<span class="number">1</span>]</span><br><span class="line"><span class="comment"># 删除第1-3位置的元素</span></span><br><span class="line"><span class="keyword">del</span> L[<span class="number">1</span>:<span class="number">4</span>]</span><br><span class="line"><span class="comment"># 'Bob'在列表中的索引</span></span><br><span class="line">L.index(<span class="string">'Bob'</span>)</span><br><span class="line"><span class="comment"># 列表长度</span></span><br><span class="line">len(L)</span><br><span class="line"><span class="comment"># 列表最大值</span></span><br><span class="line">max(L)</span><br></pre></td></tr></table></figure><p><strong>+</strong></p><p>组合两个列表生成新的列表。</p><p><strong>extend</strong></p><p>向调用它的列表中添加另外一个列表的元素。</p><p><strong>append、+、extend的区别</strong></p><ol><li>append：在列表的末尾添加元素，如果参数是列表，则会把列表整体作为一个元素添加到末尾。</li><li>extend：向调用它的列表中追加另外一个列表中的元素，调用的列表内容会发生变化。</li><li>+：将两个列表中的元素组合，生成一个新的列表，原来的两个列表内容不变。<br></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">li = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>] </span><br><span class="line">str_li = str(li) </span><br><span class="line">print(li)  <span class="comment"># [1, 2, 3] </span></span><br><span class="line">print(len(li))  <span class="comment"># 3 </span></span><br><span class="line">print(str_li)  <span class="comment"># [1, 2, 3] </span></span><br><span class="line">print(len(str_li))  <span class="comment"># 9</span></span><br></pre></td></tr></table></figure></font></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Basis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python基础 </tag>
            
            <tag> list </tag>
            
            <tag> 列表 </tag>
            
            <tag> 序列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python字符串</title>
      <link href="/2020/03/31/Python%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2020/03/31/Python%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="一、字符串"><a href="#一、字符串" class="headerlink" title="一、字符串"></a>一、字符串</h4><p>Python中字符串类型和list类型及tuple类型都是有序列表的一种扩展形式。主要特征是可以通过序列的下标访问其中的元素。<a id="more"></a></p><p>Python字符串是使用单个到三个引号括起来的任意文本。<br>如果字符串本身包含单引号，比如表示字符串I&#39;m OK，这时，可以用双引号表示：&quot;I&#39;m OK&quot;。类似的，如果字符串包含双引号，就可以用单引号括起来表示：&#39;Learn &quot;Python&quot; in imooc&#39;。<br>如果字符串既包含单引号又包含双引号，需要对字符串的某些特殊字符进行“转义”，Python字符串用\进行转义。比如，要表示字符串Bob said &quot;I&#39;m OK&quot;.。在需要转义的引号前面插入一个\表示这是一个普通字符，不代表字符串的起始，因此，这个字符串又可以表示为&#39;Bob said \&quot;I\&#39;m OK\&quot;.&#39;。<br>常用的转义字符还有：\n(表示换行)、\t(表示一个制表符)、\\(表示\字符本身)<br><strong>注意：转义字符\不计入字符串的内容中。</strong></p><h5 id="raw字符串和多行字符串"><a href="#raw字符串和多行字符串" class="headerlink" title="raw字符串和多行字符串"></a>raw字符串和多行字符串</h5><p>如果一个字符串包含很多需要转义的字符，对每一个字符都进行转义会很麻烦。为了避免这种情况，可以在字符串前面加个前缀r，表示这是一个raw字符串，里面的字符就不需要转义了。例如：r&#39;/*/*/&#39;。但是r&#39;…&#39;表示法不能表示多行字符串，也不能表示包含&#39;和&quot;的字符串。</p><p>如果要表示多行字符串，可以用&#39;&#39;&#39;…&#39;&#39;&#39;表示（<strong>三引号字符串赋值给变量即为字符串，否则就作为注释</strong>）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''Line 1</span></span><br><span class="line"><span class="string">Line 2</span></span><br><span class="line"><span class="string">Line 3'''</span></span><br></pre></td></tr></table></figure><p>上面这个字符串的表示方法和下面的是完全一样的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'Line 1\nLine 2\nLine 3'</span></span><br></pre></td></tr></table></figure><p>还可以在多行字符串前面添加r，把这个多行字符串也变成一个raw字符串：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">r'''Python is created by "Guido".</span></span><br><span class="line"><span class="string">It is free and easy to learn.</span></span><br><span class="line"><span class="string">Let's start learn Python in imooc!'''</span></span><br></pre></td></tr></table></figure><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py5-1.png" alt=" "></p><h4 id="二、Unicode字符串"><a href="#二、Unicode字符串" class="headerlink" title="二、Unicode字符串"></a>二、Unicode字符串</h4><p>因为计算机只能处理数字，如果要处理文本，就必须先把文本转换为数字才能处理。最早的计算机在设计时采用8个比特（bit）作为一个字节（byte），所以，一个字节能表示的最大的整数就是255（二进制11111111=十进制255），0 - 255被用来表示大小写英文字母、数字和一些符号，这个编码表被称为ASCII编码，比如大写字母A的编码是65，小写字母z的编码是122。<br>如果要表示中文，显然一个字节是不够的，至少需要两个字节，而且还不能和ASCII编码冲突，所以，中国制定了GB2312编码，用来把中文编进去。类似的，日文和韩文等其他语言也有这个问题。为了统一所有文字的编码，Unicode应运而生。Unicode把所有语言都统一到一套编码里，这样就不会再有乱码问题了。<br>Unicode通常用两个字节表示一个字符，原有的英文编码从单字节变成双字节，只需要把高字节全部填为0就可以。<br>因为Python的诞生比Unicode标准发布的时间还要早，所以最早的Python只支持ASCII编码，普通的字符&#39;ABC&#39;在Python内部都是ASCII编码的。</p><p>Python在后来添加了对Unicode的支持，以Unicode表示的字符串用u&#39;…&#39;表示，比如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">u'中文'</span>)</span><br></pre></td></tr></table></figure><p><strong>注意:Python2不加u，中文就不能正常显示。Python3不用加u。</strong><br>Unicode字符串除了多了一个u之外，与普通字符串没啥区别，转义字符和多行表示法仍然有效：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#转义：</span></span><br><span class="line"><span class="string">u'中文\n日文\n韩文'</span></span><br><span class="line"><span class="comment">#多行：</span></span><br><span class="line"><span class="string">u'''第一行</span></span><br><span class="line"><span class="string">   第二行'''</span></span><br><span class="line"><span class="comment">#raw+多行：</span></span><br><span class="line"><span class="string">ur'''Python的Unicode字符串支持"中文",</span></span><br><span class="line"><span class="string">   "日文",</span></span><br><span class="line"><span class="string">   "韩文"等多种语言'''</span></span><br></pre></td></tr></table></figure><p><strong>如果中文字符串在Python环境下遇到UnicodeDecodeError，这是因为.py文件保存的格式有问题。可以在第一行添加如下注释，让Python解释器，用UTF-8编码读取源代码。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br></pre></td></tr></table></figure></font></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Basis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python基础 </tag>
            
            <tag> 字符串 </tag>
            
            <tag> Unicode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python数据类型</title>
      <link href="/2020/03/31/Python%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2020/03/31/Python%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="一、整数"><a href="#一、整数" class="headerlink" title="一、整数"></a>一、整数</h4><p>Python可以处理任意大小的整数，当然包括负整数，在Python程序中，整数的表示方法和数学上的写法一模一样，例如：1，100，-8080，0，等等。</p><a id="more"></a><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/python1.png" alt=" "></p><h4 id="二、浮点数"><a href="#二、浮点数" class="headerlink" title="二、浮点数"></a>二、浮点数</h4><p>浮点数也就是小数，之所以称为浮点数，是因为按照科学记数法表示时，一个浮点数的小数点位置是可变的，比如，1.23x10^9和12.3x10^8是相等的。浮点数可以用数学写法，如1.23，3.14，-9.01等等。但是对于很大或很小的浮点数，就必须用科学计数法表示，把10用e替代，1.23x10^9就是1.23e9，或者12.3e8，0.000012可以写成1.2e-5，等等。</p><p>整数和浮点数在计算机内部存储的方式是不同的，整数运算永远是精确的，而浮点数运算则可能会有四舍五入的误差。<strong>浮点数运算存在不确定尾数</strong>，运算的结果不一定精确。因为计算机内存再大，也无法精确表示出无限循环小数，比如 0.1 换成二进制表示就是无限循环小数。<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/python2.png" alt=" "></p><p><strong>Python的整数运算结果仍然是整数，浮点数运算结果仍然是浮点数，但是整数和浮点数混合运算的结果就变成浮点数了</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">1</span> + <span class="number">2</span>)    <span class="comment"># ==&gt; 整数 3 </span></span><br><span class="line">print(<span class="number">1.0</span> + <span class="number">2.0</span>)    <span class="comment"># ==&gt; 浮点数 3.0 </span></span><br><span class="line">print(<span class="number">0.1</span> + <span class="number">0.2</span> == <span class="number">0.3</span>)    <span class="comment"># ==&gt; False </span></span><br><span class="line">print(round(<span class="number">0.1</span> + <span class="number">0.2</span>, <span class="number">1</span>) == <span class="number">0.3</span>)     <span class="comment"># ==&gt; True</span></span><br><span class="line">print(<span class="number">1</span> + <span class="number">2.0</span>)    <span class="comment"># ==&gt; 浮点数 3.0</span></span><br></pre></td></tr></table></figure><p>Python整数除法除不尽的结果是浮点类型，同时提供了整数除“//”实现余数直接丢掉。Python提供了一个求余的运算%可以计算余数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">11</span> // <span class="number">3</span>)    <span class="comment"># ==&gt; 3 </span></span><br><span class="line">print(<span class="number">11</span> / <span class="number">3</span>)     <span class="comment"># ==&gt; 3.6666666666666665 </span></span><br><span class="line">print(<span class="number">11</span> % <span class="number">3</span>)    <span class="comment"># ==&gt; 2 </span></span><br><span class="line">print(<span class="number">11.0</span> / <span class="number">3</span>)   <span class="comment"># ==&gt; 3.0 </span></span><br><span class="line">print(<span class="number">11</span> ** <span class="number">2</span>)    <span class="comment"># ==&gt; 121 </span></span><br><span class="line">print(<span class="number">10</span> ** <span class="number">0.5</span>) <span class="comment"># ==&gt; 3.1622776601683795</span></span><br></pre></td></tr></table></figure><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/python3.png" alt=" "></p><h4 id="三、字符串"><a href="#三、字符串" class="headerlink" title="三、字符串"></a>三、字符串</h4><p>字符串是以&#39;或&quot;括起来的任意文本，比如&#39;abc&#39;，&quot;xyz&quot;等等。请注意，&#39;或&quot;本身只是一种表示方式，不是字符串的一部分，因此，字符串&#39;abc&#39;只有a，b，c这3个字符。（注意：<strong>Python不区分单引号和双引号</strong>）</p><h4 id="四、布尔值"><a href="#四、布尔值" class="headerlink" title="四、布尔值"></a>四、布尔值</h4><p>布尔值和布尔代数的表示完全一致，一个布尔值只有True、False两种值，要么是True，要么是False，<strong>在Python中，可以直接用True、False表示布尔值</strong>，也可以通过布尔运算计算出来。</p><ul><li>and运算（与运算），只有所有都为True，and运算结果才是True。</li><li>or运算（或运算），只要其中有一个为True，or运算结果就是True。</li><li>not运算（非运算），把True变成False，False变成 True。 </li></ul><p>在Python中，布尔类型还可以与其他数据类型做and、or和not运算：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="literal">True</span> </span><br><span class="line"><span class="keyword">print</span> (a <span class="keyword">and</span> <span class="string">'a=T'</span> <span class="keyword">or</span> <span class="string">'a=F'</span>)  <span class="comment"># a=T </span></span><br><span class="line">print(<span class="literal">True</span> <span class="keyword">and</span> &#123;<span class="string">'tom'</span>&#125;)  <span class="comment">#&#123;'tom'&#125;</span></span><br></pre></td></tr></table></figure><p>布尔类型和其他类型运算的结果可能不是布尔类型，因为<strong>Python把0、空字符串’’和None看成False，其他数值和非空字符串都看成True</strong>，所以True and &#39;a=T&#39;计算结果是&#39;a=T&#39;，继续计算&#39;a=T&#39; or &#39;a=F&#39;计算结果还是&#39;a=T&#39;。</p><p>要解释上述结果，又涉及到<strong>and和or运算的一条重要法则：短路计算。</strong></p><ol><li>在计算a and b时，如果a是False，则根据与运算法则，整个结果必定为 False，因此返回a；如果a是True，则整个计算结果必定取决与b，因此返回b。</li><li>在计算a or b时，如果a是True，则根据或运算法则，整个计算结果必定为 True，因此返回a；如果a是False，则整个计算结果必定取决于b，因此返回 b。</li></ol><p><strong>Python解释器在做布尔运算时，只要能提前确定计算结果，它就不会往后算了，直接返回结果。需要注意的是，字典和集合类型不能进行布尔测试，但是上述代码第三行在进行布尔运算时，会产生误导结果。</strong></p><h4 id="五、空值"><a href="#五、空值" class="headerlink" title="五、空值"></a>五、空值</h4><p><strong>空值是Python里一个特殊的值，用None表示。None不能理解为0，因为0是有意义的，而None是一个特殊的空值。</strong></p><p>此外，Python还提供了复数类型、列表、字典等多种数据类型，还允许创建自定义数据类型。</p></font></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Basis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python基础 </tag>
            
            <tag> 数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python函数</title>
      <link href="/2020/03/31/Python%E5%87%BD%E6%95%B0/"/>
      <url>/2020/03/31/Python%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h5 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h5><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py11-1.png" alt=" "><a id="more"></a></p><p>Python内置了很多有用的函数可以直接调用。可以在交互式命令行通过help(abs)查看abs函数的帮助信息。</p><p>调用函数的时候，如果传入的参数数量不对，会报TypeError的错误，并且Python会明确地指出：abs()有且仅有1个参数，但给出了两个：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">abs(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: abs() takes exactly one argument (<span class="number">2</span> given)</span><br></pre></td></tr></table></figure><p>如果传入的参数数量是对的，但参数类型不能被函数所接受，也会报TypeError的错误，并且给出错误信息：str是错误的参数类型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">abs(<span class="string">'a'</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: bad operand type <span class="keyword">for</span> abs(): <span class="string">'str'</span></span><br></pre></td></tr></table></figure><h5 id="函数定义"><a href="#函数定义" class="headerlink" title="函数定义"></a>函数定义</h5><p>在Python中，定义一个函数要使用def语句，依次写出函数名、括号、参数和冒号，然后，在缩进块中编写函数体，函数的返回值用return语句返回。<br>以自定义一个求绝对值的my_abs函数为例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_abs</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> x &gt;= <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> -x</span><br></pre></td></tr></table></figure><p>请注意，函数体内部的语句在执行时，一旦执行到return时，函数就执行完毕，并将结果返回。如果没有return语句，函数执行完毕后也会返回结果，只是结果为None。return None可以简写为return。</p><h5 id="函数返回多值"><a href="#函数返回多值" class="headerlink" title="函数返回多值"></a>函数返回多值</h5><p>math包提供了sin()和cos()函数，用import引用它：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">move</span><span class="params">(x, y, step, angle)</span>:</span></span><br><span class="line">    nx = x + step * math.cos(angle)</span><br><span class="line">    ny = y - step * math.sin(angle)</span><br><span class="line">    <span class="keyword">return</span> nx, ny</span><br></pre></td></tr></table></figure><p>这样就可以同时获得返回值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x, y = move(<span class="number">100</span>, <span class="number">100</span>, <span class="number">60</span>, math.pi / <span class="number">6</span>)</span><br><span class="line"><span class="keyword">print</span> x, y</span><br><span class="line"><span class="number">151.961524227</span> <span class="number">70.0</span></span><br></pre></td></tr></table></figure><p>但其实Python函数返回的仍然是单一值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">r = move(<span class="number">100</span>, <span class="number">100</span>, <span class="number">60</span>, math.pi / <span class="number">6</span>)</span><br><span class="line"><span class="keyword">print</span> r</span><br><span class="line">(<span class="number">151.96152422706632</span>, <span class="number">70.0</span>)</span><br></pre></td></tr></table></figure><p>用print打印返回结果，返回值是一个tuple！<br>但是，<strong>在语法上，返回一个tuple可以省略括号，而多个变量可以同时接收一个tuple，按位置赋给对应的值，所以，Python的函数返回多值其实就是返回一个tuple</strong>。</p><h5 id="递归函数"><a href="#递归函数" class="headerlink" title="递归函数"></a>递归函数</h5><p>在函数内部，可以调用其他函数。如果一个函数在内部调用自身本身，这个函数就是递归函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 汉诺塔</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">move</span><span class="params">(n, a, b, c)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">print</span> a + <span class="string">'--&gt;'</span> + c</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        move(n<span class="number">-1</span>, a, c, b)</span><br><span class="line">        <span class="keyword">print</span> a + <span class="string">'--&gt;'</span> + c</span><br><span class="line">        move(n<span class="number">-1</span>, b, a, c)</span><br></pre></td></tr></table></figure><p>递归函数的优点是定义简单，逻辑清晰。<strong>理论上，所有的递归函数都可以写成循环的方式</strong>，但循环的逻辑不如递归清晰。<br>使用递归函数需要注意防止栈溢出。<strong>在计算机中，函数调用是通过栈（stack）这种数据结构实现的</strong>，每当进入一个函数调用，栈就会加一层栈帧，每当函数返回，栈就会减一层栈帧。由于栈的大小不是无限的，所以，递归调用的次数过多，会导致栈溢出。</p><h5 id="定义默认参数"><a href="#定义默认参数" class="headerlink" title="定义默认参数"></a>定义默认参数</h5><p>Python自带的int()函数，其实就有两个参数，既可以传一个参数，又可以传两个参数。int()函数的第二个参数是转换进制，如果不传，默认是十进制 (base=10)。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int(<span class="string">'123'</span>)</span><br><span class="line"><span class="number">123</span></span><br><span class="line">int(<span class="string">'123'</span>, <span class="number">8</span>)</span><br><span class="line"><span class="number">83</span></span><br></pre></td></tr></table></figure><p>函数的默认参数的作用是简化调用，只需要把必须的参数传进去。但是在需要的时候，又可以传入额外的参数来覆盖默认参数值。<br>定义一个计算x的N次方的函数如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">power</span><span class="params">(x, n)</span>:</span></span><br><span class="line">    s = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">        n = n - <span class="number">1</span></span><br><span class="line">        s = s * x</span><br><span class="line">    <span class="keyword">return</span> s</span><br></pre></td></tr></table></figure><p>假设计算平方的次数最多，就可以把n的默认值设定为2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">power</span><span class="params">(x, n=<span class="number">2</span>)</span>:</span></span><br><span class="line">    s = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">        n = n - <span class="number">1</span></span><br><span class="line">        s = s * x</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line">print(power(<span class="number">5</span>))  <span class="comment">#25</span></span><br></pre></td></tr></table></figure><p><strong>由于函数的参数按从左到右的顺序匹配，所以默认参数只能定义在必需参数的后面</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># OK:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fn1</span><span class="params">(a, b=<span class="number">1</span>, c=<span class="number">2</span>)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="comment"># Error:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fn2</span><span class="params">(a=<span class="number">1</span>, b)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h5 id="定义可变参数"><a href="#定义可变参数" class="headerlink" title="定义可变参数"></a>定义可变参数</h5><p>如果想让一个函数能接受任意个参数，可以定义一个可变参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fn</span><span class="params">(*args)</span>:</span></span><br><span class="line">    <span class="keyword">print</span> args</span><br></pre></td></tr></table></figure><p>可变参数的名字前面有个*号，可以传入0个、1个或多个参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fn()  <span class="comment">#()</span></span><br><span class="line">fn(<span class="string">'a'</span>)  <span class="comment">#('a',)</span></span><br><span class="line">fn(<span class="string">'a'</span>, <span class="string">'b'</span>)  <span class="comment">#('a', 'b')</span></span><br><span class="line">fn(<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>)  <span class="comment">#('a', 'b', 'c')</span></span><br></pre></td></tr></table></figure><p><strong>Python解释器会把传入的一组参数组装成一个tuple传递给可变参数，因此，在函数内部，直接把变量args看成一个tuple就好了</strong>。定义可变参数的目的也是为了简化调用。</p></font></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Basis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python基础 </tag>
            
            <tag> 函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python语句</title>
      <link href="/2020/03/31/Python%E8%AF%AD%E5%8F%A5/"/>
      <url>/2020/03/31/Python%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="Python判断语句"><a href="#Python判断语句" class="headerlink" title="Python判断语句"></a>Python判断语句</h4><h5 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h5><p>比如，输入用户年龄，根据年龄打印不同的内容，在Python程序中，可以用if语句实现：</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">20</span></span><br><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">18</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'your age is'</span>, age</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'adult'</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'END'</span></span><br></pre></td></tr></table></figure><p><strong>注意:Python代码的缩进规则：具有相同缩进的代码被视为代码块</strong>。<br>上面的3，4行print语句就构成一个代码块（但不包括第5行的print）。如果if语句判断为True，就会执行这个代码块。另外，<strong>缩进要严格按照Python的习惯写法：4个空格</strong>，不要使用Tab，更不要混合Tab和空格，否则很容易造成因为缩进引起的语法错误。<br><strong>if语句后接表达式，然后用“:”表示代码块开始</strong>。</p><h5 id="if-else语句"><a href="#if-else语句" class="headerlink" title="if-else语句"></a>if-else语句</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">18</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'adult'</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'teenager'</span></span><br></pre></td></tr></table></figure><p>“非此即彼”情况下，利用if … else …语句，可以根据条件表达式的值为True或者False，分别执行if代码块或者else代码块。<br>注意:else后面有个“:”。</p><h5 id="if-elif-else语句"><a href="#if-elif-else语句" class="headerlink" title="if-elif-else语句"></a>if-elif-else语句</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">18</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'adult'</span></span><br><span class="line"><span class="keyword">elif</span> age &gt;= <span class="number">6</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'teenager'</span></span><br><span class="line"><span class="keyword">elif</span> age &gt;= <span class="number">3</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'kid'</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'baby'</span></span><br></pre></td></tr></table></figure><p>其中，elif意思就是else if。<br><strong>特别注意:这一系列条件判断会从上到下依次判断，如果某个判断为True，执行完对应的代码块，后面的条件判断就直接忽略，不再执行了</strong>。</p><h4 id="Python循环语句"><a href="#Python循环语句" class="headerlink" title="Python循环语句"></a>Python循环语句</h4><h5 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h5><p>Python的for循环就可以依次把list或tuple的每个元素迭代出来：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">L = [<span class="string">'Adam'</span>, <span class="string">'Lisa'</span>, <span class="string">'Bart'</span>]</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> L:</span><br><span class="line">    <span class="keyword">print</span> name</span><br></pre></td></tr></table></figure><p>注意:name这个变量是在for循环中定义的，意思是，依次取出list中的每一个元素，并把元素赋值给name，然后执行for循环体（就是缩进的代码块）。</p><h5 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h5><p>while循环不会迭代list或tuple的元素，而是根据表达式判断循环是否结束。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从0开始打印不大于N的整数：</span></span><br><span class="line">N = <span class="number">10</span></span><br><span class="line">x = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> x &lt; N:</span><br><span class="line">    <span class="keyword">print</span> x</span><br><span class="line">    x = x + <span class="number">1</span></span><br></pre></td></tr></table></figure><p>while循环每次先判断 x &lt; N，如果为True，则执行循环体的代码块，否则，退出循环。<br>在循环体内，x = x + 1会让x不断增加，最终因为x &lt; N不成立而退出循环。<br>如果没有这一个语句，while循环在判断x &lt; N时总是为True，就会无限循环下去，变成死循环，所以要特别留意while循环的退出条件。</p><h5 id="break退出循环"><a href="#break退出循环" class="headerlink" title="break退出循环"></a>break退出循环</h5><p>用for循环或者while循环时，如果要在循环体内直接退出循环，可以使用break语句。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算1至100的整数和</span></span><br><span class="line">sum = <span class="number">0</span></span><br><span class="line">x = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    sum = sum + x</span><br><span class="line">    x = x + <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> x &gt; <span class="number">100</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="keyword">print</span> sum</span><br></pre></td></tr></table></figure><p>在循环体内判断x &gt; 100条件成立时，用break语句退出循环，这样避免死循环，实现循环的结束。</p><h5 id="continue继续循环"><a href="#continue继续循环" class="headerlink" title="continue继续循环"></a>continue继续循环</h5><p>在循环过程中，用continue跳过本次后续的循环代码，继续下一次循环。<br>假设利用for循环计算平均分的代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">L = [<span class="number">75</span>, <span class="number">98</span>, <span class="number">59</span>, <span class="number">81</span>, <span class="number">66</span>, <span class="number">43</span>, <span class="number">69</span>, <span class="number">85</span>]</span><br><span class="line">sum = <span class="number">0.0</span></span><br><span class="line">n = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> L:</span><br><span class="line">    sum = sum + x</span><br><span class="line">    n = n + <span class="number">1</span></span><br><span class="line"><span class="keyword">print</span> sum / n</span><br></pre></td></tr></table></figure><p>现在只想统计及格分数的平均分，就要把x &lt; 60的分数剔除掉，这时，利用 continue，可以做到当x &lt; 60的时候，不继续执行循环体的后续代码，直接进入下一次循环：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> L:</span><br><span class="line">    <span class="keyword">if</span> x &lt; <span class="number">60</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    sum = sum + x</span><br><span class="line">    n = n + <span class="number">1</span></span><br></pre></td></tr></table></figure><h5 id="循环与else"><a href="#循环与else" class="headerlink" title="循环与else"></a>循环与else</h5><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py8-1.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py8-2.png" alt=" "></p></font></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Basis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python基础 </tag>
            
            <tag> 语句 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python输入输出</title>
      <link href="/2020/03/31/Python%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/"/>
      <url>/2020/03/31/Python%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h4><p>print语句可以向屏幕上输出指定的文字。在Python2和Python3中都提供print()方法来打印信息，但两个版本间的print稍微有差异。<a id="more"></a></p><ul><li><p>Python2中print是一个语法结构，打印时可以不加括号：print &#39;hello world&#39;。</p></li><li><p>Python3中print是一个内置函数，有多个参数，所以打印时必须要加括号：print(&quot;hello world&quot;)；</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(value1, ..., sep=<span class="string">' '</span>, end=<span class="string">'\n'</span>, file=sys.stdout, flush=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p>从上面的Python3方法原型可以看出，</p><ol><li><p>print可以支持多个参数，支持同时打印多个字符串（其中…表示任意多个字符串）；</p></li><li><p>sep表示多个字符串之间使用什么字符连接；</p></li><li><p>end表示字符串结尾添加什么字符，指点该参数就可以设置打印不换行。</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"python"</span>, <span class="string">"tab"</span>, <span class="string">".com"</span>, sep=<span class="string">''</span>, end=<span class="string">''</span>)  <span class="comment"># 就可以实现打印出来不换行</span></span><br><span class="line"><span class="comment"># pythontab.com</span></span><br></pre></td></tr></table></figure><p>Python2.x下的print语句在输出字符串之后会默认换行，如果不希望换行，只要在语句最后加一个“,”即可。</p><p><strong>Python2加括号，解释器可能会把它当成创建tuple</strong>，比如:print (&#39;hhh&#39;,&#39;ggg&#39;)，对于这个，Python2打印的是(&#39;hhh&#39;,&#39;ggg&#39;)，而Python3打印的是hhh ggg。除非括号里只有一个字符串，比如，print (&#39;hhh&#39;)在Python2和Python3中都是打印hhh，毕竟(&#39;hhh&#39;)==&#39;hhh&#39;，所以Python2才会视它为字符串而不是元组。</p><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><p>Python3.x中input()函数接受一个标准输入数据，返回为string类型。<br>注意：在Python3.x中raw_input()和input()进行了整合，去除了raw_input()，仅保留了input()函数，其接收任意输入，将所有输入默认为字符串处理，并返回字符串类型。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">input([prompt])</span><br></pre></td></tr></table></figure><ul><li>prompt: 提示信息</li></ul><p><strong>input()接收多个值</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入三角形的三边长</span></span><br><span class="line">a,b,c = (input(<span class="string">"请输入三角形三边的长："</span>).split())</span><br><span class="line">a= int(a)</span><br><span class="line">b= int(b)</span><br><span class="line">c= int(c)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算三角形的半周长p</span></span><br><span class="line">p = (a + b + c) / <span class="number">2</span></span><br><span class="line"><span class="comment"># 计算三角形的面积s</span></span><br><span class="line">s=(p * (p - a) * (p - b) * (p - c)) ** <span class="number">0.5</span></span><br><span class="line"><span class="comment"># 输出三角形的面积</span></span><br><span class="line">print(<span class="string">"三角形面积为："</span>,format(s,<span class="string">'.2f'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行结果</span></span><br><span class="line"><span class="comment"># 请输入三角形三边的长：3 4 5</span></span><br><span class="line"><span class="comment"># 三角形面积为： 6.00</span></span><br></pre></td></tr></table></figure></font></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Basis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python基础 </tag>
            
            <tag> print </tag>
            
            <tag> input </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python变量</title>
      <link href="/2020/03/31/Python%E5%8F%98%E9%87%8F/"/>
      <url>/2020/03/31/Python%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><p>在Python程序中，变量用一个变量名表示，变量名必须是大小写英文、数字和下划线（_）的组合，且不能用数字开头。<a id="more"></a><br><strong>在Python中，等号=连接的是赋值语句，可以把任意数据类型赋值给变量，同一个变量可以反复赋值，而且可以是不同类型的变量</strong>，例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">123</span>    </span><br><span class="line">print(a)<span class="comment"># a是整数</span></span><br><span class="line">a = <span class="string">'imooc'</span>   </span><br><span class="line">print(a)<span class="comment"># a变为字符串</span></span><br></pre></td></tr></table></figure><p>这种变量本身类型不固定的语言称之为动态语言，与之对应的是静态语言。<br>静态语言在定义变量时必须指定变量类型，如果赋值的时候类型不匹配，就会报错。例如Java是静态语言，赋值语句如下（// 表示注释）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">123</span>; <span class="comment">// a是整数类型变量</span></span><br><span class="line">a = <span class="string">"mooc"</span>; <span class="comment">// 错误：不能把字符串赋给整型变量</span></span><br></pre></td></tr></table></figure><p>不要把赋值语句的等号等同于数学的等号。比如下面的代码，如果从数学上理解x = x + 2那无论如何是不成立的，在程序中，赋值语句先计算右侧的表达式x + 2，得到结果12，再赋给变量x。由于x之前的值是10，重新赋值后，x的值变成12。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">10</span></span><br><span class="line">x = x + <span class="number">2</span></span><br></pre></td></tr></table></figure><p>最后，理解变量在计算机内存中的表示也非常重要。当编写代码：a = &#39;ABC&#39;时，Python解释器干了两件事情：<br><strong>1. 在内存中创建了一个&#39;ABC&#39;的字符串；<br>2. 在内存中创建了一个名为a的变量，并把它指向&#39;ABC&#39;。</strong></p><p>也可以把一个变量a赋值给另一个变量b，这个操作实际上是把变量b指向变量a所指向的数据，例如下面的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'ABC'</span></span><br><span class="line">b = a</span><br><span class="line">a = <span class="string">'XYZ'</span></span><br><span class="line">print(b)</span><br></pre></td></tr></table></figure><p>最后一行打印出变量b的内容到底是&#39;ABC&#39;呢还是&#39;XYZ&#39;？如果从数学意义上理解，就会错误地得出b和a相同，也应该是&#39;XYZ&#39;，但实际上b的值是&#39;ABC&#39;，下面逐行执行代码查看每行的效果：<br>执行a = &#39;ABC&#39;，解释器创建了字符串&#39;ABC&#39;和变量a，并把a指向&#39;ABC&#39;：<img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py4-1.png" alt=" "></p><p>执行b = a，解释器创建了变量b，并<strong>把b指向a指向的字符串&#39;ABC&#39;</strong>：<img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py4-2.png" alt=" "></p><p>执行a = &#39;XYZ&#39;，解释器创建了字符串&#39;XYZ&#39;，并把a的指向改为&#39;XYZ&#39;，但b并没有更改：<img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/python/py4-3.png" alt=" "></p><p>所以，最后打印变量b的结果自然是&#39;ABC&#39;了。</p><h4 id="局部变量和全局变量"><a href="#局部变量和全局变量" class="headerlink" title="局部变量和全局变量"></a>局部变量和全局变量</h4><p>Python中定义函数时，若想在函数内部对函数外的变量进行操作，就需要在函数内部声明其为global。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    x = <span class="number">2</span></span><br><span class="line">func()</span><br><span class="line">print(x)  <span class="comment"># 1</span></span><br></pre></td></tr></table></figure><p>在func函数中并未在x前面加global，所以func函数无法将x赋为2，无法改变x的值。给变量添加global，则可以在函数内部对函数外的对象进行操作了，也可以改变它的值了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> x</span><br><span class="line">    x = <span class="number">2</span></span><br><span class="line">func()</span><br><span class="line">print(x)  <span class="comment"># 2</span></span><br></pre></td></tr></table></figure><p>global若在函数外声明，则函数内依然无法操作函数外该变量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">global</span> x</span><br><span class="line">x = <span class="number">1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    x = <span class="number">2</span></span><br><span class="line">func()</span><br><span class="line">print(x)  <span class="comment"># 1</span></span><br></pre></td></tr></table></figure></font></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Python </category>
          
          <category> Basis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python基础 </tag>
            
            <tag> 变量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github+Hexo搭建博客(7)—next7.5主题个性化4</title>
      <link href="/2019/11/19/Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%887%EF%BC%89%E2%80%94Next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%964/"/>
      <url>/2019/11/19/Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%887%EF%BC%89%E2%80%94Next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%964/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="1-DaoVoice在线联系"><a href="#1-DaoVoice在线联系" class="headerlink" title="1.DaoVoice在线联系"></a>1.DaoVoice在线联系<a id="more"></a></h4><p><strong>实现效果图</strong><br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/7_1.png" alt=" "></p><p><strong>具体实现方法</strong><br>首先在daovoice注册账号<a href="http://dashboard.daovoice.io/get-started" target="_blank" rel="noopener"><strong>点我注册</strong></a>,邀请码是0f81ff2f，注册完成后会得到一个 app_id:<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/7_2.png" alt=" "></p><p>记下这个app_id的值，然后打开/themes/next/layout/_partials/head.swig,写下如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.daovoice %&#125;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">  (function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset=&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&apos;https:&apos; == document.location.protocol ? &apos;https:&apos; : &apos;http:&apos;) + &quot;//widget.daovoice.io/widget/0f81ff2f.js&quot;,&quot;daovoice&quot;)</span><br><span class="line">  daovoice(&apos;init&apos;, &#123;</span><br><span class="line">      app_id: &quot;&#123;&#123;theme.daovoice_app_id&#125;&#125;&quot;</span><br><span class="line">    &#125;);</span><br><span class="line">  daovoice(&apos;update&apos;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>接着打开主题配置文件，在最后写下如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Online contact </span><br><span class="line">daovoice: true</span><br><span class="line">daovoice_app_id: 这里填你的刚才获得的 app_id</span><br></pre></td></tr></table></figure><p>重新hexo g，hexo s就能看到效果了。<br>安装成功后可以在DaoVoice控制台上的聊天设置里设置聊天窗口样式，如下图,<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/7_3.png" alt=" "></p><h4 id="2-使用阿里云图床存储博文中图片"><a href="#2-使用阿里云图床存储博文中图片" class="headerlink" title="2.使用阿里云图床存储博文中图片"></a>2.使用阿里云图床存储博文中图片</h4><p>(1).登录阿里云，搜索对象存储OSS，并点击立即开通（开通免费）<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/7_4.png" alt=" "></p><p>(2).进入OSS管理控制台界面，创建Bucket。据网上大佬说区域建议选择香港，避免额外费用。<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/7_5.png" alt=" "></p><p>(3).新建目录，上传图片等文件<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/7_6.png" alt=" "></p><p>(4).绑定用户域名，勾选自动添加CNAME。这是为了提高搜索引擎的爬取和检录。<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/7_7.png" alt=" "></p><p>(5).复制图片URL，在浏览器地址输入访问，成功则可以在博客文章中使用。<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/7_8.png" alt=" "></p><h4 id="3-自定义鼠标样式"><a href="#3-自定义鼠标样式" class="headerlink" title="3.自定义鼠标样式"></a>3.自定义鼠标样式</h4><p>打开themes/next/source/_data/styles.styl（有关该文件的内容见搭建个人博客（4）<a href="http://xietonglei.xyz/2019/11/13/Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%884%EF%BC%89%E2%80%94Next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%961/" target="_blank" rel="noopener">点我</a>中主页文章添加阴影效果部分），在里面写下如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 鼠标样式</span><br><span class="line">  * &#123;</span><br><span class="line">      cursor: url(&quot;http://om8u46rmb.bkt.clouddn.com/sword2.ico&quot;),auto!important</span><br><span class="line">  &#125;</span><br><span class="line">  :active &#123;</span><br><span class="line">      cursor: url(&quot;http://om8u46rmb.bkt.clouddn.com/sword1.ico&quot;),auto!important</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>其中url里面必须是ico图片，ico图片可以上传到网上（这里使用的是七牛云图床），然后获取外链，复制到url里就行了</p><p>原文链接：<a href="https://www.jianshu.com/p/76ce3729746d" target="_blank" rel="noopener">https://www.jianshu.com/p/76ce3729746d</a><br>&emsp;&emsp;&emsp;&emsp;&emsp;<a href="https://www.jianshu.com/p/1f8107a8778c" target="_blank" rel="noopener">https://www.jianshu.com/p/1f8107a8778c</a><br>&emsp;&emsp;&emsp;&emsp;&emsp;<a href="https://www.jianshu.com/p/b42b99a60d41" target="_blank" rel="noopener">https://www.jianshu.com/p/b42b99a60d41</a><br></p></font><p></p></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Others </category>
          
          <category> Github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
            <tag> next </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github+Hexo搭建博客(6)—next7.5主题个性化3</title>
      <link href="/2019/11/19/Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%886%EF%BC%89%E2%80%94Next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%963/"/>
      <url>/2019/11/19/Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%886%EF%BC%89%E2%80%94Next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%963/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="1-title的优化"><a href="#1-title的优化" class="headerlink" title="1.title的优化"></a>1.title的优化</h4><p>更改index.swig文件，文件路径是\themes\next\layout，将下面代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span> &#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; &#123;% endblock %&#125; <span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>改成</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span> &#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125; &#123;% endblock %&#125; <span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这时候你的首页标题会更符合网站名称 - 网站描述这习惯。<br>seo（Search Engine Optimization）优化，关键词也显示在Title标题里，</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span> &#123;% block title %&#125; &#123;&#123; theme.keywords &#125;&#125; - &#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125; &#123;% endblock %&#125; <span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：别堆砌关键字，整个标题一般不超过80个字符，可以通chinaz的seo综合查询检查。</p><h4 id="2-添加sitemap网站地图"><a href="#2-添加sitemap网站地图" class="headerlink" title="2.添加sitemap网站地图"></a>2.添加sitemap网站地图</h4><h5 id="安装hexo的sitemap网站地图生成插件"><a href="#安装hexo的sitemap网站地图生成插件" class="headerlink" title="安装hexo的sitemap网站地图生成插件"></a>安装hexo的sitemap网站地图生成插件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save #google地图生成插件</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save #百度地图生成插件</span><br><span class="line">···</span><br><span class="line">在hexo站点的_config.yml添加下面的代码，</span><br><span class="line">​```yml</span><br><span class="line"># hexo sitemap网站地图</span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br><span class="line">baidusitemap:</span><br><span class="line">  path: baidusitemap.xml</span><br></pre></td></tr></table></figure><p>配置成功后，hexo编译时会在hexo站点根目录的public下生成sitemap.xml和 baidusitemap.xml，其中sitemap.xml适合提交给谷歌搜素引擎，baidusitemap.xml适合提交百度搜索引擎。<br>让百度收录你的站点<br>刚建站的时候各个搜索引擎是没有收录我们网站的，在搜索引擎中输入site:&lt;域名&gt;,如果如下图所示就是说明网站并没有被百度收录。可以直接点击下面的“网址提交”来提交我们的网站。<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/6_1.png" alt=" "></p><h5 id="验证网站所有权"><a href="#验证网站所有权" class="headerlink" title="验证网站所有权"></a>验证网站所有权</h5><p><a href="http://zhanzhang.baidu.com" target="_blank" rel="noopener"><strong>点我登录百度站长平台</strong></a>,只要有百度旗下的账号就可以登录，登录成功之后在站点管理中点击添加网站然后输入你的站点地址，建议输入的网站为www开头的，不要输入github.io的，因为github是不允许百度的spider爬取github上的内容的，所以如果想让你的站点被百度收录，只能使用自己购买的域名<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/6_2.png" alt=" "></p><p>在选择完网站的类型之后需要验证网站的所有权，验证网站所有权的方式有三种：文件验证、html标签验证和cname解析验证，使用哪一种方式都可以，都是比较简单的，但是一定要注意，使用文件验证文件存放的位置需要放在source文件夹下，如果是html文件那么hexo就会将其编译，所以必须要加上的layout:false，这样就不会被hexo编译（还不行就去部署的地方修改文件，如果文件被修改会导致验证失败）。</p><h5 id="向百度提交链接"><a href="#向百度提交链接" class="headerlink" title="向百度提交链接"></a>向百度提交链接</h5><p>然后就可以将生成的sitemap文件提交给百度，还是在百度站长平台，找到链接提交，这里我们可以看到有两种提交方式，自动提交和手动提交，自动提交又分为主动推送、自动推送和sitemap<br><strong>如何选择链接提交方式</strong><br>1、<strong>主动推送</strong>：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录。<br>2、<strong>自动推送</strong>：最为便捷的提交方式，请将自动推送的JS代码部署在站点的每一个页面源代码中，部署代码的页面在每次被浏览时，链接会被自动推送给百度。可以与主动推送配合使用。<br>3、<strong>sitemap</strong>：您可以定期将网站链接放到sitemap中，然后将sitemap提交给百度。百度会周期性的抓取检查您提交的sitemap，对其中的链接进行处理，但收录速度慢于主动推送。<br>4、<strong>手动提交</strong>：一次性提交链接给百度，可以使用此种方式。<br>一般来说，<strong>主动推送&gt;自动推送&gt;sitemap&gt;手动提交</strong></p><h6 id="主动推送"><a href="#主动推送" class="headerlink" title="主动推送"></a>主动推送</h6><p>安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure><p>然后在根目录的配置文件中新增字段</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baidu_url_submit:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">100</span> <span class="comment"># 提交最新的一个链接</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">www.cherryblog.site</span> <span class="comment"># 在百度站长平台中注册的域名</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">8OGYpxowYnhgVsUM</span> <span class="comment"># 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidu_urls.txt</span> <span class="comment"># 文本文档的地址， 新链接会保存在此文本文档里</span></span><br></pre></td></tr></table></figure><p>在加入新的deploye</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">type:baidu_url_submitter</span></span><br></pre></td></tr></table></figure><p>这样执行hexo deploy的时候，新的链接就会被推送了</p><h6 id="自动推送"><a href="#自动推送" class="headerlink" title="自动推送"></a>自动推送</h6><p>主题配置文件下设置,将baidu_push设置为true：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO</span></span><br><span class="line"><span class="attr">baidu_push:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>然后就会将一下代码自动推送到百度，位置是themes\next\layout_scripts\baidu_push.swig,这样每次访问博客中的页面就会自动向百度提交sitemap</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.baidu_push %&#125;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> bp = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">    <span class="keyword">var</span> curProtocol = <span class="built_in">window</span>.location.protocol.split(<span class="string">':'</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> (curProtocol === <span class="string">'https'</span>) &#123;</span><br><span class="line">        bp.src = <span class="string">'https://zz.bdstatic.com/linksubmit/push.js'</span>;        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        bp.src = <span class="string">'http://push.zhanzhang.baidu.com/push.js'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>];</span><br><span class="line">    s.parentNode.insertBefore(bp, s);</span><br><span class="line">&#125;)();</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure><h6 id="sitemap"><a href="#sitemap" class="headerlink" title="sitemap"></a>sitemap</h6><p>将上一步生成的sitemap文件提交到百度就可以了<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/6_3.png" alt=" "></p><p>百度收录过程还是蛮久的，一度让我以为我的方法有问题，提交链接在站长工具中有显示大概是有两天的时候，站点被百度收录大概花了半个月，收录后在百度搜索site:cherryblog.site已经可以搜索到结果。<br>让google收录你的站点<br>相比于百度，google的效率实在不能更快。方法是和百度是一样的，都是先验证你的站点所有权，然后提交sitemap。<br><a href="https://www.google.com/webmasters/" target="_blank" rel="noopener"><strong>点我进入google站点平台</strong></a>，然后就是在谷歌注册账号、验证站点、提交sitemap。<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/6_4.png" alt=" "></p><h4 id="3-图片可点击放大查看，放大后可关闭"><a href="#3-图片可点击放大查看，放大后可关闭" class="headerlink" title="3.图片可点击放大查看，放大后可关闭"></a>3.图片可点击放大查看，放大后可关闭</h4><p>打开站点配置文件_config.yml，搜索fancybox字段，设置其值为true<br>进入到theme/next/文件夹下，打开git bash</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-fancybox3 source/lib/fancybox</span><br></pre></td></tr></table></figure><h4 id="4-首页显示文章摘要"><a href="#4-首页显示文章摘要" class="headerlink" title="4.首页显示文章摘要"></a>4.首页显示文章摘要</h4><p>不建议使用自动选取，使用<!--more-->控制后面内容首页不显示</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Automatically excerpt (Not recommend).</span></span><br><span class="line"><span class="comment"># Use &lt;!-- more --&gt; in the post to control excerpt accurately.</span></span><br><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">120</span></span><br></pre></td></tr></table></figure><h4 id="5-增加网易云音乐播放器"><a href="#5-增加网易云音乐播放器" class="headerlink" title="5.增加网易云音乐播放器"></a>5.增加网易云音乐播放器</h4><h5 id="1-将歌曲做成外链"><a href="#1-将歌曲做成外链" class="headerlink" title="(1).将歌曲做成外链"></a>(1).将歌曲做成外链</h5><h6 id="个人歌单"><a href="#个人歌单" class="headerlink" title="个人歌单"></a>个人歌单</h6><p>1.分享歌单<img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/6_1_1.png" alt=" "></p><p>2.打开分享界面的歌单链接（个人主页点击动态）<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/6_1_2.png" alt=" "></p><p>3.打开歌单即可看到生成外链的点击链接<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/6_1_3.png" alt=" "></p><h6 id="网易云音乐歌单（版权原因无法生成外链）"><a href="#网易云音乐歌单（版权原因无法生成外链）" class="headerlink" title="网易云音乐歌单（版权原因无法生成外链）"></a>网易云音乐歌单（版权原因无法生成外链）</h6><p>1.打开歌单页面，在“生成外链播放器”上右击，点击审查元素（检查）</p><p>2.接着找到生成外链播放器这段文字直接双击复制前面的/outchain/2/167975/<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/6_1_4.png" alt=" "></p><p>3.然后修改歌单链接示例：<a href="http://music.163.com/#/outchain/2/167975/" target="_blank" rel="noopener">http://music.163.com/#/outchain/2/167975/</a><br>之后打开网页，就能看到外链链接了<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/6_1_5.png" alt=" "></p><p>4.然后把代码贴到你想要生成外链播放器的地方即可，但是生成的外链还是无法播放没有版权的音乐</p><h5 id="2-添加到Next主题中"><a href="#2-添加到Next主题中" class="headerlink" title="(2).添加到Next主题中"></a>(2).添加到Next主题中</h5><p>将代码放到../themes/next/layout/_macro/sidebar.swig文件中如下div中，这样可以实现当侧边栏显示目录时不会显示音乐播放器：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;div</span> <span class="string">class="site-overview-wrap</span> <span class="string">sidebar-panel"&gt;</span></span><br><span class="line">        <span class="string">&#123;&#123;</span> <span class="string">partial('_partials/sidebar/site-overview.swig',</span> <span class="string">&#123;&#125;,</span> <span class="string">&#123;cache:</span> <span class="string">theme.cache.enable&#125;)</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">&#123;&#123;-</span> <span class="string">next_inject('sidebar')</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;!--网易云音乐--&gt;</span></span><br><span class="line">  <span class="string">&lt;div</span> <span class="string">id="music163player"&gt;</span></span><br><span class="line"><span class="string">&lt;iframe</span> <span class="string">frameborder="no"</span> <span class="string">border="0"</span> <span class="string">marginwidth="0"</span> <span class="string">marginheight="0"</span> <span class="string">width=330</span> <span class="string">height=260</span> <span class="string">src="//music.163.com/outchain/player?type=0&amp;id=2504295111&amp;auto=1&amp;height=430"&gt;</span></span><br><span class="line"><span class="string">&lt;/iframe&gt;</span></span><br><span class="line">  <span class="string">&lt;/div&gt;</span></span><br><span class="line">  <span class="string">&lt;!--/网易云音乐--&gt;</span></span><br><span class="line">      <span class="string">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-修改侧边栏宽度"><a href="#3-修改侧边栏宽度" class="headerlink" title="(3).修改侧边栏宽度"></a>(3).修改侧边栏宽度</h5><p>打开主题配置文件，修改：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="comment"># Sidebar Position.</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">left</span></span><br><span class="line">  <span class="comment">#position: right</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Manual define the sidebar width. If commented, will be default for:</span></span><br><span class="line">  <span class="comment"># Muse | Mist: 320</span></span><br><span class="line">  <span class="comment"># Pisces | Gemini: 240</span></span><br><span class="line">  <span class="attr">width:</span> <span class="number">300</span></span><br></pre></td></tr></table></figure><h5 id="4-效果"><a href="#4-效果" class="headerlink" title="(4).效果"></a>(4).效果</h5><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/6_5.png" alt=" "></p><p>需要说明一点，不同浏览器打开博客后后网易云音乐状态不同，比如搜狗浏览器打开博客，音乐就自动播放，但Chrome浏览器不会自动播放。如果不想打开博客就自动播放音乐，可以让产生外链的歌单中第一首歌是因为版权无法播放的。</p><h4 id="6-添加来必力评论系统"><a href="#6-添加来必力评论系统" class="headerlink" title="6.添加来必力评论系统"></a>6.添加来必力评论系统</h4><p>NexT支持的第三方的评论系统有很多，而且对于国内来说比较友好就有来必力<a href="https://www.livere.com/" target="_blank" rel="noopener"><strong>点我进入来必力首页</strong></a>，下面介绍添加来必力评论系统。<br>首先获取来必力id，登陆来必力注册获取。这里要注意，这个韩国的系统注册很慢，所以要记住不要耐不住关闭页面或者狂刷新，耐心等待就好。<br>注册后点击导航上边的安装，选择免费的city版本：<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/6_6.png" alt=" "></p><p>点击现在安装后填入网站的一些信息就可以获取到安装代码，框中的就是你的来必力id：<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/6_7.png" alt=" "></p><p>复制上边的id，在主题配置文件里面搜索livere_uid，在后面添加来必力id即可：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Support for LiveRe comments system.</span></span><br><span class="line"><span class="comment"># You can get your uid from https://livere.com/insight/myCode (General web site)</span></span><br><span class="line"><span class="attr">livere_uid:</span> <span class="string">&#123;你的来必力id&#125;</span></span><br></pre></td></tr></table></figure><p>修改评论代码如下</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Multiple Comment System Support</span></span><br><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="comment"># Available values: tabs | buttons</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">tabs</span></span><br><span class="line">  <span class="comment"># Choose a comment system to be displayed by default.</span></span><br><span class="line">  <span class="comment"># Available values: changyan | disqus | disqusjs | gitalk | livere | valine</span></span><br><span class="line">  <span class="attr">active:</span> <span class="string">livere</span></span><br><span class="line">  <span class="comment"># Setting `true` means remembering the comment system selected by the visitor.</span></span><br><span class="line">  <span class="attr">storage:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Modify texts or order for any navs, here are some examples.</span></span><br><span class="line">  <span class="attr">nav:</span></span><br><span class="line">    <span class="comment">#disqus:</span></span><br><span class="line">    <span class="comment">#  text: Load Disqus</span></span><br><span class="line">    <span class="comment">#  order: -1</span></span><br><span class="line">    <span class="comment">#gitalk:</span></span><br><span class="line">    <span class="comment">#  order: -2</span></span><br></pre></td></tr></table></figure><p>另外可以点击用户头像进入管理界面个性化你的评论系统，最终实现效果，<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/6_8.png" alt=" "></p><h4 id="7-在博文中添加图片"><a href="#7-在博文中添加图片" class="headerlink" title="7.在博文中添加图片"></a>7.在博文中添加图片</h4><h5 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h5><p>当Hexo项目中只用到少量图片时，可以将图片统一放在source/images文件夹中，通过markdown语法访问它们。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](/images/image.jpg)</span><br></pre></td></tr></table></figure><h4 id="8-个人域名绑定"><a href="#8-个人域名绑定" class="headerlink" title="8.个人域名绑定"></a>8.个人域名绑定</h4><h5 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h5><p>国内的域名服务商有新网，腾讯云，还有阿里云的万网<a href="https://wanwang.aliyun.com/" target="_blank" rel="noopener"><strong>点我进入万网</strong></a>等。<br>在万网购买了自己心仪的域名后，进入阿里云的管理控制台-域名与网站-域名就可以看到购买的域名此时的域名状态是未实名认证的，然后就是实名认证（一般需要2小时左右）。</p><h5 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h5><p>首先获取自己github的二级域名的IP地址，windows下直接在cmd里Ping一下自己的博客就会得到IP地址：<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/6_2_1.png" alt=" "></p><p>下面通过DNS域名解析将购买的域名指向github的二级域名：username.github.io，进入阿里云的管理控制台-域名与网站-云解析DNS，进入域名的解析设置，点击新手指导，将得到的IP地址填到记录值一栏，点击确定。填完以后的解析列表会出现：<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/6_2_2.png" alt=" "></p><h5 id="设置CNAME"><a href="#设置CNAME" class="headerlink" title="设置CNAME"></a>设置CNAME</h5><p>在hexo项目下source文件夹下面创建CNAME文件（没有后缀名的），在里面写上购买的域名。比如：<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/6_2_3.png" alt=" "></p><p>在github上面，打开username.github.io项目的（Settings）设置，然后在 GitHub Pages的Custom domain设置里填上购买的域名。比如：<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/6_2_4.png" alt=" "></p><p>新域名到此配置完成，重新上传可以访问了。<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/6_2_5.png" alt=" "></p><p>原文链接：<a href="https://www.jianshu.com/p/76ce3729746d" target="_blank" rel="noopener">https://www.jianshu.com/p/76ce3729746d</a><br>&emsp;&emsp;&emsp;&emsp;&emsp;<a href="https://www.jianshu.com/p/1f8107a8778c" target="_blank" rel="noopener">https://www.jianshu.com/p/1f8107a8778c</a><br>&emsp;&emsp;&emsp;&emsp;&emsp;<a href="https://blog.csdn.net/wgshun616/article/details/81019739" target="_blank" rel="noopener">https://blog.csdn.net/wgshun616/article/details/81019739</a><br></p></font><p></p></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Others </category>
          
          <category> Github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
            <tag> next </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github+Hexo搭建博客(5)—next7.5主题个性化2</title>
      <link href="/2019/11/19/Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%885%EF%BC%89%E2%80%94Next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%962/"/>
      <url>/2019/11/19/Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%885%EF%BC%89%E2%80%94Next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%962/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="1-实现统计功能"><a href="#1-实现统计功能" class="headerlink" title="1.实现统计功能"></a>1.实现统计功能</h4><p><strong>实现效果图</strong><br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/5_1.png" alt=" "><a id="more"></a></p><p><strong>具体实现方法</strong><br>在根目录下安装hexo-wordcount，运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure><p>然后在myblog的配置文件_config.yml中，添加配置如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line"> <span class="comment">#文章内是否显示</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span></span><br><span class="line"> <span class="comment"># 网页底部是否显示</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">yml</span></span><br><span class="line"><span class="string">在next主题配置_config.yml文件中,修改配置如下</span></span><br><span class="line"><span class="string">​```yml</span></span><br><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-symbols-count-time</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#文章中的显示是否显示文字（本文字数|阅读时长） </span></span><br><span class="line">  <span class="attr">item_text_post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#网页底部的显示是否显示文字（站点总字数|站点阅读时长） </span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Average Word Length (chars count in word)</span></span><br><span class="line">  <span class="attr">awl:</span> <span class="number">4</span></span><br><span class="line">  <span class="comment"># Words Per Minute</span></span><br><span class="line">  <span class="attr">wpm:</span> <span class="number">275</span></span><br></pre></td></tr></table></figure><h4 id="2-添加顶部加载条"><a href="#2-添加顶部加载条" class="headerlink" title="2.添加顶部加载条"></a>2.添加顶部加载条</h4><p><strong>具体实现方法</strong><br>修改主题配置文件(_config.yml)将pace: false改为pace: true，可以换不同样式的加载条，如下，</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pace:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Themes list:</span></span><br><span class="line">  <span class="comment"># big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span></span><br><span class="line">  <span class="comment"># corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">minimal</span></span><br></pre></td></tr></table></figure><h4 id="3-在文章底部增加版权信息"><a href="#3-在文章底部增加版权信息" class="headerlink" title="3.在文章底部增加版权信息"></a>3.在文章底部增加版权信息</h4><p><strong>实现效果图</strong><br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/5_3.png" alt=" "></p><p><strong>具体实现方法</strong><br>在修改next主题的配置文件_config.yml如下，</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Creative Commons 4.0 International License.</span></span><br><span class="line"><span class="comment"># See: https://creativecommons.org/share-your-work/licensing-types-examples</span></span><br><span class="line"><span class="comment"># Available values of license: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></span><br><span class="line"><span class="comment"># You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span></span><br><span class="line"><span class="comment"># CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span></span><br><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">deed.zh</span></span><br></pre></td></tr></table></figure><h4 id="4-隐藏网页底部powered-By-Hexo-强力驱动和主题版本"><a href="#4-隐藏网页底部powered-By-Hexo-强力驱动和主题版本" class="headerlink" title="4.隐藏网页底部powered By Hexo/强力驱动和主题版本"></a>4.隐藏网页底部powered By Hexo/强力驱动和主题版本</h4><p>修改next下的_config.yml配置文件，将footer做如下修改：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">powered:</span></span><br><span class="line">    <span class="comment"># Hexo link (Powered by Hexo).</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment">#此处改为false</span></span><br><span class="line">    <span class="comment"># Version info of Hexo after Hexo link (vX.X.X).</span></span><br><span class="line">    <span class="attr">version:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">theme:</span></span><br><span class="line">    <span class="comment"># Theme &amp; scheme info link (Theme - NexT.scheme).</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment">#此处改为false</span></span><br><span class="line">    <span class="comment"># Version info of NexT after scheme info (vX.X.X).</span></span><br><span class="line">    <span class="attr">version:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="5-博文置顶"><a href="#5-博文置顶" class="headerlink" title="5.博文置顶"></a>5.博文置顶</h4><p>修改hero-generator-index插件，把文件：node_modules/hexo-generator-index/lib/generator.js内的代码替换为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="keyword">var</span> pagination = <span class="built_in">require</span>(<span class="string">'hexo-pagination'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">locals</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> config = <span class="keyword">this</span>.config;</span><br><span class="line">  <span class="keyword">var</span> posts = locals.posts;</span><br><span class="line">    posts.data = posts.data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; <span class="comment">// 两篇文章top都有定义</span></span><br><span class="line">            <span class="keyword">if</span>(a.top == b.top) <span class="keyword">return</span> b.date - a.date; <span class="comment">// 若top值一样则按照文章日期降序排</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> b.top - a.top; <span class="comment">// 否则按照top值降序排</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; <span class="comment">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> b.date - a.date; <span class="comment">// 都没定义按照文章日期降序排</span></span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="keyword">var</span> paginationDir = config.pagination_dir || <span class="string">'page'</span>;</span><br><span class="line">  <span class="keyword">return</span> pagination(<span class="string">''</span>, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [<span class="string">'index'</span>, <span class="string">'archive'</span>],</span><br><span class="line">    format: paginationDir + <span class="string">'/%d/'</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在文章中添加top值，数值越大文章越靠前，如下，</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2017</span><span class="number">-05</span><span class="number">-22</span> <span class="number">22</span><span class="string">:45:48</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">技巧</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">技巧</span></span><br><span class="line"><span class="attr">copyright:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">top:</span> <span class="number">100</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h4 id="6-修改字体大小"><a href="#6-修改字体大小" class="headerlink" title="6.修改字体大小"></a>6.修改字体大小</h4><p>修改next主题的配置文件_config.yml如下，</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Uri of fonts host, e.g. //fonts.googleapis.com (Default).</span></span><br><span class="line">  <span class="attr">host:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font options:</span></span><br><span class="line">  <span class="comment"># `external: true` will load this font family from `host` above.</span></span><br><span class="line">  <span class="comment"># `family: Times New Roman`. Without any quotes.</span></span><br><span class="line">  <span class="comment"># `size: x.x`. Use `em` as unit. Default: 1 (16px)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Global font settings used for all elements inside &lt;body&gt;.</span></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Lato</span></span><br><span class="line">    <span class="attr">size:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for site title (.site-title).</span></span><br><span class="line">  <span class="attr">title:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br><span class="line">    <span class="attr">size:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for headlines (&lt;h1&gt; to &lt;h6&gt;).</span></span><br><span class="line">  <span class="attr">headings:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br><span class="line">    <span class="attr">size:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for posts (.post-body).</span></span><br><span class="line">  <span class="attr">posts:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for &lt;code&gt; and code blocks.</span></span><br><span class="line">  <span class="attr">codes:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br></pre></td></tr></table></figure><h4 id="7-修改打赏字体不闪动"><a href="#7-修改打赏字体不闪动" class="headerlink" title="7.修改打赏字体不闪动"></a>7.修改打赏字体不闪动</h4><p>修改next主题的配置文件_config.yml如下，</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Reward (Donate)</span></span><br><span class="line"><span class="comment"># Front-matter variable (unsupport animation).</span></span><br><span class="line"><span class="attr">reward_settings:</span></span><br><span class="line">  <span class="comment"># If true, reward would be displayed in every article by default.</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">animation:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">comment:</span> <span class="string">''</span></span><br></pre></td></tr></table></figure><h4 id="8-侧边栏推荐阅读"><a href="#8-侧边栏推荐阅读" class="headerlink" title="8.侧边栏推荐阅读"></a>8.侧边栏推荐阅读</h4><p>打开主题配置文件修改成这样就行了(links里面写想要的链接):</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Blogrolls</span></span><br><span class="line"><span class="attr">links_title:</span> <span class="string">推荐阅读</span></span><br><span class="line"><span class="comment">#links_layout: block</span></span><br><span class="line"><span class="attr">links_layout:</span> <span class="string">inline</span></span><br><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="string">优设:</span> <span class="string">http://www.uisdc.com/</span></span><br><span class="line">  <span class="string">张鑫旭:</span> <span class="string">http://www.zhangxinxu.com/</span></span><br><span class="line">  <span class="string">Web前端导航:</span> <span class="string">http://www.alloyteam.com/nav/</span></span><br><span class="line">  <span class="string">前端书籍资料:</span> <span class="string">http://www.36zhen.com/t?id=3448</span></span><br><span class="line">  <span class="string">百度前端技术学院:</span> <span class="string">http://ife.baidu.com/</span></span><br><span class="line">  <span class="string">google前端开发基础:</span> <span class="string">http://wf.uisdc.com/cn/</span></span><br></pre></td></tr></table></figure><h4 id="9-为博客加宠物"><a href="#9-为博客加宠物" class="headerlink" title="9.为博客加宠物"></a>9.为博客加宠物</h4><p><strong>实现效果图</strong><br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/5_4.png" alt=" "></p><p><strong>具体实现方法</strong><br>在终端切换到你的博客的本地路径里，然后输入如下代码安装live2d插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><p>在hexo的_config.yml中添加参数：（具体配置可以看官方文档）</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-&lt;你喜欢的模型名字&gt;</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>在站点目录下建文件夹live2d_models，再在live2d_models下建文件夹&lt;你喜欢的模型名字&gt;,再在&lt;你喜欢的模型名字&gt;下建json文件：&lt;你喜欢的模型名字&gt;.model.json<a href="https://github.com/xiazeyu/live2d-widget-models"><strong>点我了解所有模型</strong></a><br>安装模型。在命令行运行以下命令即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save live2d-widget-model-&lt;你喜欢的模型名字&gt;</span><br></pre></td></tr></table></figure><p>然后依次在命令行运行hexo clean，hexo g，hexo d就可以看到了。</p><h4 id="10-点击爆炸效果"><a href="#10-点击爆炸效果" class="headerlink" title="10.点击爆炸效果"></a>10.点击爆炸效果</h4><p><strong>实现效果图</strong><br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/5_5.png" alt=" "></p><p><strong>具体实现方法</strong><br>这跟红心效果道理是一样的，首先在themes/next/source/js里面建一个叫fireworks.js的文件，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;<span class="string">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;;</span><br></pre></td></tr></table></figure><p>打开themes/next/layout/_layout.swig,在<script src="/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05"></script><script>L2Dwidget.init({"pluginRootPath":"live2dw/","pluginJsPath":"lib/","pluginModelPath":"assets/","model":{"jsonPath":"/live2dw/assets/koharu.model.json"},"display":{"position":"right","width":150,"height":300},"mobile":{"show":true},"log":false,"tagMode":false});</script>上面写下如下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.fireworks %&#125;</span><br><span class="line">   &lt;canvas <span class="class"><span class="keyword">class</span></span>=<span class="string">"fireworks"</span> style=<span class="string">"position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;"</span> &gt;<span class="xml"><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span> </span><br><span class="line">   &lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"//cdn.bootcss.com/animejs/2.2.0/anime.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span> </span><br><span class="line">   &lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/fireworks.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>打开主题配置文件，在里面最后写下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Fireworks</span></span><br><span class="line"><span class="attr">fireworks:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="11-本地搜索"><a href="#11-本地搜索" class="headerlink" title="11.本地搜索"></a>11.本地搜索</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search</span><br></pre></td></tr></table></figure><p>修改主题配置文件_config.yml中的local_search如下</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>原文链接：<a href="http://shenzekun.cn/" target="_blank" rel="noopener">http://shenzekun.cn/</a><br>&emsp;&emsp;&emsp;&emsp;&emsp;<a href="https://blog.ynxiu.com/2016/hexo-next-theme-optimize.html" target="_blank" rel="noopener">https://blog.ynxiu.com/2016/hexo-next-theme-optimize.html</a><br>&emsp;&emsp;&emsp;&emsp;&emsp;<a href="https://www.simon96.online" target="_blank" rel="noopener">https://www.simon96.online</a><br></p></font><p></p></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Others </category>
          
          <category> Github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
            <tag> next </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github+Hexo搭建博客(4)—next7.5主题个性化1</title>
      <link href="/2019/11/19/Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%884%EF%BC%89%E2%80%94Next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%961/"/>
      <url>/2019/11/19/Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%884%EF%BC%89%E2%80%94Next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%961/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="1-在右上角或者左上角实现fork-me-on-github"><a href="#1-在右上角或者左上角实现fork-me-on-github" class="headerlink" title="1.在右上角或者左上角实现fork me on github"></a>1.在右上角或者左上角实现fork me on github</h4><p><strong>实现效果图</strong><br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/4_1.png" alt=" "><a id="more"></a> </p><p><strong>具体实现方法</strong><br>点击<a href="https://github.com/blog/273-github-ribbons">这里</a>或者<a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">这里</a>挑选自己喜欢的样式，并复制代码。<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/4_2.png" alt=" "></p><p>然后粘贴刚才复制的代码到themes/next/layout/_layout.swig文件中如下位置，并把href改为你的github地址<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/4_3.png" alt=" "></p><h4 id="2-主页文章添加阴影效果"><a href="#2-主页文章添加阴影效果" class="headerlink" title="2.主页文章添加阴影效果"></a>2.主页文章添加阴影效果</h4><p><strong>实现效果图</strong><br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/4_14.png" alt=" "></p><p><strong>具体实现方法</strong><br>由于next7.5没有预留_custom文件夹，使用其injects注册器自定义样式实现阴影效果，步骤如下，<br>在myblog\source下新建_data文件夹，新建styles.styl文件，写入以下代码，</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 主页文章添加阴影效果 </span><br><span class="line"><span class="selector-class">.article</span> &#123;   </span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">60px</span>;   </span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">60px</span>;   </span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">25px</span>;   </span><br><span class="line">    <span class="attribute">-webkit-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(202, 203, 203, .5);   </span><br><span class="line">    <span class="attribute">-moz-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(202, 203, 204, .5);   </span><br><span class="line">    //发光阴影-webkit-box-shadow: -1px 0 20px #3B3B3B, 1px 0 20px #3B3B3B, 0 -1px 20px #3B3B3B, 0 1px 20px #3B3B3B  </span><br><span class="line">    //发光阴影-moz-box-shadow: -1px 0 20px #3B3B3B, 1px 0 20px #3B3B3B, 0 -1px 20px #3B3B3B, 0 1px 20px #3B3B3B  </span><br><span class="line">    //-webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);//设置两层阴影  </span><br><span class="line">    //-moz-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);//设置两层阴影  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在myblog的_config.yml文件中进行如下配置，</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span>  </span><br><span class="line">    <span class="comment">#head: source/_data/head.swig  </span></span><br><span class="line">    <span class="comment">#header: source/_data/header.swig  </span></span><br><span class="line">    <span class="comment">#sidebar: source/_data/sidebar.swig  </span></span><br><span class="line">    <span class="comment">#postMeta: source/_data/post-meta.swig  </span></span><br><span class="line">    <span class="comment">#postBodyEnd: source/_data/post-body-end.swig  </span></span><br><span class="line">    <span class="comment">#footer: source/_data/footer.swig  </span></span><br><span class="line">    <span class="comment">#bodyEnd: source/_data/body-end.swig  </span></span><br><span class="line">    <span class="comment">#variable: source/_data/variables.styl  </span></span><br><span class="line">    <span class="comment">#mixin: source/_data/mixins.styl  </span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure><p>最后打开主题文件下\scripts\filters添加注射器如下，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.filter.register(<span class="string">'theme_inject'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">injects</span>) </span>&#123; </span><br><span class="line">    injects.style.push(<span class="string">'source/_data/styles.styl'</span>); </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>经过该步操作，很多教程修改_custom.styl的操作都可以通过修改style.styl实现，另外很多修改_layout.styl等原配置文件的操作都建议通过修改style.styl文件实现，这样避免修改源代码，也方便查找自定义的修改。</strong></p><h4 id="3-添加动态背景"><a href="#3-添加动态背景" class="headerlink" title="3.添加动态背景"></a>3.添加动态背景</h4><p><strong>实现效果图</strong><br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/4_7.gif" alt=" "></p><p><strong>具体实现方法</strong><br>原则上说，next7.5版本只需要修改next的_config.yml配置文件即可实现，但是我没有成功，所以还是按照以下步骤实现。<br>1.打开next/layout/_layout.swig<br>在&lt; /body&gt;之前添加代码(注意不要放在&lt; /head&gt;的后面)</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.canvas_nest %&#125;</span><br><span class="line">    &lt;script type="text/javascript" src="//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>2.打开/next/_config.yml,在里面修改如下代码：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># background settings</span></span><br><span class="line"><span class="comment"># add canvas-nest effect</span></span><br><span class="line"><span class="comment"># see detail from https://github.com/hustcc/canvas-nest.js</span></span><br><span class="line"><span class="attr">canvas_nest:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>到此就结束了，运行hexo clean，然后运行hexo g,然后运行hexo s，最后打开浏览器在浏览器的地址栏输入localhost:4000<br>3.如果你觉得默认线条数量太多了，可以修改线条数量。在上一步修改_layout.swig中，把刚才的这些代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.canvas_nest %&#125;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.canvas_nest %&#125;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span></span><br><span class="line">color=<span class="string">"0,0,255"</span> opacity=<span class="string">'0.7'</span> zIndex=<span class="string">"-2"</span> count=<span class="string">"99"</span> src=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>4.配置项说明<br>color：线条颜色, 默认:’0,0,0’；三个数字分别为(R,G,B)<br>opacity：线条透明度（0~1）, 默认:0.5<br>count：线条的总数量, 默认:150<br>zIndex：背景的z-index属性，css属性用于控制所在层的位置, 默认:-1</p><h4 id="4-实现点击出现桃心效果"><a href="#4-实现点击出现桃心效果" class="headerlink" title="4.实现点击出现桃心效果"></a>4.实现点击出现桃心效果</h4><p><strong>实现效果图</strong><br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/4_8.gif" alt=" "></p><p><strong>具体实现方法</strong><br>把js文件love.js<a href="https://coding.net/u/aixiu/p/download/git/blob/master/love.js" target="_blank" rel="noopener">点我下载love.js</a>放在\themes\next\source\js\src文件目录（保证文件目录跟下面代码中引入目录相同即可）下，更新\themes\next\layout_layout.swig文件，在末尾（在前面引用会出现找不到的 bug）添加以下js引入代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt; </span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/love.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="5-修改文章内链接文本样式"><a href="#5-修改文章内链接文本样式" class="headerlink" title="5.修改文章内链接文本样式"></a>5.修改文章内链接文本样式</h4><p><strong>实现效果图</strong><br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/4_9.gif" alt=" "></p><p><strong>具体实现方法</strong><br>修改文件themes\next\source\css_common\components\post\post.styl，在末尾添加如下css样式，</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 文章内链接文本样式 </span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span>&#123;  </span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#0593d3</span>;  </span><br><span class="line">    <span class="attribute">border-bottom</span>: none;  </span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#0593d3</span>;  </span><br><span class="line">    &amp;:hover &#123;    </span><br><span class="line">        <span class="selector-tag">color</span>: <span class="selector-id">#fc6423</span>;    </span><br><span class="line">        <span class="selector-tag">border-bottom</span>: <span class="selector-tag">none</span>;    </span><br><span class="line">        <span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#fc6423</span>;  </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中选择.post-body是为了不影响标题，选择p是为了不影响首页“阅读全文”的显示样式，颜色可以自己定义。</p><h4 id="6-在文章末尾统一添加“本文结束”标记"><a href="#6-在文章末尾统一添加“本文结束”标记" class="headerlink" title="6.在文章末尾统一添加“本文结束”标记"></a>6.在文章末尾统一添加“本文结束”标记</h4><p><strong>实现效果图</strong><br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/4_10.png" alt=" "></p><p><strong>具体实现方法</strong><br>在路径\themes\next\layout_macro中新建passage-end-tag.swig文件,并添加以下内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>     </span><br><span class="line">    &#123;% if not is_index %&#125;         </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;color: #ccc;font-size:14px;"</span>&gt;</span></span><br><span class="line">        -------------本文结束<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-paw"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>感谢您的阅读-------------</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span>     </span><br><span class="line">    &#123;% endif %&#125; </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接着打开\themes\next\layout_macro\post.swig文件，在post-body之后，post-footer之前添加代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>   </span><br><span class="line">    &#123;% if not is_index %&#125;     </span><br><span class="line">        &#123;% include 'passage-end-tag.swig' %&#125;   </span><br><span class="line">    &#123;% endif %&#125; </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后打开主题配置文件（_config.yml),在末尾添加：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文章末尾添加“本文结束”标记 </span></span><br><span class="line"><span class="attr">passage_end_tag:</span>  </span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>完成以上设置之后，在每篇文章之后都会添加如上效果图的样子。</p><h4 id="7-修改作者头像并旋转"><a href="#7-修改作者头像并旋转" class="headerlink" title="7.修改作者头像并旋转"></a>7.修改作者头像并旋转</h4><p><strong>实现效果图</strong><br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/4_11.gif" alt=" "></p><p><strong>具体实现方法</strong><br>修改next的配置文件_config.yml如下，</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar avatar:  </span></span><br><span class="line"><span class="comment"># Replace the default image and set the url here.  </span></span><br><span class="line"><span class="attr">url:</span> <span class="string">/images/avatar.jpg</span>  </span><br><span class="line"><span class="comment"># If true, the avatar would be dispalyed in circle.  </span></span><br><span class="line"><span class="attr">rounded:</span> <span class="literal">true</span>  </span><br><span class="line"><span class="comment"># If true, the avatar would be rotated with the cursor.  </span></span><br><span class="line"><span class="attr">rotated:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="8-侧边栏社交小图标设置"><a href="#8-侧边栏社交小图标设置" class="headerlink" title="8.侧边栏社交小图标设置"></a>8.侧边栏社交小图标设置</h4><p><strong>实现效果图</strong><br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/4_13.png" alt=" "></p><p><strong>具体实现方法</strong><br>打开主题配置文件（_config.yml），搜索social_icons:，在<a href="http://fontawesome.io/icons/" target="_blank" rel="noopener">图标库</a>找自己喜欢的小图标，并将名字复制在如下位置，保存即可</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social:</span>  </span><br><span class="line">    <span class="attr">GitHub:</span> <span class="string">https://github.com/xtlei/xtlei.github.io.git</span> <span class="string">||</span> <span class="string">github</span>  </span><br><span class="line">    <span class="attr">E-Mail:</span> <span class="string">mr.xietonglei@foxmail.com</span> <span class="string">||</span> <span class="string">envelope</span>  </span><br><span class="line">    <span class="comment">#Weibo: https://weibo.com/yourname || weibo  </span></span><br><span class="line">    <span class="comment">#Google: https://plus.google.com/yourname || google  </span></span><br><span class="line">    <span class="comment">#Twitter: https://twitter.com/yourname || twitter  </span></span><br><span class="line">    <span class="comment">#FB Page: https://www.facebook.com/yourname || facebook  </span></span><br><span class="line">    <span class="comment">#VK Group: https://vk.com/yourname || vk  </span></span><br><span class="line">    <span class="comment">#StackOverflow: https://stackoverflow.com/yourname || stack-overflow  </span></span><br><span class="line">    <span class="comment">#YouTube: https://youtube.com/yourname || youtube  </span></span><br><span class="line">    <span class="comment">#Instagram: https://instagram.com/yourname || instagram  </span></span><br><span class="line">    <span class="comment">#Skype: skype:yourname?call|chat || skype</span></span><br></pre></td></tr></table></figure><h4 id="9-添加RSS"><a href="#9-添加RSS" class="headerlink" title="9.添加RSS"></a>9.添加RSS</h4><p><strong>实现效果图</strong><br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/4_4.png" alt=" "></p><p><strong>具体实现方法</strong><br>切换到myblog的路径，例如我是在D:/Github/myblog这个路径上，也就是在你的根目录下<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/4_5.png" alt=" "></p><p>然后使用命令行终端安装Hexo插件：(插件会放在node_modules文件夹)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure><p>接下来打开myblog文件夹下的_config.yml文件，如下图：<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/4_6.png" alt=" "></p><p>在里面的末尾添加：(<strong>请注意</strong>在冒号后面要加一个空格，否则报错！)</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions </span></span><br><span class="line"><span class="comment">## Plugins: http://hexo.io/plugins/ </span></span><br><span class="line"><span class="attr">plugins:</span> <span class="string">hexo-generate-feed</span></span><br></pre></td></tr></table></figure><p>然后打开next主题文件夹里面的_config.yml，在里面配置如下：(就是在rss:的后面加上/atom.xm，<strong>注意</strong>在冒号后面要加一个空格)</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Set rss to false to disable feed link. </span></span><br><span class="line"><span class="comment"># Leave rss as empty to use site's feed link. </span></span><br><span class="line"><span class="comment"># Set rss to specific value if you have burned your feed already. </span></span><br><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br></pre></td></tr></table></figure><p>配置完之后运行：hexo g<br>重新生成一次，在./public文件夹中看到atom.xml文件。然后启动服务器查看是否有效，之后再部署到Github中。</p><h4 id="10-添加README-md文件"><a href="#10-添加README-md文件" class="headerlink" title="10.添加README.md文件"></a>10.添加README.md文件</h4><p>每个项目下一般都有一个README.md文件，但是使用hexo部署到仓库后，项目下是没有README.md文件的。<br>在Hexo目录下的source根目录下添加一个README.md文件，修改站点配置文件_config.yml，将skip_render参数的值设置为</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> <span class="string">README.md</span></span><br></pre></td></tr></table></figure><p>保存退出即可。再次使用hexo d命令部署博客的时候就不会在渲染 README.md这个文件了。</p><h4 id="11-设置网站的图标Favicon"><a href="#11-设置网站的图标Favicon" class="headerlink" title="11.设置网站的图标Favicon"></a>11.设置网站的图标Favicon</h4><p><strong>实现效果图</strong><br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/4_15.png" alt=" "></p><p><strong>具体方法实现</strong><br>在<a href="http://www.easyicon.net/" target="_blank" rel="noopener">EasyIcon</a>中找一张（32*32）的ico图标,或者去别的网站下载或者制作，并将图标名称改为favicon.ico，然后把图标放在/themes/next/source/images里，并且修改主题配置文件：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Put your favicon.ico into `hexo-site/source/` directory. </span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">/favicon.ico</span></span><br></pre></td></tr></table></figure><h4 id="12-文章多个标签多级分类"><a href="#12-文章多个标签多级分类" class="headerlink" title="12.文章多个标签多级分类"></a>12.文章多个标签多级分类</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: Git使用中的报错情况</span><br><span class="line">date: 2017-03-11 23:54:11</span><br><span class="line">tags: [git,实战经验] </span><br><span class="line">categories: </span><br><span class="line"><span class="bullet">- </span>软件开发（一级分类）</span><br><span class="line"><span class="bullet">- </span>Others（二级分类）</span><br></pre></td></tr></table></figure><p>原文链接：<a href="http://shenzekun.cn/" target="_blank" rel="noopener">http://shenzekun.cn/</a><br>&emsp;&emsp;&emsp;&emsp;&emsp;<a href="https://blog.ynxiu.com/2016/hexo-next-theme-optimize.html" target="_blank" rel="noopener">https://blog.ynxiu.com/2016/hexo-next-theme-optimize.html</a><br>&emsp;&emsp;&emsp;&emsp;&emsp;<a href="http://shenzekun.cn/" target="_blank" rel="noopener">http://shenzekun.cn/</a><br></p></font><p></p></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Others </category>
          
          <category> Github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
            <tag> next </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github+Hexo搭建博客(3)—next主题配置</title>
      <link href="/2019/11/19/Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%883%EF%BC%89%E2%80%94Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/11/19/Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%883%EF%BC%89%E2%80%94Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="Hexo主目录作用"><a href="#Hexo主目录作用" class="headerlink" title="Hexo主目录作用"></a>Hexo主目录作用<a id="more"></a></h4><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/3_0.png" alt></p><p>如图是myblog文件的主目录，由上往下文件的作用</p><ul><li><strong>node_modules</strong>：是我们这个hexo整个项目的环境依赖，自动生成的，不用理会。</li><li><strong>public</strong>：存放的是整个项目的页面，样式，及逻辑代码。</li><li><strong>scaffolds</strong>：scaffolds是脚手架的意思，当你新建一篇文章(hexo new page ‘title’)的时候，hexo是根据这个目录下的文件进行构建的。不用关心。</li><li><strong>source</strong>：这个目录很重要，新建的文章都是在保存在这个目录下的_posts 。_posts目录下是一个个markdown文件。初始里面有一个hello-world.md的文件，文章就在这个文件中编辑。_posts目录下的md文件，会被编译成html文件，放到public文件夹下。</li><li><strong>themes</strong>：是网站的主题目录，Hexo有很好的主题扩展能力，开源主题也很丰富，该目录下每一个子目录就是一个主题。</li><li><strong>_config.yml</strong>：全局配置文件，Blog站点的很多信息都是在这个文件中配置的，比如网站的名字，副标题，网站描述信息，作者等等。</li><li><strong>.package.json</strong>：这个文件里可以看到hexo所依赖的插件。</li></ul><p>接下来详细说一说_config.yml文件的配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">枪在手，跟我走</span> <span class="comment">#网站标题</span></span><br><span class="line"><span class="attr">subtitle:</span>   <span class="comment">#网站副标题</span></span><br><span class="line"><span class="attr">description:</span>  <span class="comment">#网站描述</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">RoseSnow</span>  <span class="comment">#作者</span></span><br><span class="line"><span class="attr">language:</span>    <span class="comment">#语言</span></span><br><span class="line"><span class="attr">timezone:</span>    <span class="comment">#网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://rosesnow.top</span>   <span class="comment">#你的站点Url</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span>                       <span class="comment">#站点的根目录</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span>   <span class="comment">#文章的 永久链接 格式   </span></span><br><span class="line"><span class="attr">permalink_defaults:</span>    <span class="comment">#永久链接中各部分的默认值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory   </span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span>   <span class="comment">#资源文件夹，这个文件夹用来存放内容</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span>     <span class="comment">#公共文件夹，这个文件夹用于存放生成的站点文件。</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span>         <span class="comment"># 标签文件夹     </span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span>    <span class="comment">#归档文件夹</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span>      <span class="comment">#分类文件夹</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span>     <span class="comment">#Include code 文件夹</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span>                <span class="comment">#国际化（i18n）文件夹</span></span><br><span class="line"><span class="attr">skip_render:</span>                <span class="comment">#跳过指定文件的渲染    </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># 新文章的文件名称</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span>     <span class="comment">#预设布局</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># 把标题转换为 title case</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># 在新标签中打开链接</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span>     <span class="comment">#把文件名称转换为 (1) 小写或 (2) 大写</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span>  <span class="comment">#是否显示草稿</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span>  <span class="comment">#是否启动 Asset 文件夹</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span>      <span class="comment">#把链接改为与根目录的相对位址    </span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span>                <span class="comment">#显示未来的文章</span></span><br><span class="line"><span class="attr">highlight:</span>                    <span class="comment">#内容中代码块的设置    </span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tab_replace:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="attr">category_map:</span>          <span class="comment">#分类别名</span></span><br><span class="line"><span class="attr">tag_map:</span>            <span class="comment">#标签别名</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span>         <span class="comment">#日期格式</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="string">HH:mm:ss</span>        <span class="comment">#时间格式    </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span>    <span class="comment">#分页数量</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">landscape</span>   <span class="comment">#主题名称 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="comment">#  部署部分的设置</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:RoseSnow/RoseSnow.github.io.git</span> <span class="comment">#这里我们之前部署到github时配置过的</span></span><br><span class="line">  <span class="attr">baranch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h4 id="更换Next主题"><a href="#更换Next主题" class="headerlink" title="更换Next主题"></a>更换Next主题</h4><p>本文介绍Next主题的配置用法，其他的主题用法大体步骤是类似的。更多详情：<a href="https://theme-next.org/docs/getting-started/#Adding-Plugins" target="_blank" rel="noopener"><strong>点我了解更多</strong></a></p><h5 id="1-主题下载"><a href="#1-主题下载" class="headerlink" title="1.主题下载"></a>1.主题下载</h5><p>进入到myblog文件目录下，打开powershell终端，键入命令：git clone <a href="https://github.com/theme-next/hexo-theme-next">https://github.com/theme-next/hexo-theme-next</a> themes/next下载完毕，我们打开themes文件夹，会发现多出一个next的文件夹。</p><h5 id="2-应用主题"><a href="#2-应用主题" class="headerlink" title="2.应用主题"></a>2.应用主题</h5><p>打开根myblog目录下的_config.yml文件，修改themes的值为next如图<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/3_1.png" alt=" "></p><h5 id="3-预览"><a href="#3-预览" class="headerlink" title="3.预览"></a>3.预览</h5><p>进入终端在根目录myblog下依次键入如下命令：</p><ul><li>hexo clean先清理一下hexo的缓存</li><li>hexo s本地启动服务</li><li>打开浏览器：在地址栏键入http:// localhost:4000预览，如图<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/3_2.png" alt=" "></li></ul><h4 id="Next配置"><a href="#Next配置" class="headerlink" title="Next配置"></a>Next配置</h4><p>next主题应用成功之后，也需要配置一下，打开themes文件夹下的next文件会看到也有一个_config.yml的文件，这个就是next主题的全局配置文件。<br>_config.yml配置，截取了一部分，这里基本上是需要配置的，其他的基本是默认</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">favicon:</span> <span class="comment"># 这里配置站点的站标</span></span><br><span class="line">  <span class="comment"># small: /images/favicon-16x16-next.png</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/favicon-16x16-next.png</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/images/apple-touch-icon-next.png</span></span><br><span class="line">  <span class="attr">safari_pinned_tab:</span> <span class="string">/images/logo.svg</span></span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set default keywords (Use a comma to separate)</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="comment"># 这里放置站点的关键字 "前端, HTML, CSS, javascript, Vue.js, Node.js, MySQL, 微信小程序"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set rss to false to disable feed link.</span></span><br><span class="line"><span class="comment"># Leave rss as empty to use site's feed link.</span></span><br><span class="line"><span class="comment"># Set rss to specific value if you have burned your feed already.</span></span><br><span class="line"><span class="attr">rss:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">footer:</span> <span class="comment"># 网站的页脚设置</span></span><br><span class="line">  <span class="comment"># Specify the date when the site was setup.</span></span><br><span class="line">  <span class="comment"># If not defined, current year will be used.</span></span><br><span class="line">  <span class="attr">since:</span> <span class="comment"># 网站的开始运行时间 比如设置2017 则网站底部显示 2017-2018</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Icon between year and copyright info.</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">user</span> </span><br><span class="line"></span><br><span class="line">  <span class="comment"># If not defined, will be used `author` from Hexo main config.</span></span><br><span class="line">  <span class="comment"># copyright:</span></span><br><span class="line">  <span class="comment"># -------------------------------------------------------------</span></span><br><span class="line">  <span class="comment"># Hexo link (Powered by Hexo).</span></span><br><span class="line">  <span class="comment"># powered: true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># theme:</span></span><br><span class="line">  <span class="comment">#   Theme &amp; scheme info link (Theme - NexT.scheme).</span></span><br><span class="line">  <span class="comment">#   enable: false</span></span><br><span class="line">  <span class="comment">#   Version info of NexT after scheme info (vX.X.X).</span></span><br><span class="line">  <span class="comment">#   version false</span></span><br><span class="line">  <span class="comment"># -------------------------------------------------------------</span></span><br><span class="line">  <span class="comment"># Any custom text can be defined here.</span></span><br><span class="line">  <span class="comment">#custom_text: Hosted by &lt;a target="_blank" href="https://pages.github.com"&gt;GitHub Pages&lt;/a&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># SEO Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Canonical, set a canonical link tag in your hexo, you could use it for your SEO of blog.</span></span><br><span class="line"><span class="comment"># See: https://support.google.com/webmasters/answer/139066</span></span><br><span class="line"><span class="comment"># Tips: Before you open this tag, remember set up your URL in hexo _config.yml ( ex. url: http://yourdomain.com )</span></span><br><span class="line"><span class="attr">canonical:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Change headers hierarchy on site-subtitle (will be main site description) and on all post/pages titles for better SEO-optimization.</span></span><br><span class="line"><span class="attr">seo:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If true, will add site-subtitle to index page, added in main hexo config.</span></span><br><span class="line"><span class="comment"># subtitle: Subtitle</span></span><br><span class="line"><span class="attr">index_with_subtitle:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Menu Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash from link value (/archives -&gt; archives).</span></span><br><span class="line"><span class="comment"># Usage: `Key: /link/ || icon`</span></span><br><span class="line"><span class="comment"># Key is the name of menu item. If translate for this menu will find in languages - this translate will be loaded; if not - Key name will be used. Key is case-senstive.</span></span><br><span class="line"><span class="comment"># Value before `||` delimeter is the target link.</span></span><br><span class="line"><span class="comment"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, question icon will be loaded.</span></span><br><span class="line"><span class="attr">menu:</span> <span class="comment"># 菜单路径 注意：下边的 || 不能去掉 后边表示的是 对应的图标</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span> <span class="comment"># 表示主页</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span> <span class="comment"># 表示标签</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span> <span class="comment"># 表示分类</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span> <span class="comment">#表示归档</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">user</span> <span class="comment">#表示关于我</span></span><br><span class="line">  <span class="attr">life:</span> <span class="string">/life/</span> <span class="string">||</span> <span class="string">heart</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar </span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat # 公益活动</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable/Disable menu icons.</span></span><br><span class="line"><span class="attr">menu_icons:</span> <span class="comment"># 这里是图标设置 和上边的 || 后面的一致 </span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">home</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">archive</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">user</span></span><br><span class="line">  <span class="attr">life:</span> <span class="string">heart</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Scheme Settings 这里是next主题的样式排版设置</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Schemes next给提供了如下四个页面布局方式 只能选择其中的一个使用，具体样式，可自己动手试试，我这里选择的是Mist</span></span><br><span class="line"><span class="comment"># scheme: Muse</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Mist</span></span><br><span class="line"><span class="comment"># scheme: Pisces</span></span><br><span class="line"><span class="comment"># scheme: Gemini</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Sidebar Settings 社交设置</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Social Links. </span></span><br><span class="line"><span class="comment"># Usage: `Key: permalink || icon`</span></span><br><span class="line"><span class="comment"># Key is the link label showing to end users.</span></span><br><span class="line"><span class="comment"># Value before `||` delimeter is the target permalink.</span></span><br><span class="line"><span class="comment"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.</span></span><br><span class="line"><span class="attr">social:</span> <span class="comment"># 自己的社交链接 比如这里我设置了 Github  和  邮箱，下面还可以设置 微博之类的 自己动手设置试试</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/RoseSnow</span> <span class="string">||</span> <span class="string">github</span></span><br><span class="line">  <span class="attr">E-Mail:</span> <span class="string">number_nine@126.com</span> <span class="string">||</span> <span class="string">envelope</span></span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || twitter</span></span><br><span class="line">  <span class="comment">#FB Page: https://www.facebook.com/yourname || facebook</span></span><br><span class="line">  <span class="comment">#VK Group: https://vk.com/yourname || vk</span></span><br><span class="line">  <span class="comment">#StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span></span><br><span class="line">  <span class="comment">#YouTube: https://youtube.com/yourname || youtube</span></span><br><span class="line">  <span class="comment">#Instagram: https://instagram.com/yourname || instagram</span></span><br><span class="line">  <span class="comment">#Skype: skype:yourname?call|chat || skype</span></span><br><span class="line"></span><br><span class="line"><span class="attr">social_icons:</span> <span class="comment"># 这里是设置上面社交链接 的对应图标的 对应的设为 true 即可</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">Github:</span> <span class="string">github</span></span><br><span class="line">  <span class="attr">icons_only:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">transition:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Blog rolls  # 这里是设置一些相关链接 我这里设置了一些推荐阅读的网站，可自行设置</span></span><br><span class="line"><span class="attr">links_icon:</span> <span class="string">link</span></span><br><span class="line"><span class="attr">links_title:</span> <span class="string">推荐阅读</span></span><br><span class="line"><span class="comment"># links_layout: block</span></span><br><span class="line"><span class="attr">links_layout:</span> <span class="string">inline</span></span><br><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="attr">w3school:</span> <span class="string">http://www.w3school.com.cn/</span></span><br><span class="line">  <span class="string">菜鸟教程:</span> <span class="string">http://www.runoob.com/</span></span><br><span class="line">  <span class="string">廖雪峰官网:</span> <span class="string">https://www.liaoxuefeng.com/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="comment"># in theme directory(source/images): /images/avatar.gif</span></span><br><span class="line"><span class="comment"># in site  directory(source/uploads): /uploads/avatar.gif</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">/images/avatar.jpg</span>  <span class="comment"># 这里设置自己的头像</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Table Of Contents in the Sidebar # 文章自动显示的目录</span></span><br><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Automatically add list number to toc. 文章是否显示序号，显示则设置为true</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If true, all words will placed on next lines if header width longer then sidebar width.</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Creative Commons 4.0 International License.</span></span><br><span class="line"><span class="comment"># http://creativecommons.org/</span></span><br><span class="line"><span class="comment"># Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></span><br><span class="line"><span class="comment">#creative_commons: by-nc-sa</span></span><br><span class="line"><span class="comment">#creative_commons:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="comment"># Sidebar Position, available value: left | right (only for Pisces | Gemini).</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">left</span></span><br><span class="line">  <span class="comment">#position: right</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sidebar Display, available value (only for Muse | Mist):</span></span><br><span class="line">  <span class="comment">#  - post    expand on posts automatically. Default.</span></span><br><span class="line">  <span class="comment">#  - always  expand for all pages automatically</span></span><br><span class="line">  <span class="comment">#  - hide    expand only when click on the sidebar toggle icon.</span></span><br><span class="line">  <span class="comment">#  - remove  Totally remove sidebar including sidebar toggle.</span></span><br><span class="line">  <span class="attr">display:</span> <span class="string">post</span></span><br><span class="line">  <span class="comment">#display: always</span></span><br><span class="line">  <span class="comment">#display: hide</span></span><br><span class="line">  <span class="comment">#display: remove</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Sidebar offset from top menubar in pixels (only for Pisces | Gemini).</span></span><br><span class="line">  <span class="attr">offset:</span> <span class="number">12</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Back to top in sidebar (only for Pisces | Gemini).</span></span><br><span class="line">  <span class="attr">b2t:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Enable sidebar on narrow view (only for Muse | Mist).</span></span><br><span class="line">  <span class="attr">onmobile:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Post Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically scroll page to section which is under &lt;!-- more --&gt; mark.</span></span><br><span class="line"><span class="attr">scroll_to_more:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically saving scroll position on each post/page in cookies.</span></span><br><span class="line"><span class="attr">save_scroll:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically excerpt description in homepage as preamble text.</span></span><br><span class="line"><span class="attr">excerpt_description:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically Excerpt. Not recommend.</span></span><br><span class="line"><span class="comment"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span></span><br><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">120</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Post meta display settings</span></span><br><span class="line"><span class="attr">post_meta:</span></span><br><span class="line">  <span class="attr">item_text:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">created_at:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">updated_at:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/willin/hexo-wordcount</span></span><br><span class="line"><span class="attr">post_wordcount:</span></span><br><span class="line">  <span class="attr">item_text:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">wordcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">totalcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Wechat Subscriber 设置微信添加方式</span></span><br><span class="line"><span class="attr">wechat_subscriber:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">qcode:</span> <span class="string">/images/mywechat.jpg</span></span><br><span class="line">  <span class="attr">description:</span> <span class="string">扫一扫添加微信好友</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Reward  # 设置打赏方式</span></span><br><span class="line"><span class="attr">reward_comment:</span> <span class="string">如果觉得文章不错，请我吃根辣条吧~~</span></span><br><span class="line"><span class="attr">wechatpay:</span> <span class="string">/images/wxpay.png</span></span><br><span class="line"><span class="attr">alipay:</span> <span class="string">/images/alipay.png</span></span><br><span class="line"><span class="comment"># bitcoin: /images/bitcoin.png</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Declare license on posts</span></span><br><span class="line"><span class="attr">post_copyright:</span> <span class="comment">#自动添加版权声明</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">CC</span> <span class="string">BY-NC-SA</span> <span class="number">3.0</span></span><br><span class="line">  <span class="attr">license_url:</span> <span class="string">https://creativecommons.org/licenses/by-nc-sa/3.0/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Misc Theme Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Reduce padding / margin indents on devices with narrow width.</span></span><br><span class="line"><span class="attr">mobile_layout_economy:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Android Chrome header panel color ($black-deep).</span></span><br><span class="line"><span class="attr">android_chrome_color:</span> <span class="string">"#222"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Custom Logo.</span></span><br><span class="line"><span class="comment"># !!Only available for Default Scheme currently.</span></span><br><span class="line"><span class="comment"># Options:</span></span><br><span class="line"><span class="comment">#   enabled: [true/false] - Replace with specific image</span></span><br><span class="line"><span class="comment">#   image: url-of-image   - Images's url</span></span><br><span class="line"><span class="attr">custom_logo:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">image:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Code Highlight theme</span></span><br><span class="line"><span class="comment"># Available value:</span></span><br><span class="line"><span class="comment">#    normal | night | night eighties | night blue | night bright</span></span><br><span class="line"><span class="comment"># https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line"><span class="attr">highlight_theme:</span> <span class="string">night</span> <span class="string">eighties</span></span><br></pre></td></tr></table></figure><h4 id="创建其他页面"><a href="#创建其他页面" class="headerlink" title="创建其他页面"></a>创建其他页面</h4><p>首页和归档是默认存在的，不需要我们自己创建，但是其他的几个诸如分类，标签，关于是要自己创建的，如图<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/3_3.png" alt=" "></p><p>1.创建分类：终端myblog根目录下键入命令hexo new page categories之后我们进入myblog/source目录下发现多出一个名为categories的文件夹, 打开categories下的index.md,可以看到是这样的 如图<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/3_4.png" alt=" "></p><p>2.标签页面创建命令hexo new page tags<br>关于页面创建命令hexo new page about</p><h4 id="创建第一篇博文"><a href="#创建第一篇博文" class="headerlink" title="创建第一篇博文"></a>创建第一篇博文</h4><p>1.仍然是用new命令创建：在终端myblog下键入命令hexo new post “文章标题”。<br>2.打开source文件夹下的_posts文件，就可以看到刚刚创建的“文章名称”.md的文件，用编辑器打开，就可以编写内容了，其中文章可以设置分类和标签，如图<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/3_5.png" alt=" "></p><h4 id="提交到远程服务"><a href="#提交到远程服务" class="headerlink" title="提交到远程服务"></a>提交到远程服务</h4><p>下面把博客提交一下，如果已经把Blog部署到了GitHub上，所以可以提交到github服务器上。<br>1.hexo clean 注意：每次提交前建议都执行一下该命令，清除一下<br>2.hexo g 生成本地静态文件<br>3.hexo s 启动本地服务，在本地预览<br>4.hexo d 本地预览无误后，提交到远仓<br>下面再打开网址<a href="https://xtlei.github.io" target="_blank" rel="noopener">https://xtlei.github.io</a> (此处更换你自己的io地址)就可以访问刚刚创建的博文了<br>原文链接：<a href="https://rosesnow.github.io" target="_blank" rel="noopener">https://rosesnow.github.io</a></p></font></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Others </category>
          
          <category> Github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
            <tag> next </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github+Hexo搭建博客(2)—环境配置与部署</title>
      <link href="/2019/11/19/Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%882%EF%BC%89%E2%80%94%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E4%B8%8E%E9%83%A8%E7%BD%B2/"/>
      <url>/2019/11/19/Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%882%EF%BC%89%E2%80%94%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E4%B8%8E%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="本地环境搭建"><a href="#本地环境搭建" class="headerlink" title="本地环境搭建"></a>本地环境搭建</h4><h5 id="1-Git环境"><a href="#1-Git环境" class="headerlink" title="1.Git环境"></a>1.Git环境<a id="more"></a></h5><p>1.注册并登录Github<a href="https://github.com/"><strong>点我进入</strong></a><br>2.Git下载安装<a href="http://xietonglei.xyz/2019/11/19/Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%881%EF%BC%89%E2%80%94Git%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/" target="_blank" rel="noopener"><strong>点我查看教程</strong></a></p><h5 id="2-Node环境"><a href="#2-Node环境" class="headerlink" title="2.Node环境"></a>2.Node环境</h5><p>1.安装Node.js<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener"><strong>点我下载</strong></a>同样选择适合自己计算机系统的版本下载安装即可。<br>2.安装完毕后，测试是否安装成功，打开命令终端，win+r输入cmd进入终端，键入命令node -v或者直接输入node回车即可，如果出现下图则说明node环境安装成功：<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/1_1.png" alt=" "></p><p>1.node中集成了npm包安装工具，输入命令npm -v查看版本号，如图：<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/1_2.png" alt=" "></p><h5 id="3-Hexo环境"><a href="#3-Hexo环境" class="headerlink" title="3.Hexo环境"></a>3.Hexo环境</h5><p>Hexo是一个快速、简洁且高效的博客框架。Hexo使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<br><strong>1.安装hexo-cli</strong>：命令行键入命令cnpm i hexo-cli -g或者npm i hexo-cli -g[其中 ‘cnpm’ 代替 npm，安装速度更快；‘i’表示install，‘-g’表示全局安装 (注意：如果安装失败，建议在管理者模式下安装)]<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/1_3.png" alt=" "></p><p><strong>2.初始化</strong>：在本地合适的位置创建一个文件夹用作Blog环境，比如，在D盘Github目录下创建了一个myblog文件夹，进入此目录，按住shift键同时点击鼠标右键打开Powershell终端，键入命令hexo init进行初始化，出现下图表示安装成功。<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/1_4.png" alt=" "></p><p>完毕后发现空目录多出很多文件，如下图：<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/1_5.png" alt=" "></p><p>这里的node_modules是项目依赖，在初始化的时候已经下载下来了，不用再hexo i了(有的教程写的hexo i就是安装依赖的作用)。</p><h5 id="4-测试本地运行"><a href="#4-测试本地运行" class="headerlink" title="4.测试本地运行"></a>4.测试本地运行</h5><p>上述环境完成后，就可以在本地预览blog了。<br>1.键入命令hexo generate生成静态文件，可以简写为hexo g<br>2.键入命令hexo server在本地运行， 可以简写为hexo s<br>注意要保证PowerShell当前目录仍为myblog，出现下图则表示成功，<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/1_6.png" alt=" "></p><p>打开浏览器，地址栏键入<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 即可进行预览，效果如下</p><h4 id="Github部署"><a href="#Github部署" class="headerlink" title="Github部署"></a>Github部署</h4><h5 id="1-在github上创建一个仓库"><a href="#1-在github上创建一个仓库" class="headerlink" title="1.在github上创建一个仓库"></a>1.在github上创建一个仓库</h5><p>注意此仓库的名称格式是：你的github用户名.github.io(其中用户名不区分大小写) 如下图<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/1_7.png" alt=" "></p><h5 id="2-修改hexo文件配置"><a href="#2-修改hexo文件配置" class="headerlink" title="2.修改hexo文件配置"></a>2.修改hexo文件配置</h5><p>1.要想部署到github，需要对本地myblog文件夹下的_config.yml文件进行配置,如图<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/1_8.png" alt=" "></p><p>2.用编译器打开该文件，拉到最后，找到deploy选项，作如下配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:  </span><br><span class="line">    type: &apos;git&apos;  </span><br><span class="line">    repo: git@github.com:xtlei/xtlei.github.io.git  </span><br><span class="line">    baranch:master</span><br></pre></td></tr></table></figure><p>其中，repo填写github创建的仓库的地址，点进你的仓库，如图<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/1_9.png" alt=" "></p><h5 id="3-部署"><a href="#3-部署" class="headerlink" title="3.部署"></a>3.部署</h5><p>部署之前，需要安装git部署插件<br>1.打开myblog文件夹，调出Powershell终端，键入cnpm i hexo-deployer-git -S安装插件<br>2.安装完毕后，键入命令hexo g生成静态文件<br>3.键入命令hexo d完成部署<br>4.再进入到github，进入io仓库，点击setting进入设置，往下拉至GitHub Pages看到如图<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/1_10.png" alt=" "></p><p>这时候只需要地址栏中输入rosesnow.github.io(输入自己的github名称.github.io) 即可访问刚刚部署成功的Blog啦。<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/1_11.png" alt=" "></p><p>原文链接：<a href="https://rosesnow.github.io" target="_blank" rel="noopener">https://rosesnow.github.io</a><br></p></font><p></p></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Others </category>
          
          <category> Github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
            <tag> git </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github+Hexo搭建博客(1)—Git安装与使用</title>
      <link href="/2019/11/19/Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%881%EF%BC%89%E2%80%94Git%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/11/19/Github+Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%881%EF%BC%89%E2%80%94Git%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="一、Git下载安装"><a href="#一、Git下载安装" class="headerlink" title="一、Git下载安装"></a>一、Git下载安装<a id="more"></a></h4><h5 id="1、下载Git"><a href="#1、下载Git" class="headerlink" title="1、下载Git"></a>1、下载Git</h5><p><a href="https://git-scm.com/download/win" target="_blank" rel="noopener"><strong>点我下载</strong></a><br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/1.png" alt=" "></p><h5 id="2、下载完之后，双击安装"><a href="#2、下载完之后，双击安装" class="headerlink" title="2、下载完之后，双击安装"></a>2、下载完之后，双击安装</h5><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/2.png" alt=" "></p><h5 id="3、选择安装目录"><a href="#3、选择安装目录" class="headerlink" title="3、选择安装目录"></a>3、选择安装目录</h5><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/3.png" alt=" "></p><h5 id="4、选择组件"><a href="#4、选择组件" class="headerlink" title="4、选择组件"></a>4、选择组件</h5><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/4.png" alt=" "></p><h5 id="5、开始菜单目录名设置"><a href="#5、开始菜单目录名设置" class="headerlink" title="5、开始菜单目录名设置"></a>5、开始菜单目录名设置</h5><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/5.png" alt=" "></p><h5 id="6、选择使用命令行环境"><a href="#6、选择使用命令行环境" class="headerlink" title="6、选择使用命令行环境"></a>6、选择使用命令行环境</h5><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/6.png" alt=" "></p><h5 id="7、以下三步默认，直接点击下一步"><a href="#7、以下三步默认，直接点击下一步" class="headerlink" title="7、以下三步默认，直接点击下一步"></a>7、以下三步默认，直接点击下一步</h5><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/7.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/8.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/9.png" alt=" "></p><h5 id="8、安装完成"><a href="#8、安装完成" class="headerlink" title="8、安装完成"></a>8、安装完成</h5><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/10.png" alt=" "></p><h5 id="9、检验是否安装成功"><a href="#9、检验是否安装成功" class="headerlink" title="9、检验是否安装成功"></a>9、检验是否安装成功</h5><p>回到电脑桌面，鼠标右击如果看到下图所示则安装成功<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/11.png" alt=" "></p><h4 id="二、Git基本工作流程"><a href="#二、Git基本工作流程" class="headerlink" title="二、Git基本工作流程"></a>二、Git基本工作流程</h4><h5 id="1、Git工作区域"><a href="#1、Git工作区域" class="headerlink" title="1、Git工作区域"></a>1、Git工作区域</h5><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/12.png" alt=" "></p><h5 id="2、向仓库中添加文件流程"><a href="#2、向仓库中添加文件流程" class="headerlink" title="2、向仓库中添加文件流程"></a>2、向仓库中添加文件流程</h5><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/13.png" alt=" "></p><h4 id="三、Git初始化及本地仓库创建和操作"><a href="#三、Git初始化及本地仓库创建和操作" class="headerlink" title="三、Git初始化及本地仓库创建和操作"></a>三、Git初始化及本地仓库创建和操作</h4><h5 id="1、Git安装之后需要进行一些基本信息设置"><a href="#1、Git安装之后需要进行一些基本信息设置" class="headerlink" title="1、Git安装之后需要进行一些基本信息设置"></a>1、Git安装之后需要进行一些基本信息设置</h5><p>a、设置用户名：git  config – global  user.name ‘你的github用户名’;<br>b、设置用户邮箱：git  config – global  user.email ‘你的github邮箱’;<br>注意：该配置会在github主页上显示谁提交了该文件。<br>c、配置完成后用如下命令来看是否配置成功<br>　　git config –list<br>注意：git  config –global参数，有了这个参数表示你这台机器上所有的git仓库都会使用这个配置，当然你也可以对某个仓库指定不同的用户名和邮箱。</p><h5 id="2、初始化一个新的git仓库"><a href="#2、初始化一个新的git仓库" class="headerlink" title="2、初始化一个新的git仓库"></a>2、初始化一个新的git仓库</h5><p>a、创建文件夹<br>方法一：可以鼠标右击-&gt;点击新建文件夹Test<br>方法二：使用git新建：$ mkdir Test<br>b、在文件内初始化git（创建git仓库）<br>方法一：直接输入$ cd Test，输入$ git init<br>方法二：点进Test文件-&gt;鼠标右击选择Git Bash Here-&gt;输入$ git init<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/14.png" alt=" "></p><h5 id="3、向仓库中添加文件"><a href="#3、向仓库中添加文件" class="headerlink" title="3、向仓库中添加文件　"></a>3、向仓库中添加文件　</h5><p>方法一：用打开编辑器新建test.html文件<br>方法二：使用git命令，$ touch ‘文件名’<br>然后把文件通过$ git add ‘文件名’添加到暂存区，最后$ git commit -m ‘提交描述’将暂存区文件提交到本地仓库。其中，$ git status命令用于查看仓库状态。</p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/15.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/16.png" alt=" "></p><h5 id="4、修改仓库文件"><a href="#4、修改仓库文件" class="headerlink" title="4、修改仓库文件"></a>4、修改仓库文件</h5><p>方法一：用编辑器打开test.html进行修改<br>方法二：使用git命令。$ vi  ‘文件名’<br>编辑文件内容，然后通过$ git add ‘文件名’添加到暂存区，最后$ git commit -m ‘提交描述’将暂存区文件提交到本地仓库。<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/17.png" alt=" "></p><h5 id="5、删除仓库文件"><a href="#5、删除仓库文件" class="headerlink" title="5、删除仓库文件"></a>5、删除仓库文件</h5><p>方法一：在编辑器中直接把要删除的文件删除掉<br>方法二：使用git删除：$ git rm ‘文件名’<br>然后通过$ git commit -m ‘提交描述’将暂存区文件提交到本地仓库。<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/18.png" alt=" "></p><h4 id="四、Git管理远程仓库"><a href="#四、Git管理远程仓库" class="headerlink" title="四、Git管理远程仓库"></a>四、Git管理远程仓库</h4><p>使用远程仓库的目的：备份、实现代码共享集中化管理。Git远程仓库实际上就是保持在服务器上的git仓库文件</p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/19.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/20.png" alt=" "></p><p><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/21.png" alt=" "></p><h4 id="五、Git克隆操作"><a href="#五、Git克隆操作" class="headerlink" title="五、Git克隆操作"></a>五、Git克隆操作</h4><p>目的：将远程仓库（github上对应的项目）复制到本地<br>1、代码：git clone 仓库地址<br>仓库地址由来如下：<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/22.png" alt=" "></p><p>2、克隆项目<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/23.png" alt=" "></p><p>3、将要添加的项目移动到克隆得到的文件下，然后将当前操作文件换到该文件。使用命令$ git add ‘文件名’将要添加的项目文件添加到暂存区，然后通过$ git commit -m ‘提交描述’将暂存区文件提交到本地仓库，最后使用命令git push从本地仓库同步到git远程仓库中。<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/24.png" alt=" "></p><p>原文链接：<a href="https://www.cnblogs.com/ximiaomiao/p/7140456.html" target="_blank" rel="noopener">https://www.cnblogs.com/ximiaomiao/p/7140456.html</a><br></p></font><p></p></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
          <category> Others </category>
          
          <category> Github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
            <tag> git </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown简介</title>
      <link href="/2019/11/13/Markdown%E7%AE%80%E4%BB%8B/"/>
      <url>/2019/11/13/Markdown%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="1-什么是Markdown？"><a href="#1-什么是Markdown？" class="headerlink" title="1.什么是Markdown？"></a>1.什么是Markdown？</h4><p>&emsp;&emsp;Markdown是一种轻量级标记语言。  </p><a id="more"></a><p>&emsp;&emsp;百度百科对标记语言的定义为：标记语言，是一种将文本以及文本相关的其他信息结合起来，展现出关于文档结构和数据处理细节的电脑文字编码。                 </p><h4 id="2-用Markdown码字的好处"><a href="#2-用Markdown码字的好处" class="headerlink" title="2.用Markdown码字的好处"></a>2.用Markdown码字的好处</h4><p><strong>Word的优缺点：</strong></p><p>&emsp;&emsp;<strong>学习成本低</strong>——因为所见即所得——正因为其所见即所得的特性，所以只要是个识字的，会用拼音或五笔的，都会用Word，只要不是宏之类的。</p><p>&emsp;&emsp;<strong>臃肿</strong>——打开这个软件本身就需要耗费一些时间，更不用提文档较大时。</p><p>&emsp;&emsp;<strong>兼容性问题</strong>——不同版本的之间的兼容性都有点问题，更不用提其他文本编辑器了，因为与微软的战略合作关系，WPS对Word文档兼容性最好，但也会出现用WPS能打开，用Word打不开的情况。</p><p>&emsp;&emsp;<strong>容易崩溃</strong>——难道是是盗版的问题么？而且奔溃后，数据不一定能找回。</p><p>&emsp;&emsp;<strong>没有版本控制</strong>——了解Git之后，觉得这个东西实在是太神奇了，不愧时光机的称号，只要你的使用习惯好，你可以知道你之前写了什么，你可以回退到任何一个保存过的版本，能不能将其应用到码字上呢？反正Word很难做到版本控制。</p><p>&emsp;&emsp;<strong>你是关注文字还是排版</strong>——上大学时，做课程设计和实习报告，被打回来多因为一个问题：格式问题。因为大家内容都差不多，主要工作就是各种整格式，那时算是学会怎么去掉页眉的横线、怎么添加分页符、怎么插目录……但这些是重点么？难道不应该更多地关注内容？</p><p><strong>Markdown的好处</strong>：</p><p>&emsp;&emsp;<strong>学习成本低</strong>——身为一个轻量级的标记语言，Markdown拥有较少的标记符号，经常用到的就更少了，而且非常简单。</p><p>&emsp;&emsp;<strong>任何文本编辑器都可以打开</strong>——Markdown文档实际上就是纯文本（plain text）格式，只要是个文本编辑器都可以打开，只不过支持Markdown语法的编辑器会将其渲染成相应格式，由于其语法足够简单，即使用不支持Markdown的编辑器打开，你也能看懂。</p><p>&emsp;&emsp;<strong>格式转换方便</strong>——不少Markdown编辑器支持将文档转为pdf、docx、html等，你也可以使用具有瑞士军刀之称的Pandoc轻松将Markdown文档转为其他格式。</p><p>&emsp;&emsp;<strong>你可以更多地关注内容</strong>——用富文本编辑器编辑文档的话，你的精力往往过多分散到排版上，有的人甚至逐句调整格式，学会Markdown的话，你的注意力又会重新转移到内容上来。</p><p>&emsp;&emsp;<strong>像记事本一样的速度</strong>——在Windows上办公时，我常常想，如果用记事本码字就好了，因为其打开速度实在是太快了。但记事本里的文字是没有格式的，体验很差，Markdown格式文档完美继承其速度，又添加了优美的格式。</p><p>&emsp;&emsp;<strong>利用Github做版本控制</strong>——Github不仅仅可以用来托管代码，还可以用来托管文章，而且Github文档默认是Markdown格式的。另外，你还可以利用GitHub与Gitbook写电子书。</p><div style="text-align:right">原文链接：https://www.jianshu.com/p/27d009f3c986</div><br>&emsp;&emsp;富文本编辑器，Rich Text Editor， 简称RTE，是一种可内嵌于浏览器，所见即所得的文本编辑器。富文本编辑器不同于文本编辑器，程序员可到网上下载免费的富文本编辑器内嵌于自己的网站或程序里（当然付费的功能会更强大些），方便用户编辑文章或信息。<br></font></html>]]></content>
      
      
      <categories>
          
          <category> 计算机使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>知识图谱简介</title>
      <link href="/2019/11/13/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E7%AE%80%E4%BB%8B/"/>
      <url>/2019/11/13/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>当今互联网、物联网、云计算等技术不断发展的环境下，各类应用层出不穷，因此产生了海量的数据资源，其中包含大量有价值的知识。<a id="more"></a>这吸引了许多研究人员对其进行深入挖掘和分析。如何组织表达这些知识，以便作进一步的计算和分析备受关注。知识图谱作为丰富直观的知识表达方式应运而生。<br>目前,已经涌现出一大批知识图谱，其中具有代表性的有KnowItAll、YAGO、DBpedia、Freebase、NELL、Probase等。这些知识图谱从大量数据资源中抽取、组织和管理知识，希望为用户提供能够读懂用户需求的智能服务，例如理解搜索的语义，提供更精准的搜索答案。</p><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>知识图谱2012年由谷歌提出，最早应用在其搜索引擎中。Google知识图谱的宣传语“<strong>things not strings</strong>”给出了知识图谱的精髓，即，不要无意义的字符串，而是获取字符串背后隐含的对象或事物。<br>知识图谱（Knowledge Graph），在图书情报界称为知识域可视化或知识领域映射地图，是显示知识发展进程与结构关系的一系列各种不同的图形，用可视化技术描述知识资源及其载体，挖掘、分析、构建、绘制和显示知识及它们之间的相互联系。<br>知识图谱是通过将应用数学、图形学、信息可视化技术、信息科学等学科的理论与方法与计量学引文分析、共现分析等方法结合，并利用可视化的图谱形象地展示学科的核心结构、发展历史、前沿领域以及整体知识架构达到多学科融合目的的现代理论。它能为学科研究提供切实的、有价值的参考。</p><ul><li>知识图谱是一个关系图，类似数据库中的E-R图。</li><li>知识图谱是一种技术，类似人工智能中的语义网络，复杂网络，是通过某种算法和规则，表示知识的技术。</li><li>知识图谱是一个过程，是从大数据中获取、存储并推理得到并以一种更直观的方式表示知识的过程。</li></ul><h4 id="基本组成"><a href="#基本组成" class="headerlink" title="基本组成"></a>基本组成</h4><p>构成知识图谱的核心是三元组：<strong>实体（Entity）</strong>、<strong>属性（Attribute）</strong>和<strong>关系（Relation）</strong>，可以表示为 &lt;实体1，关系，实体2&gt; 或  &lt;实体1，属性1，属性值1&gt;，例如：&lt;Google，is-a，人工智能公司&gt;；&lt;人工智能公司，subclass，高料技公司&gt;<br>基于已有的知识图谱三元组，可以推导出新的关系。例如：&lt;翅膀 part-of 鸟&gt;，&lt;麻雀kind-of 鸟&gt;，可以推导出&lt;翅膀 part-of 麻雀&gt;。<br>将实体(包括概念、属性值)表示成图上的节点,节点之间的连边对应实体之间的关联关系,以一个网络化的结构表征所获得的知识,清晰、直观.</p><h4 id="构建过程"><a href="#构建过程" class="headerlink" title="构建过程"></a>构建过程</h4><h5 id="1-知识抽取"><a href="#1-知识抽取" class="headerlink" title="1.知识抽取"></a>1.知识抽取</h5><p>知识抽取会从大数据中抽取大量的实体和关系。大数据表示数据的来源非常广泛并且数量庞大。数据源可以是平时大家阅读的书籍，文献资料，可以是类似于excel表格的结构化的数据，可以是网页的数据（比如一篇文章），可以是图片，语音。<br>从这些数据源中提取文本信息再基于自然语言处理技术，抽出其中的实体，关系和勾画它们的属性信息。</p><h5 id="2-知识融合"><a href="#2-知识融合" class="headerlink" title="2.知识融合"></a>2.知识融合</h5><p>目前分布在互联网上的知识常常以分散、异构、自治的形式存在，另外还具有冗余、噪音、不确定、非完备的特点，清洗并不能解决这些问题，因此从这些知识出发，通常需要融合和验证的步骤，来将不同源不同结构的数据融合成统一的知识图谱，以保证知识的一致性。所以数据层往上一层实际上是融合层，主要工作是对获取的数据进行标注、抽取，得到大量的三元组，并对这些三元组进行融合，去冗余、去冲突、规范化</p><h5 id="3-知识存储"><a href="#3-知识存储" class="headerlink" title="3.知识存储"></a>3.知识存储</h5><p>获得了高质量的知识。人们会将知识存储在大脑当中，而机器则会将知识存储在类似大脑的数据库之中。</p><h5 id="4-知识推理"><a href="#4-知识推理" class="headerlink" title="4.知识推理"></a>4.知识推理</h5><p>知识推理主要是根据图谱提供的信息得到更多隐含的知识，像是通过本体或者规则推理技术可以获取数据中存在的隐含知识；通过链接预测来预测实体间隐含的关系；通过社区计算在知识网络上计算获取知识图谱上存在的社区，提供知识间关联的路径……<br>通过知识推理知识图谱可以产生大量的智能应用如专家系统、推荐系统、语义搜索、问答等。</p><p>知识图谱主要有自顶向下(top-down)与自底向上(bottom-up)两种构建方式。 </p><ul><li>自顶向下指的是先为知识图谱定义好本体与数据模式，再将实体加入到知识库。该构建方式需要利用一些现有的结构化知识库作为其基础知识库，例如Freebase项目就是采用这种方式，它的绝大部分数据是从维基百科中得到的。</li><li>自底向上指的是从一些开放链接数据中提取出实体，选择其中置信度较高的加入到知识库，再构建顶层的本体模式。目前，大多数知识图谱都采用自底向上的方式进行构建，其中最典型就是Google的Knowledge Vault和微软的Satori知识库。</li></ul><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><ul><li><strong>通用知识图谱</strong>：实际上是谷歌或者百度这样的大型的互联网公司在构建的，最主要是用于搜索引擎，面向的是通用领域，用户是全部的互联网的用户，以构建常识性的知识为主，包括结构化的百科知识，强调的更多的是一种知识的广度，对知识的深度方面不做更多的要求，使用者也是普通的用户。</li><li><strong>行业知识图谱</strong>：面向一个特定的领域，数据来源是来特定行业的语料，基于行业的数据来构建，而且要有一定的行业的深度，强调更多的是深度，而不是广度，能够解决行业人员的问题，使用者也是这个行业内的从业人员，或是这个领域里面的专业人员。</li></ul><p>通用知识图谱和行业知识图谱，并不是说完全互相独立的，是具有互相互补性的关系。一方面，通用知识图谱会不断的吸纳行业或者领域知识图谱的知识，来扩充它的知识面，然后增加它的知识的广度。同时，在构建一个行业知识图谱或者领域知识图谱的时候，实际上也并不是说只局限在这个领域的基本的数据，我们同时还要去通用知识图谱里面去吸纳更多的常识性的知识来作为补充，只有这样才能构成一个非常完整的行业知识图谱。</p><h4 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h4><ol><li>推荐：<br>通过对不同平台信息整合形成个人知识图谱，购物软件进行知识推理，能对个人进行更加方便智能的商品推荐。</li><li>反欺诈案调：<br>在金融领域非常重要的一个环节就是反欺诈案调，传统的方法做案调是非常困难的，对于团伙欺诈的判别是非常困难的，使用知识图谱技术就可以很容易的发现目标客户周边人员情况以及其周边人员历史进件情况，业务人员通过观察目标客户的子图就可以方便直观的对目标客户的欺诈情况进行判断。</li><li>企业信息展示：<br>通过知识图谱可以很直观的对企业的法人信息，参股信息，企业经营状况，企业大事件等信息进行直观展示，以实现人们对一个公司状况的直观快速了解。</li><li>通用知识图谱搜索：<br>通过知识图谱实现人们对所要查询信息的全方位深入形象的展示。</li><li>智能客服：<br>知识图谱技术在智能客服上的应用可能会更进一步的提高智能客服的精准度， 通过图中的实体与边的关系就很容易的得出我们想要的答案，在数据足够丰富与精确的情况下，基于知识图谱的智能客服系统的精准度极有可能是要优于传统实现的技术的，在知识图谱技术在越来越被广泛使用的今天，相信不久的将来我们就能看到智能化程度、精准度更高的智能客服技术。</li></ol><p>对于知识图谱的应用方向涉及到生活中的方方面面—–医疗行业（知识库、病例库、诊疗方案库、KBQA）、电商（推荐引擎6）、互联网金融（反欺诈、实时授信、催收管理、失联修复）、社交网络、机器学习、深度学习等。在这里就不逐一举例。总之，知识图谱使得人工智能可被理解和解释，所以知识图谱有着非常广泛的应用前景等待着人们去探索发现。<br><br><br></p></font><p></p></html>]]></content>
      
      
      <categories>
          
          <category> 软件开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知识图谱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑盒测试理论与实践</title>
      <link href="/2019/11/13/%E9%BB%91%E7%9B%92%E6%B5%8B%E8%AF%95%E6%A6%82%E8%BF%B0/"/>
      <url>/2019/11/13/%E9%BB%91%E7%9B%92%E6%B5%8B%E8%AF%95%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><p>&emsp;&emsp;黑盒测试与白盒测试查看源代码的思想不同，即通常所说的将系统看做黑盒子，不去考虑具体的代码，而只是根据本段代码要实现的功能需求，进行测试数据的输入，比较结果的输出是否符合预期的输出。<a id="more"></a><br>&emsp;&emsp;黑盒测试一般要晚于白盒测试，但这并不意味着黑盒测试就不重要。因为经过实践证明，软件大部分的错误是在黑盒测试的过程中发现的。通过本章的学习，将明确黑盒测试的概念，黑盒测试与功能测试的关系，功能测试概念及方法、功能测试最佳实践的指导思想等内容。</p><h4 id="1-1-黑盒测试"><a href="#1-1-黑盒测试" class="headerlink" title="1.1 黑盒测试"></a>1.1 黑盒测试</h4><h5 id="1-1-1-黑盒测试概念"><a href="#1-1-1-黑盒测试概念" class="headerlink" title="1.1.1 黑盒测试概念"></a>1.1.1 黑盒测试概念</h5><p>&emsp;&emsp;黑盒测试是将软件看做不透明的黑盒子，完全不考虑软件内部结构和处理算法，只检查软件功能是否按照软件需求说明书正常使用、运行，检查当软件接收数据后是否得到相应的输出，即根据输入输出来判断该模块功能是否正确。<br>&emsp;&emsp;功能测试的目标是整个软件测试目标的具体化，即以最小的代价发现软件产品中最多的功能性错误。<br>&emsp;&emsp;这是黑盒测试被广泛认可的解释。黑盒测试的定义在具体划分时，有广义、狭义之分：第一，广义上的黑盒测试是所有不看源代码的测试方法的总称，其涉及范围很广如功能测试、性能测试等；第二，狭义上的黑盒测试特指功能测试，通过将软件看做黑盒子,主要测试某个软件或者软件的某个模块的功能是否得到实现。性能测试有自己独特的方法和工具，与功能测试的方法和工具不尽相同，因此没有列入狭义的黑盒测试的概念的范畴。 </p><h4 id="1-2-功能测试"><a href="#1-2-功能测试" class="headerlink" title="1.2 功能测试"></a>1.2 功能测试</h4><h5 id="1-2-1-功能测试方法简介"><a href="#1-2-1-功能测试方法简介" class="headerlink" title="1.2.1 功能测试方法简介"></a>1.2.1 功能测试方法简介</h5><p>&emsp;&emsp;功能测试能够发现较多的错误，同时针对功能测试提出的方法也比较多。其主要方法包括等价类划分法、边界值分析法、错误推测法、因果图法、判定表驱动法等等。<br>这里重点介绍较为常用的等价类划分法和边界值分析法。</p><h5 id="1-2-2-等价类划分法"><a href="#1-2-2-等价类划分法" class="headerlink" title="1.2.2 等价类划分法"></a>1.2.2 等价类划分法</h5><p>&emsp;&emsp;等价类划分法是把程序的输入域划分成若干由相似属性数据组成的子集，然后从每个子集中选取少数代表性数据作为测试用例。这些代表性数据在测试中的作用等价于其所对应子集中的其他数据。我们称这些代表性数据为等价类。<br>&emsp;&emsp;等价类有两种:有效等价类和无效等价类。有效等价类是指对于程序的规格说明来说是合理的、有意义的输入数据构成的集合。利用有效等价类可检验程序是否实现了规格说明中所规定的功能和性能；无效等价类是指对于程序的规格说明来说是不合理的、没有意义的输入数据构成的集合。<br>&emsp;&emsp;设计测试用例时，要同时考虑这两种等价类。因为，软件不仅要能接收合理的数据,也要能经受意外的考验。这样的功能测试才能确保软件具有更高的质量。</p><p><strong>指导划分等价类的六大原则</strong>如下。</p><ol><li>在输入条件规定了取值范围或值的个数的情况下,则可以确立一个有效等价类和两个无效等价类。<br>例：输入值是学生成绩g，范围是0～100，则可以确定一个有效等价类：0&lt;=g&lt;=100；两个无效等价类：g&lt;0和g&gt;100。</li><li>在输入条件规定了输入值的集合或者规定了“必须如何”的条件的情况下,可确立一个有效等价类和一个无效等价类。<br>例：输入值是学生成绩g，必须大于0，则可以确定一个有效等价类：0&lt;g；一个无效等价类：g&lt;0。</li><li>在输入条件是一个布尔量的情况下，可确定一个有效等价类和一个无效等价类。布尔量是一个二值枚举类型，一个布尔量具有两种状态：true和false。<br>例：输入值g代表学生是否为团员，g是布尔变量，值为1代表是，值为0代表不是，则可以确定一个有效等价类：g=1；一个无效等价类：g=0。</li><li>在规定了输入数据的一组值（假定n个）,并且程序要对每一个输入值分别处理的情况下，可确立n个有效等价类和一个无效等价类。<br>例：输入条件说明输入课程类别为：数学、英语、语文三种之一，则分别取这三种三个值为三个有效等价类，另外把三种类别之外的任何字符作为无效等价类。</li><li>在规定了输入数据必须遵守的规则的情况下,可确立一个有效等价类（符合规则）和若干个无效等价类（从不同角度违反规则）。<br>例：输入值是学生学号g，必须满足是6位数字，则可以确定一个有效等价类：g是6为数字；若干个无效等价类，比如，g是非6位数字或者g是6位字母等等。</li><li>在确知已划分的等价类中各元素在程序处理中的方式不同的情况下,则应再将该等价类进一步的划分为更小的等价类。<br>例：输入值是学生成绩g，范围是0～100，则可以确定一个有效等价类：0&lt;=g&lt;=100；两个无效等价类：g&lt;0和g&gt;100。这时要求成绩小于60的均输入不及格，将有效等价类划分为更小的等价类，其中0&lt;=g&lt;60为一个等价类，60&lt;g&lt;=100为一个等价类。</li></ol><h5 id="1-2-3-边界值分析法"><a href="#1-2-3-边界值分析法" class="headerlink" title="1.2.3 边界值分析法"></a>1.2.3 边界值分析法</h5><p>&emsp;&emsp;根据大量的测试统计数据，很多错误是发生在输入或输出范围的边界上，而不是发生在输入/输出范围的中间区域。因此针对各种边界情况设计测试用例，可以查出更多的错误。<br>&emsp;&emsp;边界值分析法就是对输入或输出的边界值进行测试的一种功能测试方法。通常边界值分析法是作为对等价类划分法的补充。这种情况下，其测试用例来自边界。<br>&emsp;&emsp;使用边界值分析方法设计测试用例，首先应确定边界情况。通常输入和输出等价类的边界，就是应着重测试的边界情况。应当选取正好等于，刚刚大于或刚刚小于边界的值作为测试数据，而不是选取等价类中的典型值或任意值作为测试数据。</p><p><strong>基于边界值分析方法选择等价类的原则</strong>如下。</p><ol><li>如果输入条件规定了值的范围,则应取刚达到这个范围的边界的值,以及刚刚超越这个范围边界的值作为测试输入数据。<br>例如，如果程序的规格说明中规定：“成绩为0-60的学生，我们要……”。作为测试用例，我们应取0及60，还应取-0.1,0.1,59.9及60.1等。</li><li>如果输入条件规定了值的个数,则用最大个数,最小个数,比最小个数少一,比最大个数多一的数作为测试数据。<br>例如，一个输入文件应包括1~255个记录，则测试用例可取1和255，还应取0及256等。</li><li>将规则1和2应用于输出条件，即设计测试用例使输出值达到边界值及其左右的值。<br>例如，某程序计算20以内两个自然数的和，则要设计测试用例使得相加结果为0,1,39和40，可取0与0,0与1,20与19,20与20作为四组测试用例。</li><li>如果程序的规格说明给出的输入域或输出域是有序集合，则应选取集合的第一个元素和最后一个元素作为测试用例。<br>例如，某程序的规格说明要求计算出“每年的学费扣除额为5300.0-5600.0”，其测试用例可取5300.0及5599.9、还可取5300.1及5600.1等。</li><li>如果程序中使用了一个内部数据结构，则应当选择这个内部数据结构的边界上的值作为测试用例。<br>例如，某程序使用了数组，则可以选取“0”和“数组长度减1”作为测试用例。</li><li>分析规格说明，找出其它可能的边界条件。<br>例如，某程序的规格说明要求某物品在常温下保存，这时查询相关行业常温的范围要求，比如药品的常温指10~30℃，然后根据以上规则，可分别选取温度为9,10,11，20,29,30,31为测试用例，查看相应的输出是否符合需求。</li></ol><h5 id="1-2-4-其它功能测试方法简介"><a href="#1-2-4-其它功能测试方法简介" class="headerlink" title="1.2.4 其它功能测试方法简介"></a>1.2.4 其它功能测试方法简介</h5><p>&emsp;&emsp;错误推测法是基于经验和直觉推测程序中所有可能存在的各种错误,从而有针对性的设计测试用例的方法。通过错误推测法可以提前预测容易出现错误的地方，有时能大大提高测试效率，但这是依靠长期的积累得到的技能，并不属于可以直接学习的范围。<br>&emsp;&emsp;因果图法、判定表驱动法是解决条件组合情况的首选，两者可以相互转换，即因果图可以转变为相对应的判定表，并且两者都有各自的规则。两种测试方法严格的过程都十分繁琐，但是其思想是十分简单易懂的，所以，像很多书的介绍一样，我们同样提倡使用因果图法的思想，但不建议使用其规则，而其思想可以通过等价类表的组合得以实现，从而达到既使用了其思想，又使用简单形象的表达方式的目的，有关因果图法和判定表驱动法的详细介绍，读者可自行去查阅，有关等价类表的组合，我们将在后面的章节详细介绍。<br>&emsp;&emsp;面对功能测试方法繁杂的局面，如何选择方法，让测试事半功倍是重中之重。</p><h4 id="1-3-功能测试指导思想"><a href="#1-3-功能测试指导思想" class="headerlink" title="1.3 功能测试指导思想"></a>1.3 功能测试指导思想</h4><p>&emsp;&emsp;为了达到功能测试的目标，以最小代价测出更多问题，仅使用某一类方法不能完全满足这一要求。这就需要总结出一套行之有效的功能测试最佳实践的方法理论，来指导测试人员如何使用相关的测试方法，进行功能测试，达到功能测试的目标。</p><h5 id="1-3-1-以往功能测试指导思想的弊端"><a href="#1-3-1-以往功能测试指导思想的弊端" class="headerlink" title="1.3.1 以往功能测试指导思想的弊端"></a>1.3.1 以往功能测试指导思想的弊端</h5><p>&emsp;&emsp;为什么会提出指导思想这个概念呢？因为虽然功能测试的测试方法很多，且每一种方法都可以提供一组具体的有用的测试用例，但是都不能单独提供一个完整的测试用例集。换句话说，每种方法都各有自己的优劣，只用一种测试方法必定无法满足覆盖所有功能的要求，于是提出指导思想这个概念，意在将几种测试方法以合理的顺序组合起来，从而达到覆盖所有功能的测试要求。<br>&emsp;&emsp;有的研究提出了测试策略的概念，顾名思义是指导测试的策略，这与测试指导思想有异曲同工之妙，该概念的应用并不普遍，这一点从其在不同的资料中出现的频率也可以看出，既然如此，我们采用指导思想这一概念代替。这章的主要内容便是讲述我们提出的测试指导思想，在这之前，首先分析原先指导思想的弊端。</p><p><strong>以往的指导思想</strong>如下。</p><ul><li>如果规格说明中包含输入条件组合的说明情况，应首先使用因果图分析方法。</li><li>在任何情况下都应使用边界值分析方法。应记住，这是对输入和输出边界进行的分析。边界值分析可以产生一系列补充的测试条件，但是，多数甚至全部条件都可以被整合到因果图分析中。</li><li>应为输入输出确定有效和无效等价类，在必要的情况下对上面确认的测试用例进行补充。</li><li>使用错误猜测技术增加更多的测试用例。</li><li>针对上述测试用例集检查程序的逻辑结构。应使用判定覆盖、条件覆盖、判定/条件覆盖或多重条件覆盖准则（最后一个最为完整）。如果覆盖准则未能被前四个步骤中确定的测试用例所满足，并且满足准则也并非不可能（由于程序的性质限制，某些条件的组合也许是不可能实现的），那么增加足够数量的测试用例，以使覆盖准则得到满足。</li></ul><p>&emsp;&emsp;毫无疑问，以上的指导思想是合理的，但同时也是不负责任的。因为把以上的指导思想概括一下就是：要用等价类划分、边界值分析、错误猜测技术、因果图法、逻辑覆盖的方法相互组合对系统进行测试。首先这很合理，但是这十分宽泛，仅仅提出要组合的方法以及什么情况下组合，并没有明确指出组合的方式（或者说组合的顺序）；另外，该指导思想使用了很多被时下抛弃的测试方法，这些方法大多十分复杂，对这些方法的分析在1.2节已经讲过。<br>&emsp;&emsp;在此背景下，我们总结出了各种测试方法的组合方式，即功能测试的指导思想。</p><h5 id="1-3-2-功能测试指导思想"><a href="#1-3-2-功能测试指导思想" class="headerlink" title="1.3.2 功能测试指导思想"></a>1.3.2 功能测试指导思想</h5><p>&emsp;&emsp;在讲功能测试指导思想之前，需要对其中提到的全新的功能测试方法——流程图法作详细的解释。<br><strong>流程图法</strong><br>&emsp;&emsp;流程图法的原型是流程分析法，是从白盒测试设计方法中的路径覆盖分析法借鉴过来的一种很重要的方法。在白盒测试中，路径就是指函数代码的某个分支组合，路径覆盖法需要构造足够的用例覆盖函数的所有代码路径。在黑盒测试中，若将软件系统的某个流程看成路径的话，则可以针对该路径使用路径分析的方法设计测试用例。</p><p>将流程分析法的步骤进行完善修改，得到<strong>流程图法的具体实施步骤</strong>：</p><ol><li>画出初始流程图。</li><li>根据流程图中的判断条件和系统逻辑，进行功能模块的划分。</li><li>确定测试路径。</li><li>选取测试数据，构造测试用例。</li></ol><p>需要说明的是，流程分析法中提到状态节点和条件分支的定义，这里没有再提，提炼其思想就是以流程图中判断条件为中心，根据系统的逻辑进行模块的划分，具体的实践等到后面的章节进行。</p><p><strong>采用流程图法设计测试用例的好处</strong>如下。</p><ul><li>降低测试用例设计的难度。即只要清楚程序流程、看懂程序流程图，就可以设计出质量较高的测试用例。</li><li>是在测试资源紧张的情况下，可以据此有选择的执行测试用例，而非全部依靠经验做取舍。</li></ul><p><strong>功能测试指导思想概述</strong>如下。</p><ol><li>全面了解系统的逻辑，画出系统流程图。</li><li>根据系统流程图划分系统的功能模块。</li><li>对每个模块进行等价类划分和边界值分析。</li><li>所有的等价类和边界值进行组合，得到测试路径。</li><li>代入数据，形成测试用例，实施测试。</li></ol><p>其中，等价类划分和边界值分析方法已经在1.1.3节中讲到。</p><h5 id="1-3-3-根据指导思想设计用例的步骤"><a href="#1-3-3-根据指导思想设计用例的步骤" class="headerlink" title="1.3.3 根据指导思想设计用例的步骤"></a>1.3.3 根据指导思想设计用例的步骤</h5><p>&emsp;&emsp;指导思想就是复杂的测试流程的概括，要进行具体的测试，还要添加必要的步骤，才能得到详细的测试用例的设计过程，而测试的过程就是设计并运行测试用例的过程。</p><p><strong>用例设计的步骤</strong>如下。</p><ol><li>全面了解系统的逻辑，画出初始系统流程图。</li><li>对系统流程图进行功能模块的划分，每个模块分别进行等价类分析，得出初始等价类表。</li><li>对每个模块进行边界值分析，补充初始等价类表，得到等价类表。</li><li>将等价类表中的每个等价类的序号标注在流程图中，得到系统流程图。</li><li>根据系统流程图得到测试路径。</li><li>将测试路径转化为测试数据的输入输出，套用测试用例的模板，形成测试用例。</li></ol><h4 id="1-4-功能测试最佳实践"><a href="#1-4-功能测试最佳实践" class="headerlink" title="1.4 功能测试最佳实践"></a>1.4 功能测试最佳实践</h4><h5 id="1-4-1-案例简介"><a href="#1-4-1-案例简介" class="headerlink" title="1.4.1 案例简介"></a>1.4.1 案例简介</h5><p>&emsp;&emsp;本系统的GPRS监控系统是功能测试的主要对象，某产品销往各地后通过内嵌的芯片以指令的形式上传大量产品的信息，用于检测产品是否正常运行。其中产品信息通过Socket服务器接收，并将其中的目标信息（过滤一些无用信息）同步入系统数据库和mongodb数据库，用于之后的网页端显示等。<br>&emsp;&emsp;涉及的主要逻辑有指令的接收判断和数据的同步。其中上传的指令可大体分为两种，数据指令和心跳指令。数据指令是用来保存并检测产品的指令，心跳指令是判断芯片和Socket端正常连接所必要的，接收到心跳指令不用关注收到的具体内容，而是立即返回这些内容以证明连接正常。Socket端接收到信息立即存入系统数据库，并尝试与mongodb数据库同步，所有的同步信息首先存入实时表中，同步过程发生错误会终止当前内容的同步，已经同步的内容存入历史表中，实时表中剩余的未同步的内容不断尝试向历史表中同步，直至所有的信息进入历史表中，即系统数据库与mongodb数据库同步完成。</p><h5 id="1-4-2-画流程图"><a href="#1-4-2-画流程图" class="headerlink" title="1.4.2 画流程图"></a>1.4.2 画流程图</h5><p>&emsp;&emsp;在已经全面了解系统逻辑的前提下，使用画图工具（工具可自行选择，这里推荐微软的visio）画出初始的系统功能流程图，这里根据前面对被测系统的介绍，画出的案例系统的流程图如下：<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/heihe1.jpeg" alt=" "> </p><p>图1-1  GPRS实时监控系统流程图</p><h5 id="1-4-3-划分模块，进行等价类划分，形成初始等价类表"><a href="#1-4-3-划分模块，进行等价类划分，形成初始等价类表" class="headerlink" title="1.4.3 划分模块，进行等价类划分，形成初始等价类表"></a>1.4.3 划分模块，进行等价类划分，形成初始等价类表</h5><p>&emsp;&emsp;首先根据功能点对模块进行划分，每个模块一个表，然后对划分的每个模块依照前面介绍的等价类方法进行等价类划分，便于后面对等价类的使用，对每个等价类进行编号<br>表1-1 a. socket服务器接收信息模块</p><table><thead><tr><th>输入条件</th><th>有效等价类</th><th>编号</th><th>无效等价类</th><th>编号</th></tr></thead><tbody><tr><td>接受信息</td><td>心跳指令</td><td>1</td><td>其他</td><td>3</td></tr><tr><td></td><td>数据指令</td><td>2</td><td></td><td></td></tr></tbody></table><p> 表1-2 b. mongodb和数据库同步模块</p><table><thead><tr><th>输入条件</th><th>有效等价类</th><th>编号</th><th>无效等价类</th><th>编号</th></tr></thead><tbody><tr><td>mongodb内容与数据库同步</td><td>同步成功，同步信息一并存到实时表和历史表</td><td>（1）</td><td>同步失败，同步信息存到实时表，成功信息存到历史表</td><td>（4）</td></tr><tr><td>mongodb内容与数据库同步失败，实时表中失败信息同步到历史表</td><td>同步成功，实时表中失败信息同步到历史表</td><td>（2）</td><td>同步失败，实时表中失败信息未完全同步到历史表</td><td>（5）</td></tr><tr><td>实时表中失败信息未完全同步到历史表中，实时表中失败信息同步到历史表中</td><td>同步成功，实时表中失败信息同步到历史表</td><td>（3）</td><td>同步失败，实时表中失败信息未完全同步到历史表</td><td>（6）</td></tr></tbody></table><h5 id="1-4-4-边界值分析，补充完善等价类表"><a href="#1-4-4-边界值分析，补充完善等价类表" class="headerlink" title="1.4.4 边界值分析，补充完善等价类表"></a>1.4.4 边界值分析，补充完善等价类表</h5><p>&emsp;&emsp;根据边界值法分析划分等价类的原则，本系统的等价类并非范围的，连续的，而是单个的，离散的，所以每个等价类同时可以作为自身的边界值。例如，上表1-1中，接收的指令只有两种，这是根据等价类划分得到的，同时也是边界值分析得到的。 </p><h5 id="1-4-5-由等价类表得到改良流程图"><a href="#1-4-5-由等价类表得到改良流程图" class="headerlink" title="1.4.5 由等价类表得到改良流程图"></a>1.4.5 由等价类表得到改良流程图</h5><p>&emsp;&emsp;根据完善后的等价类表和第一步得到的流程图<br><img src="https://xtlei.oss-cn-hongkong.aliyuncs.com/xtlei/heihe2.jpeg" alt=" "></p><p> 图1-2  改良后的GPRS实时监控系统流程图</p><p>&emsp;&emsp;借鉴白盒测试的逻辑覆盖方法（逻辑覆盖相关的方法：条件组合覆盖就是设计足够的测试用例，运行被测程序，使得每个判断的所有可能的条件取值组合至少执行一次。 路径覆盖就是设计足够多的测试用例，覆盖程序中所有可能的路径。）得到测试路径如下。<br>编号01: 1<br>编号02: 2<br>编号03: 3<br>编号04: 2-&gt;（1）<br>编号05: 2-&gt;（2）<br>编号06: 2-&gt;（2）-&gt;（3）<br>编号07: 2-&gt;（2）-&gt;（4）<br>编号08: 2-&gt;（2）-&gt;（4）-&gt;（3）（测的还是（3）路径）<br>注：其中每一次进行的测试也可以进行排列组合，根据最基本的覆盖，即实现所有功能，测试所有功能模块及其组合一次，上表已经可以完成，每一次的测试组合针对某些特殊的代码（实际每一次测试的组合没必要），试想每一次信息接收完毕或者同步结束代码回到相同的初始状态，所以每一次的组合实际没必要，但是代码的逻辑无法确定时或许还要测。</p><h5 id="1-4-6-代入数据，形成用例"><a href="#1-4-6-代入数据，形成用例" class="headerlink" title="1.4.6 代入数据，形成用例"></a>1.4.6 代入数据，形成用例</h5><p>表1-3  测试用例模板</p><table><thead><tr><th>项目名称</th><th>某某系统</th><th></th></tr></thead><tbody><tr><td>程序版本</td><td>v-2.0.0</td><td></td></tr><tr><td>编制人-编制时间</td><td>xxx/2017-8-1</td><td></td></tr><tr><td>用例编号</td><td>JSXX_001（编号方式：功能模块+编号）</td><td></td></tr><tr><td>功能模块</td><td>socket服务器接受信息模块</td><td></td></tr><tr><td>功能描述</td><td>测试socket服务端接受心跳信息</td><td></td></tr><tr><td>用例目的</td><td>测试socket服务端是否能够接收心跳信息并返回接受到的信息</td><td></td></tr><tr><td>测试类型</td><td>功能测试</td><td></td></tr><tr><td>前提条件</td><td>网络连接，产品GPRS模块工作并上传心跳信息</td><td></td></tr><tr><td>测试方法与步骤</td><td>输入</td><td>上传心跳信息</td></tr><tr><td>期望输出</td><td>返回输入的心跳信息</td><td></td></tr><tr><td>测试结果</td><td></td><td></td></tr><tr><td>功能完成</td><td>是□ 否□</td><td></td></tr><tr><td>备注</td><td>该用例模板作为样板，信息最为齐全，可在所有用例中只使用一个，其他用例避免繁琐只保留关键部分（如表1-4等），在测试结果中填写实际结果，根据实际结果跟预期比对，确定功能是否完成。</td><td></td></tr></tbody></table><p>表1-4  测试socket服务端接受数据信息</p><table><thead><tr><th>用例编号</th><th>JSXX_002</th><th></th></tr></thead><tbody><tr><td>功能描述</td><td>测试socket服务端接受数据信息</td><td></td></tr><tr><td>用例目的</td><td>测试socket服务端是否能够接收数据信息并进行转码正常存储在mongodb</td><td></td></tr><tr><td>测试类型</td><td>功能测试</td><td></td></tr><tr><td>前提条件</td><td>网络连接，产品GPRS模块工作并上传数据信息</td><td></td></tr><tr><td>测试方法与步骤</td><td>输入</td><td>上传数据信息</td></tr><tr><td>期望输出</td><td>存储到mongodb中</td><td></td></tr><tr><td>测试结果</td><td>mongodb中正常存储数据信息</td><td></td></tr><tr><td>功能完成</td><td>是</td><td></td></tr></tbody></table><p>表1-5  测试socket服务端忽略其他信息</p><table><thead><tr><th>用例编号</th><th>JSXX_003</th><th></th></tr></thead><tbody><tr><td>功能描述</td><td>测试socket服务端忽略其他信息</td><td></td></tr><tr><td>用例目的</td><td>测试socket服务端是否能够过滤其他垃圾信息</td><td></td></tr><tr><td>测试类型</td><td>功能测试</td><td></td></tr><tr><td>前提条件</td><td>网络连接，产品GPRS模块工作并上传其他信息</td><td></td></tr><tr><td>测试方法与步骤</td><td>输入</td><td>上传其他信息（非心跳、非数据）</td></tr><tr><td>期望输出</td><td>过滤忽略信息</td><td></td></tr><tr><td>测试结果</td><td>无异常输出（证明过滤其他信息）</td><td></td></tr><tr><td>功能完成</td><td>是</td><td></td></tr></tbody></table><p>表1-6  测试mongodb能否一次同步到多码系统数据库</p><table><thead><tr><th>序号</th><th>SJTB_004</th><th></th></tr></thead><tbody><tr><td>功能描述</td><td>测试mongodb能否一次同步到多码系统数据库</td><td></td></tr><tr><td>用例目的</td><td>测试mongodb能否直接同步成功到多码系统数据库</td><td></td></tr><tr><td>测试类型</td><td>功能测试</td><td></td></tr><tr><td>前提条件</td><td>网络连接，产品上传的数据信息同步到mongodb中</td><td></td></tr><tr><td>测试方法与步骤</td><td>输入</td><td>产品上传的数据信息同步到mongodb中</td></tr><tr><td>期望输出</td><td>同步到多码系统数据库中</td><td></td></tr><tr><td>测试结果</td><td>mongodb中的成品信息同步到多码系统数据库</td><td></td></tr><tr><td>功能完成</td><td>是</td><td></td></tr></tbody></table><p>表1-7 测试mongodb一次同步到多码系统数据库失败</p><table><thead><tr><th>序号</th><th>SJTB_005</th><th></th></tr></thead><tbody><tr><td>功能描述</td><td>测试mongodb一次同步到多码系统数据库失败</td><td></td></tr><tr><td>用例目的</td><td>测试一次同步到多码系统数据库失败后，是否所有信息存到实时表，成功信息存到历史表，并且实时表中的失败信息不断尝试向历史表中同步</td><td></td></tr><tr><td>测试类型</td><td>功能测试</td><td></td></tr><tr><td>前提条件</td><td>网络连接，产品上传数据信息同步到mongodb一次失败</td><td></td></tr><tr><td>测试方法与步骤</td><td>输入</td><td>产品上传数据信息同步到mongodb一次失败</td></tr><tr><td>期望输出</td><td>所有信息存到实时表，成功信息存到历史表，并且实时表中的失败信息不断尝试向历史表中同步</td><td></td></tr><tr><td>测试结果</td><td>实时表中存储所有上传信息，历史表中存储成功信息，失败信息不断刷新，尝试向历史表中存储</td><td></td></tr><tr><td>功能完成</td><td>是</td><td></td></tr></tbody></table><p>表1-8  测试实时表中失败信息同步到多码系统数据库成功</p><table><thead><tr><th>序号</th><th>SJTB_006</th><th></th></tr></thead><tbody><tr><td>功能描述</td><td>测试实时表中失败信息同步到多码系统数据库成功</td><td></td></tr><tr><td>用例目的</td><td>测试一次同步到多码系统数据库失败后，实时表中的失败信息向历史表中一次同步成功</td><td></td></tr><tr><td>测试类型</td><td>功能测试</td><td></td></tr><tr><td>前提条件</td><td>网络连接，产品上传数据信息同步到mongodb一次失败 ，所有信息存到实时表，成功信息存到历史表，并且实时表中的失败信息不断尝试向历史表中同步</td><td></td></tr><tr><td>测试方法与步骤</td><td>输入</td><td>第一次mongodb与多码系统数据库同步失败后，实时表中的失败信息</td></tr><tr><td>期望输出</td><td>成功信息存到历史表中，mongodb所有信息同步多码系统数据库</td><td></td></tr><tr><td>测试结果</td><td>实时表中的失败信息成功刷新到历史表中</td><td></td></tr><tr><td>功能完成</td><td>是</td><td></td></tr></tbody></table><p>表1-9  测试实时表中失败信息一次同步失败二次同步失败</p><table><thead><tr><th>序号</th><th>SJTB_007</th><th></th></tr></thead><tbody><tr><td>功能描述</td><td>测试实时表中失败信息一次同步失败二次同步失败</td><td></td></tr><tr><td>用例目的</td><td>测试mongodb与多码系统数据库一次同步失败，实时表与历史表二次同步失败，再次同步失败时系统能否正常保存失败内容到历史表</td><td></td></tr><tr><td>测试类型</td><td>功能测试</td><td></td></tr><tr><td>前提条件</td><td>产品GPRS模块工作并上传数据信息接收成功，第一次mongodb与多码系统数据库同步失败，第二次实时表与历史表同步失败</td><td></td></tr><tr><td>测试方法与步骤</td><td>输入</td><td>第二次实时表同步失败后，实时表失败信息</td></tr><tr><td>期望输出</td><td>成功信息存到历史表，所有信息存到实时表</td><td></td></tr><tr><td>测试结果</td><td>经过一次失败后，再次同步失败，实时表存储所有上传信息，历史表存储成功信息</td><td></td></tr><tr><td>功能完成</td><td>是</td><td></td></tr></tbody></table></font></html>]]></content>
      
      
      <categories>
          
          <category> 软件测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件测试 </tag>
            
            <tag> 黑盒测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>近体诗格律</title>
      <link href="/2019/11/13/%E8%BF%91%E4%BD%93%E8%AF%97%E6%A0%BC%E5%BE%8B/"/>
      <url>/2019/11/13/%E8%BF%91%E4%BD%93%E8%AF%97%E6%A0%BC%E5%BE%8B/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="（一）定韵"><a href="#（一）定韵" class="headerlink" title="（一）定韵"></a>（一）定韵</h4><p>新韵分类标准如下：<br>一麻、一马：以a为韵根，包括ia、ua；<a id="more"></a><br>二歌、二落：o、e合韵，包括uo；<br>三街、三借：üe、ie合韵；<br>四支、四起：i、-i、er合韵；<br>五微、五尾：以ei为韵根，包括ui=uei；<br>六书、六入：u为独韵；<br>七鱼、七玉：ü 为独韵；<br>八开、八麦：以ai为韵根，包括uai；<br>九豪、九巧：以ao为韵根，包括iao；<br>十优、十有：以ou为韵根，包括iu=iou；<br>十一真、十一问：以en为韵根，包括in=ien、un=uen、ün=üen；<br>十二寒、十二汉：以an为韵根，包括ian、uan、üan；<br>十三阳、十三样：以ang为韵根，包括iang、uang；<br>十四庚、十四证：以eng为韵根，包括ing=ieng；<br>十五东、十五动：以ong为韵根，包括iong。</p><h4 id="（二）辨声"><a href="#（二）辨声" class="headerlink" title="（二）辨声"></a>（二）辨声</h4><p>古四声：平、上、去、入，前一为平，后三为仄。<br>今四声：阴平、阳平、上、去，前二为平，后二为仄。</p><h4 id="（三）对仗"><a href="#（三）对仗" class="headerlink" title="（三）对仗"></a>（三）对仗</h4><p>对仗基于对偶，即上下两联字数相等、结构相同、同位置字词性类相近。<br>当今现代汉语词性不减十三类：名词、动词、代词、形容词、副词、介词、连词、数词、量词、助词、叹词、虚词、拟声词。对偶时近类可聚合：名词代词混类，动词介词混类，形容词副词混类，助词虚词混类，余者频率出现低者独类。<br>除字之相对，还要不可犯古之“平侧”之病。<br>由对偶上升到对仗，需究平仄。<br>上联以仄声收，下联以平声结。<br>墙上芦花，头重脚轻根底浅；<br>山间竹笋，嘴尖皮厚腹中空。 </p><h4 id="（四）格律"><a href="#（四）格律" class="headerlink" title="（四）格律"></a>（四）格律</h4><p>七律原始格式一：<br>平平仄仄平平仄，仄仄平平仄仄平。<br>仄仄平平平仄仄，平平仄仄仄平平。<br>平平仄仄平平仄，仄仄平平仄仄平。<br>仄仄平平平仄仄，平平仄仄仄平平。<br>七律原始格式二：                              注意：对、粘<br>仄仄平平平仄仄，平平仄仄仄平平。<br>平平仄仄平平仄，仄仄平平仄仄平。<br>仄仄平平平仄仄，平平仄仄仄平平。<br>平平仄仄平平仄，仄仄平平仄仄平。  </p><p>七律格式一：<br>中平中仄仄平平。中仄中平中仄平。<br>中仄中平平仄仄，中平中仄仄平平。<br>中平中仄中平仄，中仄中平中仄平。<br>中仄中平平仄仄，中平中仄仄平平。<br>七律格式一·为中国地质大学(北京)全体毕业学棣壮行<br>相拥歧路亦流连，仰望长空日月悬。<br>何惧噫吁行蜀道，甘当寂寞赴阳关。<br>双肩道义家国重，满腹文章庠序传。<br>皆是神州浑一统，人生无处不非凡。 </p><p>七律格式二：<br>中仄中平中仄平。中平中仄仄平平。<br>中平中仄中平仄，中仄中平中仄平。<br>中仄中平平仄仄，中平中仄仄平平。<br>中平中仄中平仄，中仄中平中仄平。<br>七律格式二·怀念南京大学吾师许永璋先生<br>研杜精深已胜仇，文革蹇滞火中休。<br>蒲轮归馆重传道，桂杖随身伴上楼。<br>桃李比肩千顷渐，榆槐独我一株留。<br>半杯浊酒半杯泪，盼顾音容梦里头。</p><p>五律格式一：<br>中仄平平仄，中平仄仄平。中平平仄仄，中仄仄平平。<br>中仄平平仄，中平仄仄平。中平平仄仄，中仄仄平平。<br>五律格式一·自机场乘车向拉萨城数十公里途中记<br>人自飞机下，登车市内奔。河宽逼路窄，山矮坠云沉。<br>崖陡牦牛影，坡平酒店新。思离京万里，一样日光真。</p><p>五律格式二：<br>中平平仄仄，中仄仄平平。中仄平平仄，中平仄仄平。<br>中平平仄仄，中仄仄平平。中仄平平仄，中平仄仄平。<br>五律格式二·题明周臣春泉小隐图<br>扶额斜案上，待梦自然来。松气千秋敛，草堂四壁开。<br>平湖桥外阔，翠岭眼中歪。童子拖竹帚，闲庭不起埃。</p><p>绝句可由律诗格式中截得，故又称截句。一格：1278句，二格：1234句，三格：3456句，四格：5678句。<br>七绝常用格式一：<br>中平中仄仄平平。中仄中平中仄平。<br>中仄中平平仄仄，中平中仄仄平平。<br>七绝常用格式二：<br>中仄中平中仄平。中平中仄仄平平。<br>中平中仄中平仄，中仄中平中仄平。<br>五绝常用格式一：<br>中仄平平仄，中平仄仄平。中平平仄仄，中仄仄平平。<br>五绝常用格式二：<br>中平平仄仄，中仄仄平平。中仄平平仄，中平仄仄平。</p><p>五绝·菜<br>菜价升一角，农家挣两分。市民真若恨，只许恨商人。<br>七绝（1278）·荷<br>根吮污泥面色娇，善于日下演清高。<br>如何不似贪官样，道貌岸然正气标。<br>七绝（1234）·竹<br>本在山中非栋梁，号称君子卖清狂。<br>豪门院侧饰风雅，仕女唇前吹感伤。<br>七绝（5678）·泰山<br>难见云虹难见鸟，但寻秦汉但寻唐。<br>众山虽小依然翠，绝顶唯余岩壁苍。<br>七绝（3456）·贺《六味集》书成出版有作<br>笔走龙蛇吸砚海，酒催词曲弄琴台。<br>调合六味陈言去，容纳八荒壮句来。 </p><h4 id="（五）创作"><a href="#（五）创作" class="headerlink" title="（五）创作"></a>（五）创作</h4><p>学诗当遵循如下三步：1.仿，2.议，3.创。<br>最主要：<strong>诗外功夫！</strong></p><p>收许氏再传褚门亲授弟子帖<br>尧舜时歌谣生，春秋际诗经定；日月循环，体例嬗增。累仰先贤辈出，后学云从；担当社稷，关爱苍生；张漫才气，弥缛华英。成就泱泱诗国，烁烁文明；贯穿唐宋，承绪明清。憾恨近代以降，世运衰微，诗坛凋零；先师许公永璋，脉源桐城，法宗少陵；挥洒椽笔，补缀星空。吾曾幸甚，求学故都，受业玄亭；鸿蒙得开，羽翼趋丰。急欲彰明师学，匡扶文旌；难恃一驾长驱，需率万骏齐鸣。故本人褚宝增于今日，抗颜为师，放胆执盟。教六义于诗，正五德于行。受茶为礼，立字为凭。 </p><h4 id="以上内容均来自褚宝增老师讲义"><a href="#以上内容均来自褚宝增老师讲义" class="headerlink" title="以上内容均来自褚宝增老师讲义"></a>以上内容均来自褚宝增老师讲义</h4></font></html>]]></content>
      
      
      <categories>
          
          <category> 古典文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗词 </tag>
            
            <tag> 格律 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国古典文学史之清诗清词</title>
      <link href="/2019/11/13/%E4%B8%AD%E5%9B%BD%E5%8F%A4%E5%85%B8%E6%96%87%E5%AD%A6%E5%8F%B2%E7%95%A5%E4%B9%8B%E6%B8%85%E8%AF%97%E6%B8%85%E8%AF%8D/"/>
      <url>/2019/11/13/%E4%B8%AD%E5%9B%BD%E5%8F%A4%E5%85%B8%E6%96%87%E5%AD%A6%E5%8F%B2%E7%95%A5%E4%B9%8B%E6%B8%85%E8%AF%97%E6%B8%85%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="一、清诗概述"><a href="#一、清诗概述" class="headerlink" title="一、清诗概述"></a>一、清诗概述</h4><p>唐宋诗歌各有特色，元明两代文学转向戏曲、小说，诗歌严重衰落。清代诗人，借鉴前代，扬长补短，推动了古典诗歌的发展。<a id="more"></a>总的看来，清代诗人不满于元诗的绮弱，明诗的复古、轻浅、狭窄的毛病，在技巧上兼学唐宋诗的长处，不断追求创新，反映社会现实，流派迭出，风格多样，其成就是远远超过元明两代，足以成为中国古典诗歌的后劲。</p><p>清朝初期：清初诗坛的主流是“遗民诗”。以明臣而仕清的二臣诗人，最著名的是钱谦益、吴伟业、龚鼎孳（zī），称“江左三大家”。<br>康雍时期：一流诗人应推王士禛，作诗提倡“神韵”，是“神韵派”的领袖。和王士禛齐名的朱彝尊，是著名学者，作诗才力宏富，但独创新貌不如王士禛。这时期堪与王士禛并称为第一流诗人的，应推查慎行，用笔劲炼，运思刻入，不流于滑易，讲究音节色泽，又兼得唐诗的好处。<br>乾隆时期：乾隆朝的重臣沈德潜作诗注重“格调”，被称为“格调派” 。能开新格局的是袁枚和赵翼。袁、赵和蒋士铨合称“乾隆三大家”。黄景仁是一个早熟而短命的诗人，诗才极高，兼有“清窃之思”和“雄宕之气”，读起来使人回肠荡气，堪称清诗第一大家。<br>乾隆以后：从总的趋势看，已逐渐走向下坡路。  </p><h4 id="二、诗人钱谦益"><a href="#二、诗人钱谦益" class="headerlink" title="二、诗人钱谦益"></a>二、诗人钱谦益</h4><p>钱谦益（1582—1664），字受之，号牧斋，晚号蒙叟，后又号绛云老人、敬他老人、东涧遗老，江苏常熟人。</p><p>万历三十八年进士，授编修，东林党领袖。崇祯元年任礼部侍郎，翰林侍读学士，后被革职。南明弘光朝，为礼部尚书，清兵南下，率先迎降，为明清之际诗坛宗主。</p><p>乾隆 《钦定国史贰臣表传》 诏曰：朕思此等大节有亏之人，不能念其建有勋绩，谅于生前；亦不能因其尚有后人，原于既死。今为准情酌理，自应于国史内另立《贰臣传》一门，将诸臣仕明及仕本朝名事迹，据实直书，使不能纤微隐饰，即所谓虽孝子慈孙百世不能改者。此实乃朕大中至正之心，为万世臣子植纲常！</p><p>钱谦益学问渊博，泛览子、史、文籍与佛藏。论文论诗，反对明代复古派的模拟、竟陵派的狭窄、公安派的肤浅。他一面倡“情真”、“情至”以反对模拟，一面倡学问以反对空疏。他的文章，常把铺陈学问与抒发思想性情糅合起来，纵横曲折，奔放恣肆，合“学人之文”与“文人之文”为一体，规模宏大，振作了明末清初的文风。<br>钱谦益的诗初学盛唐，后广泛学习唐宋各名家，转益多师，不拘一格，才学兼资，藻思洋溢。明亡以后的诗篇，寄寓沧桑身世之感，哀感顽艳与激楚苍凉合而为一，被称为“虞山诗派”的领袖。著有《初学集》《有学集》《投笔集》《苦海集》等，又有《列朝诗集》《杜诗笺注》等。</p><p>柳如是（1618—1664），浙江嘉兴人，名杨爱、杨云娟、杨影怜，后改名柳隐，字如是，号河东君。柳如是是著名歌妓才女，幼即聪慧好学，但由于家贫，从小就被掠卖到吴江为婢，妙龄时坠入章台，易名柳隐，在乱世风尘中往来于江浙金陵之间。柳如是颇有文采，诗稿存有《湖上草》等。</p><p>钱谦益大柳如是36岁。 钱氏娶柳后，为她在虞山盖了壮观华丽的“绛云楼”和“红豆馆”，金屋藏娇。柳氏后生有一女。有“红学”者认为，曹雪芹设计的绛云轩是来自柳氏的绛云楼。<br>本朝第一史学家陈寅恪先生著有《柳如是别传》。</p><p>后秋兴之十三·七律·清·钱谦益<br>海角崖山一线斜，从今也不属中华。<br>更无鱼腹捐躯地，况有龙涎泛海槎。<br>望断关河非汉帜，吹残日月是胡笳。<br>嫦娥老大无归处，独倚银轮哭桂花。</p><h4 id="三、诗人顾炎武"><a href="#三、诗人顾炎武" class="headerlink" title="三、诗人顾炎武"></a>三、诗人顾炎武</h4><p>顾炎武（1613—1682），思想家、学者、诗人，初名绛，字宁人，江苏昆山人，学者称亭林先生。<br>清兵入关后，顾炎武投入南明朝廷，任兵部司务，把复仇的希望寄托在弘光小朝廷之上，撰成《军制论》、《形势论》、《田功论》和《钱法论》，即著名的“乙西四论”。顺治二年，南京即为清兵攻占，顾炎武和挚友归庄等投笔从戎，加入义军。常熟陷落后，顾炎武嗣母王氏闻变，绝食殉国，临终嘱咐炎武，说：“我虽妇人，身受国恩，与国俱亡，义也。汝无为异国臣子，无负世世国恩，无忘先祖遗训，则吾可以瞑于地下。”（《先妣王硕人行状》）此后四五年中，顾炎武奔走于各股抗清力量之间，意图纠合各地义军伺机而动。顺治十四年，炎武晋谒孝陵。7年之间，炎武共六谒孝陵，以寄故国之思，然后返昆山，将家产尽行变卖，从此掉首故乡，一去不归。此后20多年间，炎武孑然一身，游踪不定，足迹遍及山东、河北、山西、河南诸边塞，考察山川形势，以为恢复故国做准备，倡“天下兴亡，匹夫有责”，拒清不仕。学问博洽，于国家典制、郡邑掌故、天文仪象、河漕兵农、经史百家、音韵训诂均有研究。晚年治经侧重考证，开清代朴学风气。认为言志为诗之本，观民风为诗之用。</p><p>悼亡·七绝·清·顾炎武<br>贞姑马鬣在江村，送汝黄泉六岁孙。<br>地下相逢告父姥，遗民犹有一人存。</p><p>白下·七律·清·顾炎武<br>白下西风落叶侵，重来此地一登临。<br>清笳皓月秋依垒，野烧寒星夜出林。<br>万古河山应有主，频年戈甲苦相寻。<br>从教一掬新亭泪，江水平添十丈深。</p><p>海上·七律·清·顾炎武<br>日入空山海气侵，秋光千里自登临。<br>十年天地干戈老，四海苍生吊哭深。<br>水涌神山来白鸟，云浮仙阙见黄金。<br>此中何处无人世，只恐难酬烈士心。 </p><h4 id="四、诗人吴伟业"><a href="#四、诗人吴伟业" class="headerlink" title="四、诗人吴伟业"></a>四、诗人吴伟业</h4><p>吴伟业（1609—1672），字骏公，号梅村，太仓人。</p><p>崇祯四年以会试第一，廷试第二中进士，授翰林编修，后任东宫讲读官、南京国子监司业等职。南明福王时，拜少詹事，因与马士英、阮大铖不合，仅任职两月便辞官归里。清朝顺治十年，被迫赴京出仕。初授秘书院侍讲，后升国子监祭酒。常以仕清为恨，为诗坛风云人物。 </p><p>诗中曾云：“我本淮王旧鸡犬，不随仙去落人间”，“浮生唯欠只一死，尘世无由识九还”。七言歌行更为出色，以《圆圆曲》为代表。《四库全书总巨》评：“格律本乎四杰，而情韵为深。叙述类乎香山，而风华为胜。”与钱谦益、龚鼎孳并称“江左三大家”，又为娄东诗派开创者。后人称之为“梅村体”。<br>著作有《梅村家藏稿》《梅村诗余》等。诗今存1000多首。</p><p>自叹·七律·清·吴伟业<br>误尽平生是一官，弃家容易变名难。<br>松筠敢厌风霜苦，鱼鸟犹思天地宽。<br>鼓枻有心逃甫里，推车何事出长干？<br>旁人休笑陶弘景，神武当年早挂冠。</p><h4 id="五、诗人查慎行"><a href="#五、诗人查慎行" class="headerlink" title="五、诗人查慎行"></a>五、诗人查慎行</h4><p>查慎行（1650—1727），初名嗣琏，字夏重，后改名慎行，字悔余，号他山，又号初白，海宁人。 </p><p>康熙四十二年进士；特授翰林院编修，入直内廷。查慎行经史受业于著名学者黄宗羲，诗法受业于桐城诗人钱澄之，又与朱彝尊为表兄弟，得其奖誉，声名早著。<br>其论诗主张“诗之厚，在意不在辞；诗之雄，在气不在直；诗之灵，在空不在巧；诗之淡，在脱不在易”（清查为仁《莲坡诗话》。袁枚《论诗绝句》称其诗“一味白描神活现，画中谁似李龙眠。”赵翼《瓯北诗话》认为：“梅村后，欲举一家列唐宋诸公之后者，实难其人。惟查初白才气开展，工力纯熟。”查慎行的诗“平生所作，不下万首”（清许汝霖《敬业堂诗集序》），后经他删定为4600余篇。 </p><p>雨过桐庐·七律·清·查慎行<br>江势西来弯复弯，乍惊风物异乡关。<br>百家小聚还成县，三面无城却倚山。<br>帆影依依枫叶外，滩声汩汩碓床间。<br>雨蓑烟笠严陵近，惭愧清流照客颜。</p><p>三闾祠作者·七律·清·查慎行<br>平远江山极目回，古祠漠漠背城开。<br>莫嫌举世无知己，未有庸人不忌才。<br>放逐肯消亡国恨？岁时犹动楚人哀！<br>湘兰沅芷年年绿，想见吟魂自往来。 </p><h4 id="六、诗人赵翼"><a href="#六、诗人赵翼" class="headerlink" title="六、诗人赵翼"></a>六、诗人赵翼</h4><p>赵翼（1727—1814），字云崧，一字耘崧，号瓯北，常州阳湖人。</p><p>乾隆十五年举乡试。乾隆十九年27岁，中明通榜，用内阁中书入直军机处，进奉文字，多出其手。乾隆二十六年廷试榜眼，授翰林院编修。乾隆五十二年，两广总督李侍尧平台湾林爽文之乱，以翼筹画之力为多。晚岁主讲安定书院。他重视诗家的创新，立论比较全面、允当。存诗4800多首，以五言古诗最有特色。有诗集53卷及《瓯北诗话》。   </p><p>后园居诗·五古·清·赵翼</p><p>有客忽叩门，来送润笔需。乞我作墓志，要我工为谀。</p><p>言政必龚黄，言学必程朱。吾聊以为戏，如其意所需。</p><p>补缀成一篇，居然君子徒。核诸其素行，十钧无一铢。</p><p>此文倘传后，谁复知贤愚。或且引为据，竟入史册摹，</p><p>乃知青史上，大半也属诬。 </p><h4 id="七、诗人黄景仁"><a href="#七、诗人黄景仁" class="headerlink" title="七、诗人黄景仁"></a>七、诗人黄景仁</h4><p>黄景仁（1749—1783），字汉镛，一字仲则，号鹿菲子，武进人。为清第一诗人。</p><p>15岁应童子试，三千人中名列第一，16岁补博士弟子员，但从此屡应乡试都不中。乾隆三十一年，于江阴遇同邑洪亮吉，时称“洪黄”，成为终生莫逆之交。乾隆三十三年，黄景仁开始浪游浙江、安徽、江西、湖南等地。曾在湖南按察使王太岳、太平知府沈业富、安徽学政朱筠幕中为客。在朱筠幕，于采石矶的太白楼宴会上即席所赋《笥河先生偕宴太白楼醉中作歌》诗传诵一时。乾隆四十年，赴北京，次年应乾隆帝东巡召试取二等，授武英殿书签官。33岁时，游西安，客陕西巡抚毕沅幕。明年回京师，为候补丞，未补官。乾隆四十八年，为债家所迫，抱病再赴西安，至山西解州运城，病逝于河东盐运使沈业富官署中。 </p><p>黄景仁短暂的一生，大都是在贫病愁苦中度过的。所作诗歌，多抒发穷愁不遇、寂寞凄怆的情怀。感遇诗：低沉苍凉；爱情诗：缠绵悱恻；抒怀诗：慷慨豪迈；山水诗：细致生动；怀古咏：别出新意。</p><p>清翁方纲曾为黄景仁的诗集作序说：“故其为诗，能诣前人所未造之地，凌、厉、奇、矫，不主故常。”洪亮吉为黄景仁写《行状》说：“自湖南归，诗益奇肆，见者以为谪仙人复出也。后始稍稍变其体，为王李高岑，为宋元祐诸君子，又为杨诚斋，卒其所诣，与青莲最近。”王昶为黄景仁写《墓志铭》说：“上自汉魏，下逮唐宋，无弗效者，疏瀹灵腑，出精入能，刻琢沉挚，不以蹈袭剽窃为能。” </p><p>黄景仁亦能词，词作明白晓畅，擅长白描，但含蓄不够。著作有《两当轩集》22卷，其中诗16卷，词3卷，诗词补遗及遗文3卷。 </p><p>笥河先生偕宴太白楼醉中作歌·歌行·清·黄景仁<br>红霞一片海上来。照我楼上华筵开。<br>倾觞绿酒忽复尽。楼上谪仙安在哉。<br>谪仙之楼楼百尺。笥河夫子文章伯。<br>风流仿佛楼中人。千一百年来此客。<br>是日江山同云开。天门淡扫双娥眉。<br>江从慈母矶边转。潮到然犀亭下回。<br>青山对面客起舞。彼此青莲—抔土。<br>若论七尺归蓬蒿。此楼做客山是主。<br>若论醉月来江滨。此楼作主山作宾。<br>长星动摇若无色。未必长作人间魂。<br>身后苍凉尽如此。俯仰悲歌亦徒尔。<br>杯底空馀今古愁。眼前忽尽东南美。<br>高会题诗最上头。姓名未死重山丘。<br>请将诗卷掷江水。定不与江东向流。</p><p>癸巳除夕偶成二首其一·七绝·清·黄景仁<br>千家笑语漏迟迟。忧患潜从物外知。<br>悄立市桥人不识。一星如月看多时。</p><p>别老母·七绝·清·黄景仁<br>搴帷别母河梁去。白发愁看泪眼枯。<br>惨惨柴门风雪夜。此时有子不如无。</p><p>倚怀十六其六 ·七律·清·黄景仁<br>小极居然百媚生。懒抛金叶罢调筝。<br>心疑棘刺针穿就。泪似桃花醋酿成。<br>会面生疏稀笑靥。别筵珍重赠歌声。<br>沈郎莫叹腰围减。忍见青娥绝塞行。</p><p>太白墓·歌行·清·黄景仁<br>束发读君诗。今来展君墓。<br>清风江上洒然来。我欲因之寄微慕。<br>呜呼。有才如君不免死。我固知君死非死。<br>长星落地三千年。此是昆明劫灰耳。<br>高冠岌岌佩陆离。纵横击剑胸中奇。<br>淘熔屈宋入大雅。挥洒日月成瑰词。<br>当时有君无著处。即今遣蠋犹相思。<br>醒时兀兀醉千首。应是鸿濛借君手。<br>乾坤无事入怀抱。只有求仙与饮酒。<br>一生低首帷宣城。墓门正对青山青。<br>风流辉映今犹昔。更有灞桥驴背客。<br>此间地下真可观。怪底江山总生色。<br>江山终古月明里。醉魄沉沉呼不起。<br>锦袍画舫寂无人。隐隐歌声绕江水。<br>残膏剩粉洒六合。犹作人间万余子。<br>与君同时杜拾遗。窆石却在潇湘湄。<br>我昔南行曾访之。衡云惨惨通九疑。<br>即论身后归骨地。俨与诗境同分驰。<br>终嫌此老太愤激。我所师者非公谁。<br>人生百年要行乐。一日千杯苦不足。<br>笑看樵牧语斜阳。死当埋我兹山麓。</p><p>杂感·七律·清·黄景仁<br>仙佛茫茫两未成，只知独夜不平鸣。<br>风蓬飘尽悲歌气，泥絮沾来薄幸名。<br>十有九人堪白眼，百无—用是书生。<br>莫因诗卷愁成谶，春鸟秋虫自作声。</p><h4 id="八、清词概述"><a href="#八、清词概述" class="headerlink" title="八、清词概述"></a>八、清词概述</h4><p>如果我们将唐词比作镶着露珠的晨曦，将宋词比作披着云锦的丽日，那么，清词就是流金溢彩、光怪陆离的晚霞了。<br>明亡后，以一大批遗民词人为代表，论时代虽已入清，但窜伏草野、抱贞守节，不向新朝臣服。<br>努尔哈赤自小就养于明代守辽名将李成梁帐下，通晓汉文，满清之初即已略被汉风。入关后，一方面镇压，一方面大行儒家政教，谋求合作与支持。作为一个少数民族所建立的王朝，清代的政治寿命之所以能两三倍于金、元而与唐、宋、明大体持平，清代的学术文化包括词的创作之所以能突过金、元、明而比隆于唐、宋，这不能不说是一个重要的关键。再有大凡一种文体，盛极而衰，剥久必复，此乃自然之理。<br>清前期康熙年间为词学创作的一大高峰。此时阳羡、浙西二派犄角对接，陈维崧、朱彝尊、纳兰性德鼎足三分，清词中兴，大势既成。阳羡词派，取法南宋辛弃疾及宋末阳羡名家蒋捷，悲壮淋漓，权奇恢诡，其领袖人物暨典范作家为陈维崧。浙西词派的兴起稍晚于阳羡词派，但持续的时间较长，反映的社会生活面偏窄，内容贫乏，此派的开山祖师朱彝尊。<br>康熙十八年大多数汉族知识分子承认和接受了现实，反清的民族意识渐趋淡化。此期词坛还涌现了一批专学唐、五代、北宋言情小令的作家，出类拔萃者为优秀的满族词人纳兰性德。</p><p>自三家之后，不见出类拔萃者。</p><h4 id="九、词家陈维崧"><a href="#九、词家陈维崧" class="headerlink" title="九、词家陈维崧"></a>九、词家陈维崧</h4><p>陈维崧（1625—1682），字其年，号迦陵，宜兴人。</p><p>清初诸生，幼有神童之誉，长而才名益著，意气若云，当世名流，无不酬唱订交。吴伟业曾誉之为“江左凤凰”。康熙十八年举博学鸿词，授翰林院检讨，参与修纂《明史》，4年后卒于任所。入清后流离颠沛，“饥驱四方，或驴背清霜，孤篷夜雨；或河梁送别，千里怀人；或酒旗歌板，须髯奋张；或月榭风廊，肝肠掩抑；一切诙谐狂啸、细泣幽吟，无不寓之于词”(清陈维岳《湖海楼词序》)。<br>一生作词四百余调、千六百首有奇,《陈迦陵集》五十四卷，如是之富，绝后空前。以豪放为主，兼有清真娴雅之作。清陈廷焯《白雨斋词话》说：“国初词家，断以迦陵为巨擘”,“迦陵词气魄绝大，骨力绝遒，填词之富，古今无两”，或谓“不及稼轩之浑厚沉郁”。布阵图而战旷野，稼轩慢词之森严，其年不能遽敌；然持短兵而斗狭巷，以纵横捭阖之辞游刃有余于小令，则是他的长技。更难得的是陈维崧各体词都写得很出色。陈维崧词的缺点是有时倾泻过甚，一发无余，便缺余蕴，稍嫌轻率。 </p><p>南乡子（邢州道上作）·词·清·陈维崧<br>秋色冷并刀，一派酸风卷怒涛。并马三河年少客，粗豪，皂栎林中醉射雕。<br>残酒忆荆高，燕赵悲歌事未消。忆昨车声寒易水，今朝，慷慨还过豫让桥。</p><p>醉落魄（咏鹰）·词·清·陈维崧<br>寒山几堵，风低削碎中原路。秋空一碧无今古，醉袒貂裘，略记寻呼处。<br>男儿身手和谁赌？老来猛气还轩举。人间多少闲狐兔，月黑沙黄，此际偏思汝。</p><p>贺新郎（送邵兰雪归吴门仍用前韵）·词·清·陈维崧</p><p>易水严装发。休回首、故人别酒，帝城高阙。九曲黄河迎马首，淼淼龙宫堆雪。</p><p>说不尽、天涯白月。君去故侯瓜可种，向西风、莫短冲冠发。</p><p>人世事，总毫末。</p><p>长洲鹿走苏台折。叹年少、当歌不醉，此非俊物。试到吴东门下问，可有吹箫人杰。</p><p>有亦被、怒潮磨灭。来夜天街无酒伴，怕离鸿、叫得枫成血。</p><p>亦归耳，住何益。</p><h4 id="十、词家朱彝尊"><a href="#十、词家朱彝尊" class="headerlink" title="十、词家朱彝尊"></a>十、词家朱彝尊</h4><p>朱彝尊（1629—1709），字锡鬯，号竹垞，又号金风亭长，晚称小长芦钓师，浙江嘉兴人。</p><p>康熙十八年举科博学鸿词，以布衣授翰林院检讨，入直南书房，曾参加纂修《明史》。<br>擅长诗词古文，词宗姜夔、张炎，风格清丽，为浙派词人的创始者。朱彝尊青壮年时曾落拓江湖，又与妻妹有过一段被扼杀的恋情。集中不乏雄浑苍莽的吊古之作、哀感顽艳的怀人之什，英雄气、儿女情兼而有之。</p><p>解珮令（自题词集）·词·清·朱彝尊<br>十年磨剑，五陵结客，把平生，涕泪都飘尽。老去填词，一半是，空中传恨。几曾围，燕钗蝉鬓。<br>不师秦七，不师黄九，倚新声，玉田差近。落拓江湖，且分付，歌筵红粉。料封侯，白头无分。</p><h4 id="十一、词家纳兰性德"><a href="#十一、词家纳兰性德" class="headerlink" title="十一、词家纳兰性德"></a>十一、词家纳兰性德</h4><p>纳兰性德（1654—1685），原名成德，字容若，号楞伽山人，满州正黄旗人。</p><p>太学士明珠长子。所交皆一时隽异。清杨芳灿《纳兰词序》评 ：“骚情古调，侠肠隽骨，隐隐奕奕，流露于豪楮间”。“盖其三生慧业，不耐浮尘，寄思无端，抑郁不释，韵淡疑仙，思幽近鬼，年之不永，即兆于斯。</p><p>南乡子（为亡妇题照）·词·清·纳兰性德</p><p> 泪咽却无声，只向从前悔薄情。凭仗丹青重省识，盈盈，一片伤心画不成。<br>别语忒分明，午夜鹣鹣梦早醒。卿自早醒侬自梦，更更，泣尽风檐夜雨铃。 </p><p>蝶恋花·词·清·纳兰性德</p><p>辛苦最怜天上月，一昔如环，昔昔都成玦。若似月轮终皎洁，不辞冰雪为卿热。</p><p>无那尘缘容易绝，燕子依然，软踏帘钩说。唱罢秋坟愁未歇，春丛认取双栖蝶。</p><h4 id="附：古典诗论"><a href="#附：古典诗论" class="headerlink" title="附：古典诗论"></a>附：古典诗论</h4><h5 id="（一）文心雕龙"><a href="#（一）文心雕龙" class="headerlink" title="（一）文心雕龙"></a>（一）文心雕龙</h5><p>《文心雕龙》在古今文论中时临尽早非最早，而力宏大至今难有敌者，先前有曹丕的《典论·论文》，陆机的《文赋》等，最终功皆由斯书覆掩。《文心雕龙》是一部总结性的文学批评巨著。文体为骈，在文论中是空前绝后。<br>作者刘勰（466?—520?）。字彦和，祖籍东莞莒。</p><p>世居京口，早孤笃志好学。家贫不能婚，依名僧十载，博通佛经且参与态理。梁以后作过记室、参军等为小官。并兼东宫通事舍人，深得太子萧统器重。晚年出家，更名慧地，不久而亡。《文心雕龙》是刘勰三十几岁时的作品，创作于齐代，以儒家思想为基。人生观如书中所言：“穷则独善以垂文，达则奉时以骋绩。注重文章的政治社会作用，他写这部书的目的是为了纠正离开了经典本源的南朝的“浮诡”“讹烂”的文风。<br>《文心雕龙》五十篇，总论五篇，自《原道》第一始，论“文之枢纽”。文体论二十篇，自《明诗》第六起。创作论十九篇，自《神思》二十六始。批评论五篇，自《时序》第四十五始，也是全书的精彩部分。最后一篇《序志》第五十。全书观点主要体现在以下几个方面<br>(一)、初步建立用历史的眼光来分析、评论文学的观点。<br>(二)、他从不同角度阐发了质先于文、质文并重的文学主张。<br>(三)、从创作的各个环节各个方面总结了创作的经验。阐明文人所必备的才、气、学、习。<br>(四)、建立了文学批评的方法论。</p><p>文心雕龙序志第五十（有删节）·骈文·南朝梁·刘勰<br>夫铨序一文为易，弥纶群言为难，虽复轻采毛发，深极骨髓，或有曲意密源，似近而远，辞所不载，亦不可胜数矣。<br>及其品列成文，有同乎旧谈者，非雷同也，势自不可异也；有异乎前论者，非苟异也，理自不可同也。同之与异，不屑古今，擘肌分理，唯务折衷。</p><p>文心雕龙风骨第二十八（有删节）·骈文·南朝梁·刘勰<br>《诗》总六义，风冠其首；斯乃化感之本源，志气之符契也。是以怊怅述情，必始乎风；沈吟铺辞，莫先于骨。故辞之待骨，如体之树骸；情之含风，犹形之包气。结言端直，则文骨成焉；意气骏爽，则文风清焉。<br>若丰藻克赡，风骨不飞，则振采失鲜，负声无力。是以缀虑裁篇，务盈守气，刚健既实，辉光乃新。其为文用，譬征鸟之使翼也。<br>故练于骨者，析辞必精；深乎风者，述情必显。捶字坚而难移，结响凝而不滞，此风骨之力也。<br>若瘠义肥辞，繁杂失统，则无骨之征也。思不环周，索莫乏气，则无风之验也。能鉴斯要，可以定文；兹术或违，无务繁采。<br>夫翚翟备色，而翾翥百步，肌丰而力沈也；鹰隼乏采，而翰飞戾天，骨劲而气猛也。文章才力，有似于此。<br>若风骨乏采，则鸷集翰林；采乏风骨，则雉窜文囿。唯藻耀而高翔，固文笔之鸣凤也。<br>若夫熔铸经典之范，翔集子史之术；洞晓情变，曲昭文体；然后能孚甲新意，雕画奇辞。昭体，故意新而不乱，晓变，故辞奇而不黩。若骨采未圆，风辞未练，而跨略旧规，驰骛新作，虽获巧意，危败亦多；岂空结奇字，纰缪而成经矣？</p><p>文心雕龙明诗第六(有删节)·骈文·南朝梁·刘勰<br>人禀七情，应物斯感，感物吟志，莫非自然。慷慨以任气，磊落以使才；造怀指事，不求纤密之巧；驱辞逐貌，唯取昭晰之能。诗有恒裁，思无定位，随性适分，鲜能通圆。若妙识所难，其易也将至；忽以为易，其难也方来。</p><h5 id="（二）钟嵘诗品"><a href="#（二）钟嵘诗品" class="headerlink" title="（二）钟嵘诗品"></a>（二）钟嵘诗品</h5><p>钟嵘，字仲伟，颍川长社人，生卒年不详。其在齐梁时代曾作过参军，记室等小官。</p><p>《诗品》是梁武帝天监十二年以后写成的。钟嵘时代，诗风衰落严重：“庸音杂体，人各为容 ”，十分混乱。故仿汉代“九品论人，七略裁士“的原则。全书将两汉至梁作家122人，分为上、中、下三品进行评论，故名为《诗品》。计上品11人，中品39人，下品72人。</p><p>钟嵘对诗歌创作中的一些重要问题正面提出了自己的见解：<br>一、他继西晋陆机《文赋》及《文心雕龙》之后更明确地提出了诗的“滋味”问题。<br>二、关于“真美”的原则。强调诗歌创作要“真美”。“真美”就是要求诗歌创作要有真挚强烈的感情，而非虚假的无病呻吟。<br>三、他提出诗歌创作应该“指事造形，穷情写物”，要求“穷情”和“写物”很好地结合起来。<br>要求赋比兴相济为用。且对内风力外丹采同等重视。<br>钟嵘论诗还坚决反对沈约等人四声八病的主张。 </p><p>曹植：骨气奇高，词采华茂，情兼稚怨，体被文质，粲溢今古，卓尔不群。（上）王粲：其源出於李陵。发愀怆之词，文秀而质羸。在曹、刘间别构一体。方陈思不足，比魏文有馀。（上）鲍照：得景阳之叔诡，含茂先之靡嫚。骨节强于谢混，驱迈疾于颜延，总四家而擅美，跨两代而孤出。（中）陶潜：文体省净，殆无长语。笃意真古，辞兴婉惬。每观其文，想其人德。世叹其质直。古今隐逸诗人之宗也。（中）曹操：曹公古直，甚有悲凉之句。（下）</p><h5 id="（三）诗品二十四"><a href="#（三）诗品二十四" class="headerlink" title="（三）诗品二十四"></a>（三）诗品二十四</h5><p>司空图（837—908），字表圣，河中虞乡人。</p><p>于唐懿宗咸通十年应试，擢进士，名声益振。官至礼部员外郎。唐僖宗广明元年，黄巢起义军攻入长安。司空图到凤翔见驾，被封为知制诰、中书舍人。 55岁辞官归乡隐居。朱温称帝，招其为官，其忠于唐室，坚辞不就，闻唐衰帝被杀，不食而死。</p><p>《诗品二十四》：从审美态度论风格的有：雄浑、沉著、冲洗、纤秾、高古、典雅，劲健、绮丽、自然、豪放、疏野、清奇、悲慨、飘逸、旷达。从语言着眼论风格的有：洗炼。从结构着眼论风格的有：缜密，委曲。从素养技巧论风格的有：精神、实境、含蓄、形容、超诣、流动。</p><p>两家《诗品》欲分别：前者是品诗，后者是诗品。司空诗品的最大优点是因诗论品，因品论人。 </p><p>诗品雄浑第一·四言诗·唐·司空图<br>大用外腓，真体内充。返虚入浑，积键为雄。<br>具备万物，横绝长空。荒荒油云，寥寥长风。<br>超以象外，得其环中。持之匪强，来之无穷。</p><p>诗品典雅第六·四言诗·唐·司空图<br>玉壶买春，赏雨茅屋。坐中佳士，左右修竹。<br>白云初晴，幽鸟相逐。眠琴绿荫，上有飞瀑。<br>落花无言，人淡如菊。书之岁华，其曰可读。</p><p>诗品豪放第十二·四言诗·唐·司空图<br>观花匪禁，吞吐大荒。由道返气，处得以狂。<br>天风浪浪，海山苍苍。真力弥满，花时返旁。<br>前招三辰，后引凤凰。晓策六鳌，濯足扶桑。</p><h5 id="（四）诗话"><a href="#（四）诗话" class="headerlink" title="（四）诗话"></a>（四）诗话</h5><p>朱熹继承并生展了“文以载道”，主张道是本，文是末，缺乏是不懂得文学的源泉是生活。<br>严羽，字仪卿 ，邵武人，宋末隐居不仕，大概卒于理宗末年，他有《沧浪诗活》最为著名。其中分为“诗辩”、“诗体”、“诗法”、“诗评”和“诗正”五部分。妙论：“夫诗有别材，非关书也；诗有别趣，非关理也。而古人未尝不读书，不穷理。所谓不涉理路，不落言筌者，上也。诗者，吟咏性情也。盛唐诸人唯有兴趣，羚羊挂角，无迹可求。故其妙处透彻玲珑，不可凑泊，如空中之音，相中之色，水中之月，镜中之像，言有尽而意无穷。”指出苏黄的缺点是：“以文字为诗，以才学为诗，以议论为诗” 。<br>宋之诗话：欧阳修的《六一诗话》，陈师道的《后山诗话》，叶梦得的《石林诗话》，胡仔的《溪渔隐丛话》，魏庆之的《诗人玉屑》，刘克庄的《后村诗话》，陆游的《老学庵笔记》，秦观的《秦少游诗话》，姜夔的《白石道人诗说》等等。<br>金元诗话：方回的《方回文论辑录》，王若虚的《滹南诗话》，李东阳的《怀麓堂诗话》，谢榛的《四溟诗话》等等。<br>明诗话：胡应麟的《诗薮》最为上乘。<br>清诗话：叶燮的《原诗》，王夫之的《薑斋诗话》，袁枚的《随园诗话》，陈延焯的《白雨斋词话》，梁启超的《饮冰室诗话》，王国维的《人间词话》。总论诗、词、曲、赋的是刘熙载的《艺概》。  </p><p>叶燮的《原诗》选数段如下：<br>譬之上古之世，饭土簋，啜土铏，当饮食未具时，进以一脔，必为惊喜；逮后世臛)臇鱼脍之法兴，罗珍搜错，无所不至，而犹以土簋土铏之庖进，可乎？上古之音乐，击土鼓而歌康衢，其后乃有丝、竹、匏、革之制，流至於今，极於九宫南谱。声律之妙，日异月新，若必返古而听击壤之歌，斯为乐乎？<br>大凡物之踵事增华，以渐而进，以至於极。故人之智慧心思，在古人始用之，又渐出之；而未穷未尽者，得后人精求之，而益用之出之。乾坤一日不息，则人之智慧心思必无尽与穷之日。<br>大凡人无才，则心思不出；无胆，则笔墨畏缩；无识，则不能取舍；无力，则不能自成一家。 </p><h5 id="（五）论诗绝句"><a href="#（五）论诗绝句" class="headerlink" title="（五）论诗绝句"></a>（五）论诗绝句</h5><p>杜甫首创，自此以后，作者纷起，体现其内容凝练，辞约意丰，传播广泛，影响深远。缺点是常生歧解，然其力小功巨。</p><p>戏为六绝句（选二）·七绝·唐·杜甫<br>其五：<br>不薄今人爱古人。清词丽句必为邻。<br>窃攀屈宋宜方驾。恐与齐梁作后尘。<br>其六：<br>未及前贤更勿疑。递相祖述复先谁。<br>别裁伪体亲风雅。转益多师是汝师。</p><p>论诗十绝之十·七绝·宋·戴复古<br>草就篇章只等闲。作诗容易改诗难。<br>玉经雕琢方成器。句要丰腴字要安。</p><p>论诗三十绝之二十八·七绝·金·元好问<br>古雅难将子美亲，精纯全失义山真。<br>论诗宁下涪翁拜，未作江西社里人。</p><p>论诗二首·七绝·清·赵翼<br>满眼生机转化钧。天工人巧日争新。<br>预支五百年新意。到了千年又觉陈。<br>结习沉吟老末忘。尚随年少角词场。<br>只愁后世无新意。不敢多搜锦绣肠。</p><p>说诗·七绝·清·宋湘<br>妙语雷同自不知。前贤应恨我生迟。<br>胜他刻意求新巧。做到无人得解时。</p><p>论诗二首·七绝·本朝·褚宝增<br>古人虽死亦当争，不胜古人算枉生。<br>待胜再开新世界，千年得并古人声。<br>并非守旧抱残枝，弃韵终究不是诗。<br>巨斧无痕因匠力，行吟千载后人知。</p><h4 id="以上内容均来自褚宝增老师讲义"><a href="#以上内容均来自褚宝增老师讲义" class="headerlink" title="以上内容均来自褚宝增老师讲义"></a>以上内容均来自褚宝增老师讲义</h4></font></html>]]></content>
      
      
      <categories>
          
          <category> 古典文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 古典文学史 </tag>
            
            <tag> 诗词 </tag>
            
            <tag> 清朝 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国古典文学史之明清小说</title>
      <link href="/2019/11/13/%E4%B8%AD%E5%9B%BD%E5%8F%A4%E5%85%B8%E6%96%87%E5%AD%A6%E5%8F%B2%E7%95%A5%E4%B9%8B%E6%98%8E%E6%B8%85%E5%B0%8F%E8%AF%B4/"/>
      <url>/2019/11/13/%E4%B8%AD%E5%9B%BD%E5%8F%A4%E5%85%B8%E6%96%87%E5%AD%A6%E5%8F%B2%E7%95%A5%E4%B9%8B%E6%98%8E%E6%B8%85%E5%B0%8F%E8%AF%B4/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="一、小说的变迁"><a href="#一、小说的变迁" class="headerlink" title="一、小说的变迁"></a>一、小说的变迁</h4><p>小说的基本特征：以散体文的形式表现叙事性的内容，通过一定的故事情节对人物的关系、命运、行为、思想、情感、环境、心理进行具体的艺术描写。 <a id="more"></a></p><p>《庄子·外物》：夫揭竿累，趣灌渎，守鲵鲋，其于得大鱼难矣。饰小说以干县令，其于大达亦远矣。庄子认为“小说”是琐屑浅薄的言论。东汉桓谭《新论》：“若其小说家，合丛残小语，近取譬譬论，以作短书，治身理家，有可观之辞。”东汉班固《汉书·艺文志》：“小说家者流，盖出于稗官。街谈巷语，道听涂说者之所造也。”</p><p>追溯小说的起源，有以下几种方面：<br>首先是神话传说，其次是寓言故事，再次是史传。<br>中国古代小说滥觞于魏晋的“志怪”（干宝的《搜神记》），南朝宋的“志人”（刘义庆的《世说新语》），唐代的“传奇”（陈鸿的《长恨歌传》、李朝威的《柳毅传》、元缜的《莺莺传》文言体），宋代的“话本”至元时日盛。元末明初出现了我国古典长篇小说的惟一形式—白话章回体，到了清代，小说基本上是文人的创作。   </p><h4 id="二、三国演义"><a href="#二、三国演义" class="headerlink" title="二、三国演义"></a>二、三国演义</h4><p>罗贯中，生卒年不详，据考订，一般认为名本，字贯中。杭州人，祖籍太原。</p><p>王圻《稗史汇编》谓罗贯中与葛可久“皆有志图王者”。有自己的政治理想，不苟同于流俗，东奔西走，参加反元起义，明朝建立后，即结束了政治生涯，而专心致力于小说创作。相传有《十七史演义》,《三国志通俗演义》它文不甚深，言不甚俗，“据正史，采小说，证文辞，通好尚、非俗非虚，易观易入，非史氏苍古之文，专瞽传诙谐之气，陈叙百年，该括万事”。影响巨大深远，等同历史教科书，军事教科书，生活教科书。结构完整为名著中第一者。综合艺术成就亦是名著中第一者。 </p><p>诸葛亮骂死王朗（自三国演义） ·小说·明·罗贯中<br>朗曰：“久闻公之大名，今幸一会。公既知天命、识时务，何故兴无名之兵？”<br>孔明曰：“吾奉诏讨贼，何谓无名？”<br>朗曰：“天数有变，神器更易，而归有德之人，此自然之理也。曩自桓、灵以来，黄巾倡乱，天下争横。降至初平、建安之岁，董卓造逆，桷、汜继虐；袁术僭号于寿春，袁绍称雄于邺土；刘表占据荆州，吕布虎吞徐郡：盗贼蜂起，奸雄鹰扬，社稷有累卵之危，生灵有倒悬之急。我太祖武皇帝，扫清六合席卷八荒；万姓倾心，四方仰德。非以权势取之，实天命所归也。世祖文帝，神文圣武，以膺大统，应天合人，法尧禅舜，处中国以临万邦，岂非天心人意乎？今公蕴大才、抱大器，自欲比于管、乐，何乃强欲逆天理、背人情而行事耶？岂不闻古人曰：‘顺天者昌，逆天者亡。’今我大魏带甲百万，良将千员。谅腐草之萤光，怎及天心之皓月？公可倒戈卸甲，以礼来降，不失封侯之位。国安民乐，岂不美哉！”<br>孔明在车上大笑曰：“吾以为汉朝大老元臣，必有高论，岂期出此鄙言！吾有一言，诸军静听：昔日桓、灵之世，汉统陵替，宦官酿祸；国乱岁凶，四方扰攘。黄巾之后，董卓、桷、汜等接踵而起，迁劫汉帝，残暴生灵。因庙堂之上，朽木为官，殿陛之间，禽兽食禄；狼心狗行之辈，滚滚当道，奴颜婢膝之徒，纷纷秉政。以致社稷丘墟，苍生涂炭。吾素知汝所行：世居东海之滨，初举孝廉入仕；理合匡君辅国，安汉兴刘；何期反助逆贼，同谋篡位！罪恶深重，天地不容！天下之人，愿食汝肉！今幸天意不绝炎汉，昭烈皇帝继统西川。吾今奉嗣君之旨，兴师讨贼。汝既为谄谀之臣，只可潜身缩首，苟图衣食；安敢在行伍之前，妄称天数耶！皓首匹夫！苍髯老贼！汝即日将归于九泉之下，何面目见二十四帝乎！老贼速退！可教反臣与吾共决胜负！”</p><h4 id="三、水浒传"><a href="#三、水浒传" class="headerlink" title="三、水浒传"></a>三、水浒传</h4><p>关于《水浒传》的作者，明人记载不一，大致有三种说法：施耐庵作，罗贯中作，施罗合作。现学术界大都认为是施耐庵作。<br>施耐庵（1296?—1370?），元末明初人，名子安，字耐庵，原籍钱塘，后迁居兴化。是孔子七十二子弟之一施之常后裔。是古典小说人物描写的第一圣手。</p><p>19岁中秀才，28岁中举人，36岁与刘伯温同榜中进士。张士诚起义抗元时，施耐庵参加了他的军事活动，后因张贪享逸乐，不纳忠言而去。 </p><p>据《东都事略·侯蒙传》：“江以三十六人横行河朔，京东官军数万无敢抗者。”又据《宋史·徽宗本纪》：“淮南盗宋江等犯淮阳军,遣将讨捕，又犯京东、河北，入楚、海州界，命知州张叔夜招降之。”南宋末龚开《宋江三十六人赞并序》说：“宋江事见于街谈巷语。” </p><p>施耐庵正是把这些在不同地区流传的故事，汇集起来，经过选择、加工、再创作，才写成这部优秀的古典名著《水浒传》。《水浒传》说明“官逼民反”，“八方共域，异姓一家”，“杀富济贫”“替天行道”。讲义气，最终被“忠孝”所害。</p><p>描写卢俊义：目炯双瞳，眉分八字，身躯九尺如银。威风凛凛，仪表似天神。惯使一条棍棒，护身龙、绝技无伦。京城内、家传清白，积祖富豪门。杀场临敌处，冲开万马，扫退千军。更忠肝贯日，壮气凌云。慷慨疏财仗义，论英名、播满乾坤。卢员外，双名俊义，绰号玉麒麟。</p><h4 id="四、西游记"><a href="#四、西游记" class="headerlink" title="四、西游记"></a>四、西游记</h4><p>吴承恩（1500?—1582?），明人，字汝忠，号射阳山人，先世江苏涟水人，后徙淮安山阳。出身于一个世代书香而败落为小商人的家庭。</p><p>《西游记》创作的时期不可确考，一般认为是晚年所作。《西游记》的故事经历了一个漫长的演变过程。因为明弘治到万历时代政治腐败，世风堕落，造成了急切呼唤斩邪除妖的英雄的渴望。外国将此书译名为《猴的故事》。语言优美的景物描写是诸名著中第一者。</p><p>吴承恩一生诗、文、词创作数量不少，但因无子嗣，去世后大部分亡佚。后由“亲犹表孙，义近高弟”的丘度，从亲友中遍索遗稿，但亦仅“存十一于千百”，编订成《射阳先生存稿》4卷,包括诗1卷，散文3卷，末附小词38首。</p><p>《西游记》第一回描写灵台方寸山斜月三星洞：<br>烟霞散彩，日月摇光。千株老柏，万节修篁。千株老柏，带雨半空青冉冉；万节修篁，含烟一壑色苍苍。门外奇花布锦，桥边瑶草喷香。石崖突兀青苔润，悬壁高张翠藓长。时闻仙鹤唳，每见凤凰翔。仙鹤唳时，声振九皋霄汉远；凤凰翔起，翎毛五色彩云光。玄猿白鹿随隐见，金狮玉象任行藏。细观灵福地，真个赛天堂！</p><h4 id="五、金瓶梅"><a href="#五、金瓶梅" class="headerlink" title="五、金瓶梅"></a>五、金瓶梅</h4><p>《金瓶梅》约在明隆庆至万历年间（1567—1620）成书，署名兰陵笑笑生，兰陵今属山东临沂，作者大约是山东人，真名难考。英国汉学家阿瑟·韦利早在20世纪30年代就提出作者应是徐渭，另有王士贞之说。<br>西门庆原是个破落财主、生药铺老板。他善于夤缘钻营、巴结权贵，在县里包揽讼事、交通官吏，知县知府都和他往来。他不择手段地巧取豪夺、聚敛财富、荒淫好色、无恶不作。他抢夺寡妇财产，诱骗结义兄弟的妻子，霸占民间少女，谋杀姘妇的丈夫。为了满足贪得无厌的享乐欲望，他干尽伤天害理的事情。但由于有官府做靠山，当朝宰相蔡京为其义父，这就使他不仅没有遭到应有的惩罚，而且左右逢源、步步高升。</p><p>《金瓶梅》是中国古代小说发展的里程碑。是第一部以家庭生活和世态人情为题材的长篇小说，为此后的世情小说开辟了广阔的题材世界，又是中国文学史上第一部由文人独创的原创长篇小说。《金瓶梅》书名从小说中西门庆的三个妾潘金莲、李瓶儿、庞春梅的名字中各取一字而成。与《三国》、《水浒》、《西游》并为明代“四大奇书”。 </p><h4 id="六、封神演义"><a href="#六、封神演义" class="headerlink" title="六、封神演义"></a>六、封神演义</h4><p>《封神演义》，明代长篇小说。作者有许仲琳、陆西星两说，都只有孤证，多数认为是许仲琳作。成书年代不可确考,一般认为在明穆宗隆庆至明神宗万历之间。100回，别题《武王伐纣外史》。<br>“实不过假商周之争，自写幻想”（鲁迅《中国小说史略》）。 </p><p>演义以纣王进香，题诗渎神，于是女娲命三妖惑纣助周为楔子，历叙纣王、妲己荒淫暴虐恶行，及姜子牙晚年知遇，西伯侯脱祸归周，武王起兵反商诸事，后纣王自焚，武王克商，而以姜子牙祭坛封神，周武王分封列国告终。<br>《封神演义》通过设炮烙造虿盆、剖孕妇、敲骨髓等情节，描写纣王的残暴不仁。把武王伐纣的“以臣伐君”“以下伐上”处理为“灭独夫”之举。姜子牙主张“天下者，非一人之天下，乃天下人之天下也”，号召诸侯“吊民伐罪”，强调了“父逼子反”、“君逼臣反”而不得不反的精神。但另一方面，书中又充满着“成汤气数已尽，周室当兴”的天命观，每个参加商周之争的人不过是“完天地之劫数，成气运之迁移” 。此外女祸思想“青竹蛇儿口，黄蜂尾上针，两般由自可，最毒妇人心。”更不足取。 </p><h4 id="七、三言"><a href="#七、三言" class="headerlink" title="七、三言"></a>七、三言</h4><p>冯梦龙（1574—1646），字犹龙，又字子犹，别号龙子犹、墨憨斋主人、顾曲散人、词奴等。长洲(今苏州)人，出身士大夫家庭。兄梦桂善画，弟梦熊为太学生，兄弟三人并称“吴下三冯”。<br>天启六年，冯梦龙被迫害，冯梦龙发愤著书，完成《喻世明言》（旧题《古今小说》）、《警世通言》、《醒世恒言》的编纂工作和《古今谭概》、《太平广记钞》、《智囊》、《情史》和《太霞新奏》等的评纂工作。<br>崇祯三年取得贡生资格，任丹徒县训导，七年升福建寿宁知县。崇祯十一年64岁秩满离任,归隐乡里。晚年仍孜孜不倦,继续从事小说创作和戏曲整理研究工作。崇祯十七年，李自成推翻明王朝，冯梦龙悲痛欲绝，他怀着中兴希望编了《甲申纪事》一书。清兵南下，他怀念故国，辗转于浙闽之间，刊行《中兴伟略》诸书，宣传抗清。隆武二年即清顺治三年春忧愤而死，又有说是被清兵所杀。<br>《三言》所收录的作品，有宋元旧篇，也有明代新作和冯梦龙拟作，但已一一难以辨别清楚。不过，无论旧篇或新作，都经其增删和润饰，使体制统一。 </p><h4 id="八、二拍"><a href="#八、二拍" class="headerlink" title="八、二拍"></a>八、二拍</h4><p>凌濛初（1580—1644），明人，字玄房，号初成。浙江乌程人。 是中国创作拟话本小说最多的一个作家。 18岁补廪膳生（明清两代称由公家给以膳食的生员），55岁以优贡授上海县丞，63岁任徐州通判。明末农民军起，他与之对抗，最后呕血而死。<br>凌蒙初著作拟话本小说集《拍案惊奇》初刻和二刻（简称“二拍”）。“初刻”、“二刻”各40卷，其中“二刻”第23卷《大姊魂游完宿愿，小姨病起续前缘》与“初刻”重复。“二刻”的第40卷则是《宋公明闹元宵》杂剧。因此，“二拍”实有小说78篇。它比《三言》逊色，盖因“沟中之断芜”难为巧手了。</p><h4 id="九、聊斋志异"><a href="#九、聊斋志异" class="headerlink" title="九、聊斋志异"></a>九、聊斋志异</h4><p>蒲松龄（1640—1715），清人，字留仙，一字剑臣，别号柳泉居士，自称异史氏，山东淄博蒲家庄人。<br>19岁初应童子试，以县、府、道三个第一名补博士弟子员，颇受施闰章的赏识，赞他“观书如月，运笔成风”，一时文名颇高。他在同乡学友李希梅家中读书时，“请订一籍，日诵一文焉书之，阅一经焉书之，作一艺、仿一贴焉书之。每晨兴而为之标日焉。庶使一日无功，则愧、则警、则汗涔涔下也”（蒲松龄《醒轩日课序》）。<br>虽一生刻苦好学，但自19岁之后，屡试不第，直到71岁高龄，才援例成为贡生。康熙五十四年农历正月二十二日，也就是在他的夫人去世的两年之后，依窗危坐逝世。<br>满腔愤气寄托在《聊斋志异》的创作中。此书创作从他年轻时开始，一直到暮年方才成书，“集腋为裘，妄续幽冥之录；浮白载笔，仅成孤愤之书。寄托如此，亦足悲矣！”<br>《聊斋志异》通行本16卷，共400余篇，后来续有发现，合计近500篇，是明清小说文言体中的唯一名著。鲁迅：“专集之最有名者”；郭沫若：“写鬼写妖高人一等，刺贪刺虐入骨三分”；老舍：“鬼狐有性格，笑骂成文章”。 </p><p>大江东去（寄王如水）·词·清·蒲松龄<br>天孙老矣，颠倒了、天下几多杰士。蕊宫榜放，直教那、抱玉卞和哭死。病鲤暴腮，飞鸿铩羽，同吊寒江水。见时相对，将从何处说起？<br>每每顾影自悲，可怜肮脏骨，销磨如此！糊眼冬烘鬼梦时，憎命文章难恃。数卷残书，半窗寒烛，冷落荒斋里。未能免俗，亦云聊复尔尔。 </p><h4 id="十、儒林外史"><a href="#十、儒林外史" class="headerlink" title="十、儒林外史"></a>十、儒林外史</h4><p>吴敬梓（1701—1754），清人，字敏轩，一字粒民，晚年自号文木老人，又称秦淮寓客。他出身于书香世家。60年间，家族中有进士、举人等功名以及出仕的官员十四五人。<br>吴敬梓的生父吴雯延，自幼便被过继给长房吴霖起为嗣。吴霖起死后，近房中不少人觊觎遗产，乃至亲族冲入家中攫夺其财产。虽然最后他继承了遗产，但因争产之事深受刺激，开始挥霍 ，乡里传为“子弟戒”。<br>《儒林外史》的写作年代难以确定，但至少下半部是在南京写的。此外还创作了不少诗词文赋，部分结集在今存的《文木山房集》中。<br>《儒林外史》表面上写的是明代生活，实际上展示了一幅清朝社会的风俗画，讽刺官吏无能、豪绅贪吝、八股取士等。<br>《儒林外史》没有一个贯穿全书的主角，是生活流创作的先驱，是我国叙事文学中讽刺艺术的高峰。全书无一爱情故事，摆脱了传统小说才子佳人的香艳俗套。依靠对生活和人物性格的真实的艺术塑造，取得巨大的生命力。</p><h4 id="十一、红楼梦"><a href="#十一、红楼梦" class="headerlink" title="十一、红楼梦"></a>十一、红楼梦</h4><p>曹雪芹，清（1715—1763）名霑，字梦阮，号雪芹、又号芹圃、芹溪，祖籍辽阳，先世原是汉族，后为满洲正白旗“包衣”人。</p><p>曾祖母孙氏曾做过康熙帝保姆，祖父曹寅做过康熙帝伴读和御前侍卫，后任江宁织造，兼任两淮巡盐监察御使。曹寅病故，其子曹颙、曹頫先后继任江宁织造。他们祖孙三代四人担任此职达58年之久。雍正初年，曹俯以“行为不端”、“骚扰驿站”和“亏空”罪名革职，家产抄没，曹雪芹便随着全家迁回北京居住。曹家从此一蹶不振，日渐衰微。<br>晚年，曹雪芹移居北京西郊，生活更加穷苦，“满径蓬蒿”，“举家食粥”，专心致志地从事《红楼梦》的修订。《红楼梦》是他“披阅十载，增删五次”，“字字看来皆是血，十年辛苦不寻常”的产物。乾隆二十八年，幼子夭亡，令他极度的悲痛，到了这一年的除夕，终于因贫病无医而逝世，享年近五十岁。 </p><p>小说《红楼梦》内容丰富，思想深刻，艺术精湛，把中国古典小说创作推向最高峰，在世界文学发展史上占有十分重要的地位。《红楼梦》对青年影响尤大，贾、林、薛三人的爱情婚姻悲剧引起了那个时代渴求自由的青年们的共鸣，从前屡禁不绝。</p><p>第三十七回 秋爽斋偶结海棠社 蘅芜院夜拟菊花题<br>咏海棠·七律·贾探春(蕉下客)<br>斜阳寒草带重门，苔翠盈铺雨后盆。<br>玉是精神难比洁，雪为肌骨易销魂。<br>芳心一点娇无力，倩影三更月有痕。<br>莫谓缟仙能羽化，多情伴我咏黄昏。<br>第三十八回 林潇湘魁夺菊花诗，薛蘅芜讽和螃蟹咏。<br>种菊·七律·贾宝玉(怡红公子)<br>携锄秋圃自移来，篱畔庭前故故栽。<br>昨夜不期经雨活，今朝犹喜带霜开。<br>冷吟秋色诗千首，醉酹寒香酒一杯。<br>泉溉泥封勤护惜，好知井径绝尘埃。 </p><p>后代的《红楼梦》续书除高鹗外，还有：<br>1、《红楼圆梦》，异名：绘图金陵；十二钗后传，回数：30，自120回续起，作者：临鹤山人。刊本：嘉庆十九年红蔷阁写刻本；大连市图书馆收藏。<br>2、《红楼梦影》，回数：24，自120回续起，作者：顾春。刊本：光绪三年聚珍堂活字印本，辽宁省图书馆藏。<br>3、《红楼幻梦》，异名：幻梦奇缘，回数：24，自97回续起，作者：花月痴人。刊本：道光二十三年疏影斋刊本，辽宁省图书馆藏。<br>4、《绮楼重梦》，异名：红楼续梦；蜃楼情梦；新红楼梦，回数：48，自120回续起，作者：王兰沚。刊本：初刊本为嘉庆四年则园漫士叙本，原书未见，仅存书目。现存较早刊本为嘉庆十年瑞凝堂本。北京大学图书馆藏。<br>5、《补红楼梦》，异名：补石头记，回数：48，自120回续起，作者：嫏环山樵。刊本：嘉庆二十五年刊本，北京师范大学图书馆藏。<br>6、《红楼梦补》，异名：红楼姊妹篇，回数：48，自97回续起，作者：归锄子。刊本：嘉庆二十四年藤花榭刊本，香港大学冯平山图书馆藏。<br>7、《续红楼梦》，异名：秦续红楼梦，回数：30，自97回续起，作者：秦子忱。刊本：嘉庆四年抱瓮轩刊本，辽宁省图书馆藏。<br>8、《红楼真梦》，异名：石头记补，回数：64，自120回续起，作者：郭则沄。刊本：民国二十九年家印铅字本，辽宁省图书馆藏。<br>9、《红楼复梦》，回数：100，自120回续起，作者：陈少海。刊本：嘉庆四年刊本，英国皇家亚洲学会藏。<br>10、《续红楼梦新编》，异名：续红楼梦；增红楼梦；增补红楼梦；红楼重梦；海续红楼梦，回数：40，自120回续起，作者：海圃主人。刊本：嘉庆十年文秀堂刊本，天津师范大学图书馆藏。<br>11、《续红楼梦稿》，异名：续红楼梦，回数：20，自120回续起，作者：张曜孙。刊本：此书未终卷，稿本九册，周绍良藏。 </p><h4 id="十二、其他书目"><a href="#十二、其他书目" class="headerlink" title="十二、其他书目"></a>十二、其他书目</h4><p>明：《杨家府演义》作者不详；《海公案》李春编；《醒世姻缘传》西周生辑著；《龙图公案》安遥时编。<br>清：《隋唐演义》褚人获著；《说岳全传》钱彩著；《野叟曝言》夏敬渠著；《女仙外史》吕熊著；《绿野仙踪》李百川著；《说唐演义全传》作者不详；《镜花缘》李汝珍著；《东周列国志》余邵鱼撰。<br>清末：《海上花列传》韩邦庆著，是最著名的吴语小说，也是中国第一部方言小说。</p><h4 id="以上内容均来自褚宝增老师讲义"><a href="#以上内容均来自褚宝增老师讲义" class="headerlink" title="以上内容均来自褚宝增老师讲义"></a>以上内容均来自褚宝增老师讲义</h4></font></html>]]></content>
      
      
      <categories>
          
          <category> 古典文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 古典文学史 </tag>
            
            <tag> 明清 </tag>
            
            <tag> 小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国古典文学史之元剧散曲</title>
      <link href="/2019/11/13/%E4%B8%AD%E5%9B%BD%E5%8F%A4%E5%85%B8%E6%96%87%E5%AD%A6%E5%8F%B2%E7%95%A5%E4%B9%8B%E5%85%83%E5%89%A7%E6%95%A3%E6%9B%B2/"/>
      <url>/2019/11/13/%E4%B8%AD%E5%9B%BD%E5%8F%A4%E5%85%B8%E6%96%87%E5%AD%A6%E5%8F%B2%E7%95%A5%E4%B9%8B%E5%85%83%E5%89%A7%E6%95%A3%E6%9B%B2/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><p><strong>公元1279年 南宋灭亡。<br>公元1368年 元朝灭亡。</strong><a id="more"></a></p><h4 id="一、杂剧的起兴"><a href="#一、杂剧的起兴" class="headerlink" title="一、杂剧的起兴"></a>一、杂剧的起兴</h4><p>从唐以前，民歌舞和各项表演艺术中虽然都有一些戏剧性质，却始终没有发展成真正性质的戏曲。从唐到宋金时期，是我国戏曲的形成期，唐代各种艺术都获得了高度的发展，从多方面推动了戏曲的诞生。“燕乐”的随之出现，加之变文、小说、传奇的产生和流行，为后来戏曲提供了丰富的题材。<br>北宋时在唐参军戏的基础上发展起来的杂剧和后来金院本都是戏曲的雏形。借鉴鼓子词、词话、诸宫调、影戏等优点，使杂剧趋向完善，艺术基础愈加坚实。<br>元杂剧的形成是我国历史上各种表演艺术发展的结果，同时也是时代的产物。金灭北宋，元灭金的过程，同时也是北方汉人反抗女真族、蒙古族的过程。在这种苦难的斗争中，要求有战斗性和群众性较强的文艺形式加以表现，而构成戏曲艺术的各种因素到这时已经过长期的酝酿而融为一体。<br>特别是元初，民族矛盾十分尖锐，又没有恢复科举制度，中下层文人的进仕道路严重缩小了，生活随之下降。除少数依附元朝外，大多数文人精力无处释放，部分文人便和民间艺人结合组成书会，对元杂剧的兴盛起到了推动作用。<br>宋金元城市经济发展为杂剧的兴盛准备了充裕的物质条件。<br>此外，元朝疆域广大，交通发达，密切了各民族之间的文化交流，特别是北方诸民族乐曲的传播，对杂剧的兴盛也有一定的作用。<br>元代有名姓可考的杂剧作家，有八十余人。作品有五百余种，元杂剧最兴盛的时期是在前期。<br>南方还是以诗词为主要文学形成时，北方就出现了关汉卿、王实甫等杂剧作家。杂剧的语言以北方民间口语为基础，吸收民间艺术营养，具有质朴自然，生动泼辣的特点。</p><p>杂剧的体载，首先是一本四折的形式，四折之外又可以加一、二个“楔子”。<br>杂剧有三个构成部分：宾白，唱词，科介。“白”有韵白、散白，“科介”其包括动作表情，武打，歌舞及音响效果等。押韵以当时北方话为准则，方式为全套通压一韵，但可四声通协。曲文中可加衬字。杂剧角色分为三大类：末、旦、净。不够完善的地方，如全剧只由主要演员独唱和一本限定四折等。</p><h4 id="二、关汉卿"><a href="#二、关汉卿" class="headerlink" title="二、关汉卿"></a>二、关汉卿</h4><p>元钟嗣成《录鬼簿》说他是大都人，原籍可能在祁州，号己斋叟，汉族。</p><p>关汉卿是一位熟悉勾栏伎艺的戏曲家，“生而倜傥，博学能文，滑稽多智，蕴藉风流，为一时之冠”(《析津志》)。生年约在金宣宗贞佑、元光之间，卒于元成宗大德年间。晚年到过杭州，长期混迹于书会才人间。一生写了六十多种杂剧。现传《感天动地窦娥冤》《赵盼儿风月救风尘》《包待制三勘蝴蝶梦》《杜蕊娘智赏金线池》《关大王单刀会》《温太真玉镜台》等多种。散曲现存小令57首，套数14套。</p><p>“驱梨园领袖，总编修帅首，捻杂剧班头”（元钟嗣成《录鬼簿》贾仲明挽关氏词）</p><p>关汉卿现存的杂剧，从思想内容看，大致可分为三类。<br><strong>第一类：揭露社会黑暗</strong><br>代表作为《感天动地窦娥冤》。结合元代的现实生活，写出了一部激动人心的悲剧。为我国的悲剧艺术提供了典型的范例。</p><p>二黄慢板（自窦娥冤）·杂剧·元·关汉卿<br>未开言思往事心中调张，禁大娘你容我表叙衷肠。实可恨张驴儿良心昧丧，买羊肚要害婆婆一命身亡。害人者反害已徒劳妄想，他的父吃羊肚篓时断肠。狗奸碱仗男子出言无状，他把我老婆婆扭到公堂。不招认实难受无情梭棒，无情拌棒，为此事替婆婆认罪承当。</p><p>滚绣球（自窦娥冤）·杂剧·元·关汉卿<br>有日月朝暮悬，有鬼神掌着生死权。天地也只合把清浊分辨，可怎生糊突了盗跖颜渊。为善的，受贫穷更命短，造恶的，享富贵又寿延。天地也做的个怕硬欺软，却原来也这般顺水推船。地也，你不分好歹何为地，天也，你错勘贤愚枉作天。哎，只落得两泪涟涟。</p><p><strong>第二类：描写下层妇女</strong><br>代表作有《赵盼儿风月救风尘》。《救风尘》是一部杰出的喜剧。长期风尘生活使她看透了有钱的子弟们所惯用的那套伎俩，并对他们保持着高度的警惕。因此当她知道结拜妹妹宋引章要嫁给周舍时，便再三忠告她。</p><p>胜葫芦（自救风尘）·杂剧·元·关汉卿<br>你道这子弟情肠甜似蜜，但娶到他家里，多无半载周年相弃掷。早努牙突嘴，拳椎脚踢，打得你哭啼啼。</p><p>幺篇（自救风尘）·杂剧·元·关汉卿<br>恁时节船到江心补漏迟，烦恼怨他谁?事要前思免后悔。我也劝你不得，有朝一日，准备着搭救你块望夫石。<br>但宋引章没有接受劝告，落得一进门便吃五十杀威棒，只得写信向赵盼儿求救，赵盼儿挺身而出。救出宋引章，并制服了周舍，收到了大快人心的喜剧效果。</p><p><strong>第三类：歌颂历史英雄</strong><br>以《关大王单刀会》成就最高。剧中主角关羽的出场在第三折，但第一、二折已通过乔国老和司马徽的口渲染了他的英雄业绩和盖世威风，造成了强烈的戏剧气氛。</p><p>驻马听（自单刀会）·杂剧·元·关汉卿<br>水涌山叠。年少周郎何处也。不觉的灰飞烟灭。可怜黄盖转伤嗟。破曹的樯橹一时绝。鏖兵的江水由然热。好叫我情惨切。（云）这也不是江水。（唱）二十年流不尽的英雄血。</p><p>金盏儿（自单刀会）·杂剧·元·关汉卿<br>他上阵处赤力力三绺美髯飘。雄赳赳一丈虎躯摇。恰便似六丁神簇捧一个活神道。那敌军若是见了，唬的他七魄散，五魂消。（云）你若和他厮杀呵。（唱）你则索多披上几副甲，剩穿上几层袍。便有百万军当不住他不刺刺千里追风骑，你便有千员将闪不过明明偃月三停刀。</p><p>京剧《甘露寺》<br>劝千岁杀字休出口，老臣与主说从头。刘备本是靖王的后，汉帝玄孙一脉留。他有个二弟汉寿亭侯，青龙偃月神鬼皆愁；白马坡前诛文丑，在古城曾斩过老蔡阳的头。他三弟翼德威风有，丈八蛇矛惯取咽喉；鞭打督邮他气冲牛斗，虎牢关前战温侯；当阳桥前一声吼，喝断了桥梁水倒流。他四弟子龙常山将，盖世英雄冠九州；长坂坡救阿斗，杀得曹兵个个愁。这一班武将哪个有？还有诸葛用计谋。你杀刘备不要紧，他弟兄闻知怎肯罢休！若是兴兵来争斗，曹操坐把渔利收。我扭转回身奏太后，将计就计结鸾俦。 </p><p>京剧《空城计》诸葛亮唱段：<br>我本是卧龙岗散淡的人，凭阴阳如反掌保定乾坤。先帝爷下南阳御驾三请，算就了汉家业鼎足三分。官封到武乡侯执掌帅印，东西征南北剿博古通今。周文王访姜尚周室大振，汉诸葛怎比得前辈的先生。闲无事在敌楼我亮一亮琴音，我面前缺少个知音的人。</p><h4 id="三、王实甫"><a href="#三、王实甫" class="headerlink" title="三、王实甫"></a>三、王实甫</h4><p>王实甫，大都人，名德信，汉族。生卒年与生平事迹不详。可能由金入元。著有杂剧十三种，以《西厢记》最为著名。五本二十一折。</p><p>明贾仲明：“风月营密匝匝列旌旗，莺花寨明颩颩排剑戟，翠红乡雄赳赳施谋智。作词章风韵美，士林中等辈伏低。新杂剧，旧传奇，《西厢记》天下夺魁。” </p><p>叨叨令（自西厢记长亭送别）·杂剧·元·王实甫<br>见安排着车儿、马儿，不由人熬熬煎煎的气。有什么心情花儿、靥儿，打扮的娇娇滴滴的媚。准备着被儿、枕儿，则索昏昏沉沉的睡。从今后衫儿、袖儿，都揾做重重叠叠的泪。兀的不闷杀人也么哥，兀的不闷杀人也么哥。久已后书儿、信儿，索与我恓恓惶惶的寄。 </p><h4 id="四、白朴"><a href="#四、白朴" class="headerlink" title="四、白朴"></a>四、白朴</h4><p>白朴（1226—1306?），原名恒，字仁甫，后改名朴，字太素，号兰谷。汉族，祖籍隩州。</p><p>白朴出身官僚士大夫家庭，父亲白华为金宣宗三年进士，官至枢密院判。白家与元好问父子为世交，过从甚密，常以诗文相往来。白朴对蒙古统治者充满了厌恶，因此放弃了官场名利的争逐，而以亡国遗民自适，以词曲为专门之业，以宣泄自己胸中的块垒。元世祖中统二年，元世祖命各路宣抚使举文学才识可以从考者，以听擢用，时以河南路推荐白朴出仕，被他谢绝，弃家南游汉口、九江、洞庭。到元世祖至元十七年在金陵定居。主要在江南的杭州、扬州一带游历，直到81岁时，还重游扬州。而后，他的行踪就无从寻觅了。</p><p>白朴的杂剧善于利用历史题材，敷演故事，因旧题，创新意，词采优美，情意深切绵长。与关汉卿、马致远、郑光祖并称为元曲四大作家。代表作主要有《唐明皇秋夜梧桐雨》《裴少俊墙头马上》《董秀英花月东墙记》等15种剧本。</p><p>鸳鸯煞（自梧桐雨）·杂剧·元·白朴<br>黄埃散漫悲风飒，碧云黯淡斜阳下；一程程水绿山青，一步步剑岭巴峡，唱道感叹情长，凄惶泪洒。早得升遐，休休却是今生罢。这个不得已的官家，哭上逍遥玉骢马。</p><h4 id="五、马致远"><a href="#五、马致远" class="headerlink" title="五、马致远"></a>五、马致远</h4><p>马致远（1250—1321），号“东篱”，大都人，汉族。</p><p>马致远是当时在北方流行的全真教的信徒。青年仕途坎坷，中年中进士。晚年不满时政，隐居田园。马致远早年即参加了杂剧创作，是“贞元书会”的主要成员，与文士王伯成、李时中，艺人花李郎、红字李二都有交往，也是当时最著名的“四大家”之一。有“曲状元”之誉。<br>所做杂剧以《汉宫秋》为其代表作，另有《荐福碑》《岳阳楼》《青衫泪》等15种。散曲120多首，有辑本《东篱乐府》。马致远写《汉宫秋》时，暗藏爱国反元深意。 </p><p>殿前欢（自汉宫秋）·杂剧·元·马致远<br>则什么留下舞衣裳，被西风吹散旧时香。我委实怕宫车再过青苔巷，猛到椒房，那一会想菱花镜里妆，风流相，兜的又横心上。看今日昭君出塞，几时似苏武还乡？</p><p>得胜令（自汉宫秋）·杂剧·元·马致远<br>他去也不沙架海紫金梁，枉养着那边庭上铁衣郎。您也要左右人扶侍，俺可甚糟糠妻下堂！您但提起刀枪，却早小鹿儿心头撞。今日央及煞娘娘，怎做的男儿当自强！ </p><h4 id="六、郑光祖"><a href="#六、郑光祖" class="headerlink" title="六、郑光祖"></a>六、郑光祖</h4><p>郑光祖，字德辉，平阳襄陵人，汉族。生卒不详，是元杂剧后期的重要作家。</p><p>元钟嗣成《录鬼簿》说他曾“以儒补杭州路吏，为人方直，不妄与人交。名闻天下，声彻闺阁，伶伦辈称郑老先生者，皆知为德辉也”。他写过杂剧十八种。今存《迷青琐倩女离魂》、《刍梅香翰林风月》、《醉思乡王粲登楼》等八种。《倩女离魂》是他的代表作，本事出于唐李玄佑的传奇《离魂记》。 </p><p>上小楼（自倩女离魂）·杂剧·元·郑光祖<br>则道你辜恩负德，你原来得官及第。你直叩丹墀，夺得朝章，换却白衣。觑画仪，比向日、相别之际，更有三千丈五陵豪气。（正末云）小姐，我去也。（下）（正旦醒科，云）分明见王生，说得了官也，醒来却是南柯一梦。（唱）</p><p>东原乐（自倩女离魂）·杂剧·元·郑光祖<br>你若是赴御宴琼林罢。媒人每拦着马。高挑起渲染佳人丹青画。卖弄他生长在王侯宰相家。你恋着那奢华。你敢新婚燕尔在他门下。</p><h4 id="七、高明"><a href="#七、高明" class="headerlink" title="七、高明"></a>七、高明</h4><p>高明（1305?—1371?），字则诚，号菜根道人，汉族，浙江瑞安人。</p><p>高明青年时期用世之心很盛，元顺帝至正五年考中进士，历任处州录事、江浙行省丞相掾、福建行省都事等职。为官清明练达。关心民间疾苦，不屈权势，处州期满离任时，百姓曾为他立碑。由于数忤权贵，晚年退居于明州，以词曲自娱。相传明初太祖朱元璋慕其名，遣使征召，他佯狂不出，不久病卒。南戏《琵琶记》是高明得以名扬后世的代表作，成为南戏创作的范本，获得“南曲之宗”的称誉。 </p><p>孝顺歌（自琵琶记糟糠自厌）·杂剧·元·高明<br>糠和米本是相依倚，被簸扬作两处飞。一贱与一贵。好似奴家与夫婿，终无见期。丈夫，你便是米呵，米在他方没处寻；奴家恰便似糠呵，怎的把糠来救得人饥馁；好似儿夫出去，怎的敎奴供饍得公婆甘旨。</p><h4 id="八、散曲综述"><a href="#八、散曲综述" class="headerlink" title="八、散曲综述"></a>八、散曲综述</h4><p>从中晚唐以来，经过长期酝酿，到了宋金对立时期，又吸收了一些民间兴起的曲词和女真、蒙古等少数民族乐曲，逐渐形成了一种新的诗歌形式，这就是当时流传在北方的散曲，也称北曲。<br>散曲包括小令和套数两种主要形式。它和词不同的地方是用韵加密了，几乎每句都要押韵，而且平、上、去三声互叶，不象诗词一般平仄韵不能通押。<br>套数沿自诸宫调，它是由两首以上同一宫调的曲子相联而成的组曲，一般都有尾声，并且要一韵到底。<br>风格特点：大量运用俚语俗谚，极少雕饰，幽默诙谐，气韵生动。<br>最后也是最重要的一点，散曲是可以在本调之外加衬字，如：<br>醉太平·散曲·元·张可久<br>风流贫最好，村沙富难交。拾灰泥补砌了旧砖窑，开一个教乞儿市学。裹一顶半新不旧乌纱帽，穿一领半长不短黄麻罩，系一条半联不断皂环绦，做一个穷风月训导。<br>去掉衬字后为：<br>风流最好，村沙难交。灰泥补砌旧砖窑，教乞儿市学。半新不旧乌纱帽，半长不短黄麻罩，半联不断皂环绦，风月训导。</p><h4 id="九、张养浩"><a href="#九、张养浩" class="headerlink" title="九、张养浩"></a>九、张养浩</h4><p>张养浩（1269—1329），字希孟，号云庄，济南人，汉族。诗、文兼擅，而以散曲著称。</p><p>19岁被荐为东平学正，历官堂邑县尹、监察御史、翰林学士、礼部尚书、参议中书省事。于英宗至治二年辞官家居，此后屡召不赴。文宗天历二年，关中大旱，特拜陕西行台中丞，遂“散其家之所有”“登车就道”（《元史》本传），星夜奔赴任所。到任四月，劳瘁而卒。追封滨国公，谥文忠。<br>张养浩居官清正，敢于犯颜直谏。在堂邑县，抑制豪强，赈灾济贫。拜监察御史之后，他绳纠贪邪，荐举廉正，弹劾不避权贵，举荐不疏仇怨，“入焉与天子争是非，出焉与大臣辨可否”（《风宪忠告》），蹈厉风发，“道之所在，死生以之”（同上）。其门人黄溍说他“力排权奸，几蹈祸而不悔”（《滨国公张文忠祠堂碑》）。</p><p>山坡羊（潼关怀古）·小令·元·张养浩<br>峰峦如聚，波涛如怒，山河表里潼关路。望西都，意踌躇。伤心秦汉经行处，宫阙万间都做了土。兴，百姓苦；亡，百姓苦。</p><h4 id="十、乔吉"><a href="#十、乔吉" class="headerlink" title="十、乔吉"></a>十、乔吉</h4><p>乔吉（?—1345），一称乔吉甫，字梦符，号笙鹤翁，又号惺惺道人，太原人，流寓杭州。杂剧、散曲作家。<br>元钟嗣成在《录鬼簿》说他“美容仪，能辞章，以威严自饬，人敬畏之”，又作吊词云：“平生湖海少知音，几曲宫商大用心。百年光景还争甚？空赢得，雪鬓侵，跨仙禽，路绕云深。”<br>乔吉的散曲以婉丽见长，精于音律，工于锤炼，喜欢引用或融化前人诗句。</p><p>折桂令（荆溪即事）·散曲·元·乔吉<br>问荆溪溪上人家，为甚人家，不种梅花。老树支门，荒蒲绕岸，苦竹圈笆。庙不灵狐狸弄瓦，官无事鸟鼠当衙。白水黄沙，倚遍阑干，数尽啼鸦。</p><h4 id="十一、散曲欣赏"><a href="#十一、散曲欣赏" class="headerlink" title="十一、散曲欣赏"></a>十一、散曲欣赏</h4><p>双调拨不断（大鱼）·散曲·元·王和卿<br>胜神鳌，夯风涛，脊梁上轻负着蓬莱岛。万里夕阳锦背高，翻身犹恨东洋小。太公怎钓?</p><p>双调潘妃曲·散曲·元·商挺<br>带月披星担惊怕，久立纱窗下，等候他。蓦听得门外地皮儿踏，则道是冤家，原来风动荼縻架。</p><p>双调沉醉东风·散曲·元·卢挚<br>对酒问人生几何，被无情日月消磨。炼成腹内丹，泼煞心头火,葫芦提醉中闲过，万里云山入浩歌，一任傍人笑我。</p><p>中吕山坡羊·散曲·元·陈英<br>晨鸡初叫，昏鸦争噪。那个不去红尘闹？路遥遥，水迢迢，功名尽在长安道。今日少年明日老。山，依旧好；人，憔悴了。</p><p>双调大德歌（夏）·散曲·元·关汉卿<br>俏冤家，在天涯，偏那里绿杨堪系马。困坐南窗下，数对清风想念他。蛾眉淡了教谁画？瘦岩岩羞戴石榴花。</p><p>南吕一枝花（不伏老）·散曲·元·关汉卿<br>我却是个蒸不烂，煮不熟，捶不匾，炒不爆，响当当一粒铜豌豆。子弟每，谁教你钻入他锄不断，砍不下，解不开，顿不脱，慢腾腾千层锦套头。我玩的是梁园月，饮的是东京酒。赏的是洛阳花，攀的是章台柳。我也会吟诗，会篆籀，会弹丝，会品竹。我也会唱鹧鸪，舞垂手，会打围，会蹴踘，会围棋，会双陆。你便是落了我牙，歪了我口，瘸了我腿，折了我手，天与我这儿般儿歹症侯，尚兀自不肯休。只除是阎王亲令唤，神鬼自来勾，三魂归地府，七魄丧冥幽，那其间才不向烟花路儿上走。</p><p>仙吕寄生草（饮）·散曲·元·白朴<br>长醉后方何碍，不醒时甚思。糟腌两个功名字，醅瀹千古兴亡事，曲埋万丈虹霓志。不达时皆笑屈原非，但知音尽说陶潜是。</p><p>中吕十二月过尧民歌(别情)·散曲·元·王实甫<br>自别后遥山隐隐，更那堪远水粼粼。见杨柳飞绵滚滚，对桃花醉脸醺醺。透内阁香风阵阵，掩重门暮雨纷纷。<br>怕黄昏忽地又黄昏，不销魂怎地不销魂。新啼痕压旧啼痕，断肠人忆断肠人。今春香肌瘦几分？搂带宽三寸。 </p><p>双调夜行船（秋思）·散曲·元·马致远<br>蛩吟罢一觉才宁贴。鸡鸣时万事无休歇。争名利何年是彻。看密匝匝蚁排兵，乱纷纷蜂酿蜜，闹穰穰蝇争血。裴公绿野堂，陶令白莲社。爱秋来时那些。和露摘黄花，带霜烹紫蟹，煮酒烧红叶。想人生有限杯，浑几个重阳节。嘱付我顽童记者。便北海探吾来，道东篱醉了也。</p><p>高祖还乡（选段）·散曲·元·睢景臣<br>二煞：你身须姓刘，你妻须姓吕，把你两家儿根脚从头数。你本身做亭长耽几盏酒，你丈人教村学读几卷书。曾在俺庄东住。也曾与我喂牛切草，拽坝扶锄。<br>一煞：春采了俺桑，冬借了俺粟。零支了米麦无重数。换田契强秤了麻三秤，还酒债偷量了豆几斛。有甚胡涂处。明标着册历，见放着文书。<br>尾：少我的钱，差发内旋拨还。欠我的粟，税粮中私准除。只道刘三，谁肯把你揪捽住。白什么改了姓，更了名，唤作汉高祖。</p><p>醉太平·散曲·元·无名氏<br>堂堂大元，奸佞专权。开河变钞祸根源，惹红巾万千。官法滥，刑法重，黎民怨。人吃人，钞买钞，何曾见。贼做官，官做贼，混贤愚。哀哉可怜！</p><p>醉太平（讥贪小利者）·散曲·元·无名氏<br>夺泥燕口，削铁针头，刮金佛面细搜求：无中觅有。鹌鹑嗉里寻豌豆，鹭鸶腿上劈精肉，蚊子腹内刳脂油。亏老先生下手！</p><h4 id="以上内容均来自褚宝增老师讲义"><a href="#以上内容均来自褚宝增老师讲义" class="headerlink" title="以上内容均来自褚宝增老师讲义"></a>以上内容均来自褚宝增老师讲义</h4></font></html>]]></content>
      
      
      <categories>
          
          <category> 古典文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 古典文学史 </tag>
            
            <tag> 元朝 </tag>
            
            <tag> 元剧 </tag>
            
            <tag> 散曲 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国古典文学史之南宋诗词</title>
      <link href="/2019/11/13/%E4%B8%AD%E5%9B%BD%E5%8F%A4%E5%85%B8%E6%96%87%E5%AD%A6%E5%8F%B2%E7%95%A5%E4%B9%8B%E5%8D%97%E5%AE%8B%E8%AF%97%E8%AF%8D/"/>
      <url>/2019/11/13/%E4%B8%AD%E5%9B%BD%E5%8F%A4%E5%85%B8%E6%96%87%E5%AD%A6%E5%8F%B2%E7%95%A5%E4%B9%8B%E5%8D%97%E5%AE%8B%E8%AF%97%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="一、南宋词背景综述"><a href="#一、南宋词背景综述" class="headerlink" title="一、南宋词背景综述"></a>一、南宋词背景综述</h4><p>北宋末年，宋、金联合发起的灭辽战争，辽亡不久，金之铁骑便大举南侵，中原被吞，徽钦被掳，高宗南渡，中国历史上出现了第二次南北朝的分裂局面。<a id="more"></a></p><p>南宋前期是剑火交并，血泪相溶，恨仇与共的时代。展开了战与和，战与降的始终不息的斗争。词人呼抗战，颂歌北伐，天平急地向“豪放派”一侧倾倒。有抗金名相李钢，抗金名将岳飞。孝宗朝“隆兴北伐”失利后，投降派重新得势。爱国词潮至辛弃疾出而上升到了巅峰。冲破苏轼“以诗文为词”之规，构筑自家“以气为词”之体。南宋前期“婉约派”只女作家李清照。 </p><p>北中国之丧失，于爱国人士们固然如刳肠剜目，对于南宋小朝廷而言只当是切除了半个胃，并不妨碍他们饮甘啖肥。姜夔、吴文英二人都是游徙于豪贵之门的清客词人，皆精通音律，自创新腔，恪守“婉约”宗风，复有了中举气象。南宋后期“豪放派”中没有产生能与姜、吴抗衡的名家。较出色的有刘克庄和陈人杰。文天祥为烈士词人，刘辰翁为直士词人，蒋捷周密为贞士词人，王沂孙、张炎为遗民词人。在徐徐降落的大幕下，不同经历、不同气质、不同流派的词人们，同台演完了宋词史上的最后一出悲剧。</p><h4 id="二、词家张孝祥"><a href="#二、词家张孝祥" class="headerlink" title="二、词家张孝祥"></a>二、词家张孝祥</h4><p>张孝祥（1132—1169）。字安国，号于湖居士，历阳乌江人。</p><p>绍兴二十四年进士第一，历官中书舍人，建康留守，因赞助张浚北伐而被免职。后知荆南兼湖北路安抚使。遭罢，起知潭州。词风近苏轼，气势豪迈，境界阔大。主张抗金，晚年因病退居芜湖。绍兴十四，张祁举家居芜湖。张孝祥才华卓绝，15岁通过乡试，22岁中状。杨万里赞其：“当其得意，诗酒淋漓，醉墨纵横，思飘月外。”1154至1159年的五年中，张孝祥官居临安，接连异迁，直至升任为中书舍人。之后屡官屡罢，然为官期间，政绩卓著。乾道五年三月，孝祥返还芜湖。七月，中暑卒，年37岁。</p><p>张孝祥诗文当时流传甚广。存词220余首。尤以反映社会现实，表现爱国思想的作品成就最为突出，上承苏轼，下启辛弃疾，在词史上占有重要地位。 </p><p>南宋汤衡：平昔为词，未尝著稿，笔酣兴健，顷刻即成，初若不经意，反复究观，未有一字无来处。又曰：所谓骏出踔厉，寓以诗人句法者也。再曰：自仇池（苏轼）仙去，能继其轨者，非公其谁与哉?南宋陈应行：比游荆、湖间，得公于湖集，所作长短句，凡数百篇。读之，泠然、洒然，真非烟火食人辞语。予虽不及识荆，然其潇散出尘之姿，自在如神之笔，迈往凌云之气，犹可以想见也。清查礼：于湖词声律宏迈，音节振拔，气雄而调雅，意缓而语峭。 清陈延焯：张孝祥六州歌头一阕，淋漓痛快，笔饱墨酣，读之令人起舞。惟“忠愤气填膺”一句，提明忠愤，转浅转显，转无余味。或亦耸当途之听，出于不得已耶。《四库提要》：慷慨悲凉。</p><p>六州歌头·词·南宋·张孝祥<br>长淮望断，关塞莽然平。征尘暗，霜风劲，悄边声。黯销凝。追想当年事，殆天数，非人力，洙泗上，弦歌地，亦膻腥。隔水毡乡，落日牛羊下，区脱纵横。看名王宵猎，骑火一川明。笳鼓悲鸣。遣人惊。<br>念腰问箭，匣中剑，空埃蠹，竟何成。时易失，心徒壮，岁将零。渺神京。干羽方怀远，静烽燧，且休兵。冠盖使，纷驰鹜，若为情。闻道中原遗老，常南望翠葆霓旌。使行人到此，忠愤气填膺。有泪如倾。</p><h4 id="三、词家辛弃疾"><a href="#三、词家辛弃疾" class="headerlink" title="三、词家辛弃疾"></a>三、词家辛弃疾</h4><p><strong>千古第一词家！</strong></p><p>辛弃疾（1140—1207），字幼安，号稼轩，山东济南人。</p><p>辛弃疾出生前13年，北宋已亡。自幼随祖父辛赞生活，辛赞一直希望有机会“投衅而起，以纾君父所不共戴天之愤”。 绍兴三十一年辛弃疾聚集了二千人在济南起事，由于难以独立生存，便投奔了在泰山中由耿京领导的有十万之众的一支声势浩大的义军，并担任掌书记。绍兴三十二年辛弃疾奉命南下与南宋朝廷联络，归途闻耿京被叛将张安国所杀，便率领五十多人袭击敌营，把张安国擒拿回建康，斩首市曹，名重一时，“壮声英概，懦士为之兴起，圣天子一见三叹息”（南宋洪迈《稼轩记》）。宋高宗便任命他为江阴签判，从此开始了他在南宋的仕宦生涯，这时他才22岁。进奏《美芹十论》，又上《九议》。历任湖北、江西、湖南、福建、浙东安抚使等职。屡官屡罢。嘉泰三年，已64岁的辛弃疾被任为绍兴知府兼浙东安抚使，再任北伐前线镇江知府，在一些谏官的攻击下被迫离职。开禧三年秋溘然长逝，享年67岁。</p><p>因光复故国的伟大志向得不到施展，一腔忠愤无奈发而为词，其独特的词作风格被称为“稼轩体”。造就了千古第一词家。辛词题材广阔，内容丰富，风格多样，意境深远，热情洋溢，慷慨悲壮，笔力雄厚，以豪放为主，爱国思想一以贯之。善于用典（往往不知其典亦可体悟词义），为辛词另一大特色。有《稼轩长短句》。存词六百多首。</p><p>弟子范开：公一世之豪，以气节自负，功业自许，果何意于歌词？故其词之为体，如张乐洞庭之野，无首无尾，不主故常，又如春云浮空卷舒起灭，随所变态，无非可观，无他，意不在于作词，而其气之所充意之所发，词自不能不尔也，然其间固有清而丽，婉而妩媚者。南宋刘辰翁：自辛稼轩前，用一语如此者，必且掩口。及稼轩，横竖烂熳，乃如禅宗棒喝，头头皆是；又如悲笳万鼓，平生不平事并巵酒，但觉宾主酣畅，谈不暇顾。词至此亦足矣。南宋刘克庄：大声镗鞳，小声铿鍧，横绝六合，扫空万古，自有苍生所未见。亦不在小晏、秦郎之下。清邹祗谟：稼轩雄深雅健，自是本色，中调、短令亦间作妩媚语。观其得意处，真有压倒古人之意。清彭孙遹：稼轩之词，胸有万卷，笔无点尘，激昂排宕，不可一世。清吴衡照：辛稼轩别开天地，横绝古今，论、孟、诗小序、左氏春秋、南华、离骚、史、汉、世说、选学、李、杜诗，拉杂运用，弥见其笔力之峭。清周济：稼轩敛雄心，抗高调，变温婉，成悲凉。又曰：稼轩不平之鸣随处辄发，有英雄语，无学问语，故往往锋颖太露。就才情富艳，思力果锐，实无其匹。又曰：世以苏、辛并称。苏之自在处，辛偶能到之；辛之当行处，苏必不能到；二公之词，不可同日语也。又曰：后人以粗豪学稼轩，非徒无其才，并无其情。稼轩固是才大，然情至处后人万不能及。北宋词多就景叙情，故珠圆玉润，四照玲珑。至稼轩、白石，一变而为即事叙景，使深者反浅，曲者反直。吾十年来，服膺白石，而以稼轩为外道。由今思之，可谓瞽人扪龠也。稼轩郁勃，故情深；白石放旷，故情浅；稼轩纵横，故才大；白石局促，故才小。又曰：苏、辛并称。东坡天趣独到处，殆成绝诣，而苦不经意，完璧甚少。稼轩则沉着痛快，有辙可循，南宋诸公，无不传其衣钵，固未可同年而语也。清陈廷焯：辛稼轩气魄极雄大，意境却极沉郁，不善学之，流入叫嚣，稼轩不受过也。清刘熙载：苏、辛皆至情至性人，故其词潇洒卓荦，悉出于温柔敦厚。世或以粗犷托苏、辛，固宜有视苏、辛为别调者矣。张玉田盛称白石，而不甚许稼轩，耳食者遂于两家有轩轾意。不知稼轩之体，白石尝效之矣。集中如永遇乐、汉宫春诸阕，均次稼轩韵，其吐属气味，皆若秘响相通，何后人过分门户耶？又曰：稼轩词龙腾虎掷，任古书中理语、庾语，一经运用，便得风流，天姿是何夐异！清谢章铤：学稼轩，要于豪迈中见精致。近人学稼轩，只学得莽字、粗字，无怪阑入打油恶道。试取辛词读之，岂一味叫嚣者所能望其顶踵？ 清谢章铤：又曰：蒋藏国（士铨）为善于学稼轩者。稼轩是极有性情之人。学稼轩者，胸中须先具一段真气、奇气，否则虽纸上奔腾，其中俄空焉，亦萧萧索索，如牖下风耳。读苏、辛词，知词中有人，词中有品，不敢自为菲薄。然辛以毕生精力注之，比苏尤为横出。苏风格自高，而性情颇歉。辛却缠绵悱恻，且辛之造语俊于苏。清王国维：幼安之佳处，在有性情，有境界，即以气象论，亦有傍素波、干青云之概，宁后世龌龊小生所可拟耶？东坡之词旷，稼轩之词豪。无二人之胸襟而学其词，犹东施之效“捧心”也。稼轩中秋饮酒达旦，用“天问”体，作木兰花慢以送月曰：“可怜今夜月，向何处，去悠悠？是别有人间，那边才见，光景东头？”词人想象，直悟月轮绕地之理，与科学家密合，可谓神悟！ </p><p>水龙吟（登建康赏心亭）·词·南宋·辛弃疾</p><p>楚天千里清秋，水随天去秋无际。遥岑远目，献愁供恨，玉簪螺髻。落日楼头，断鸿声里，江南游子。把吴钩看了，栏杆拍遍，无人会，登临意。</p><p>休说鲈鱼堪脍，尽西风，季鹰归未？求田问舍，怕应羞见，刘郎才气。可惜流年，忧愁风雨，树犹如此！倩何人唤取，红巾翠袖，揾英雄泪！</p><p>清平乐（独宿博山王氏庵）·词·南宋·辛弃疾</p><p>绕床饥鼠，蝙蝠翻灯舞。屋上松风吹急雨，破纸窗间自语。<br>平生塞北江南，归来华发苍颜。布被秋宵梦觉，眼前万里江山。 </p><p>破阵子（为陈同甫赋壮词以寄之）·词·南宋·辛弃疾<br>醉里挑灯看剑，梦回吹角连营。八百里分麾下炙，五十弦翻塞外声。沙场秋点兵。<br>马作的卢飞快，弓如霹雳弦惊。了却君王天下事，赢得生前身后名。可怜自发生。</p><p>沁园春（带湖新居将成）·词·南宋·辛弃疾<br>三径初成，鹤怨猿惊，稼轩未来。甚云山自许，平生意气，衣冠人笑，抵死尘埃。意倦须还，身闲贵早，岂为莼羹鲈脍哉！秋江上，看惊弦雁避，骇浪船回。<br>东冈更葺茅斋。好都把轩窗临水开。要小舟行钓，先应种柳，疏篱护竹，莫碍观梅。秋菊堪餐，春兰可佩，留待先生手自栽。沉吟久，怕君恩未许，此意徘徊。</p><p>南歌子（新开池戏作）·词·南宋·辛弃疾<br>散发披襟处，浮瓜沈李杯。涓涓流水细侵阶。凿个池儿，唤个月儿来。<br>画栋频摇动，红葵尽倒开。斗匀红粉照香腮。有个人人，把做镜儿猜。</p><h4 id="四、词家姜夔"><a href="#四、词家姜夔" class="headerlink" title="四、词家姜夔"></a>四、词家姜夔</h4><p>姜夔（1155?—1221?），字尧章，江西铙州人，因寓居吴兴与白石洞天为邻，自号白石道人。</p><p>姜夔出生于书宦门第，幼年随父受教，少年丧父，就学于诗词名流千岩老人萧德藻，得其赏识，并娶其侄女为妻。姜夔为人清高，不汲汲于功名，一生困顿。终其身为布衣；但以诗词、音乐及书法与人交往，藉此谋取生计。姜夔因娴通音律，于通用词调外，每自创词牌，自制新调曲谱，并能吹弹伴和。 姜夔曾与张鉴结为至交，并长期得其资助。享年约66岁。姜夔：南山仙人何所食，夜夜山中煮白石，世人唤作白石仙，一生费齿不费钱。</p><p>南宋范成大：白石词有裁云缝月之妙手，敲金戛玉之奇声。南宋陈郁：白石襟期洒落，如晋、宋间人，意到语工，不期于高远而自高远。元张炎：姜白石词如野云孤飞，去留无迹。不惟清空，又且骚雅，读之使人神观飞越。清周济：白石脱胎稼轩，变雄健为清刚，变驰骤为疏宕。盖二公皆极热中，故气味吻合。辛宽姜窄，宽故容藏，窄故斗硬。清戈载：其高远峭拔之至，首无古人，后无来者，真词中之圣。清宋翔凤：词家之有白石，犹诗家之有杜少陵，继往开来，文中关键。其流落江湖，不忘君国，皆借托比兴，于长短句寄之。清刘熙载：白石才子之词，稼轩豪杰之词。才子、豪杰，各从其类爱之，强论得失，皆偏辞也。姜白石词幽韵冷香，令人挹之无尽。拟诸形容，在乐则琴，在花则梅。清冯煦：白石所作，超脱蹊径，天籁人力，两臻绝顶，笔之所至，神韵俱到。清王国维：古今词人格调之高，无如白石，惜不于意境上用力，故觉无言外之味，弦外之响。</p><p>扬州慢·词·南宋·姜夔<br>序：淳熙丙申正日，予过维扬。夜雪初霁，荠麦弥望。入其城则四壁萧条，寒水自碧，暮色渐起，戍角悲吟。予怀怆然，感慨今昔,因自度此曲。千岩老人以为有《黍离》之悲也。<br>淮左名都，竹西佳处，解鞍少驻初程。过春风十里，尽荠麦青青。自胡马窥江去后，废池乔木，犹厌言兵。渐黄昏、清角吹寒，都在空城。<br>杜郎俊赏，算而今、重到须惊。纵豆蔻词工，青楼梦好，难赋深情。二十四桥仍在，波心荡冷月无声。念桥边红药，年年知为谁生。 </p><h4 id="五、词家王沂孙"><a href="#五、词家王沂孙" class="headerlink" title="五、词家王沂孙"></a>五、词家王沂孙</h4><p>王沂孙（1230?—1291?），字圣与，号碧山，又号中仙，家住玉笥山，亦号玉笥山人，会稽人。</p><p>善文词，广交游。宋亡，沂孙与唐珏、周密等结吟社，托意莲、蝉诸物，寄托亡国之恸。人称“王哀蝉”。元世祖至元中，一度出为庆元路学正。晚年往来杭州、绍兴间。工词，尤以咏物为工，风格接近周邦彦、姜夔。其词章法缜密，是一位有显著艺术个性的词家。存词60余首。</p><p>元张炎：碧山工词，琢语峭拔，有白石意度。清周济：中仙最多故国之感，故着力不多，天分高绝，所谓意能尊体也。词以思笔为入门阶陛，碧山思笔，可谓双绝，幽折处大胜白石。惟圭角太分明，反复读之，有水清无鱼之恨。清戈载：予尝谓白石之词，空前绝后，匪特无可比肩，抑且无从入手，而能学之者则惟中仙。其词运意高远，吐韵妍和；其气清，故无沾滞之音；其笔超，故有宕往之趣；是真白石之入室弟子也。清况周颐：初学作词，最宜读碧山乐府，如书中欧阳信本，准绳规矩极佳。民国龙榆生：集咏物词之大成，而能提高斯体之地位者，厥（jué乃）惟王沂孙氏。</p><p>醉蓬莱（归故山）·词·南宋·王沂孙</p><p> 扫西风门径，黄叶凋零，白云萧散。柳换枯阴，赋归来何晚。爽气霏霏，翠蛾眉妩，聊慰登临眼。故国如尘，故人如梦，登高还懒。</p><p>数点寒英，为谁零落，楚魄难招，暮寒堪揽。步屧荒篱，谁念幽芳远。一室秋灯，一庭秋雨，更一声秋雁。试引芳樽，不知消得，几多依黯。 </p><h4 id="六、词家张炎"><a href="#六、词家张炎" class="headerlink" title="六、词家张炎"></a>六、词家张炎</h4><p>张炎（1248—1320?），字叔夏，号玉田，晚号乐笑翁，祖籍凤翔，寓居临安。</p><p>宋亡以后，家道中落，贫难自给，曾北游燕赵谋官，失意南归，落拓而终。是西子湖畔一名“雅词”词客。有《山中白云词》，存词约三百首。有写雁名词传世，人称“张孤雁”。<br>张炎为词主张“清空”、“骚雅”，倾慕周邦彦、姜夔而贬抑吴文英。 张炎是最早的词论家，著有《词源》一书。</p><p>元郑思肖：玉田一代空狂怀抱，飘飘征情，节节弄拍。元仇远：山中白云词，意度超玄，律吕协洽，方之古人，当与白石老仙相鼓吹。元邓牧：美成、白石，逮今脍炙人口。知者谓丽莫如周，赋情或近俚；骚莫若姜，放意或近率。今玉田张君，无二家所短而兼所长。清凌廷堪：美成如杜，白石兼王、孟、韦、柳之长，与白石并有中原者，后起之玉田也。白石老仙去后，只有玉田与之并立。探春慢二词，工力悉敌，试掩姓氏观之，不辨孰为尧章，孰为叔夏。清周济：玉田才不高，专恃磨袭雕琢，处处妥当，宅句安章，偶出风致。</p><p>清平乐·词·南宋·张炎</p><p>候蛩凄断，人语西风岸。月落沙平江似练，望尽芦花无雁。<br>暗教愁损兰成，可怜夜夜关情。只有一枝梧叶，不知多少秋声！ </p><p>原为歌妓卿卿所填词为：<br>候虫凄断，人语西风岸，月落河平流水漫，惊见芦花来雁。  可怜瘦损兰成，多情只为卿卿，只有一枝梧叶，不知多少秋声。 </p><p>解连环·孤雁·词·南宋·张炎<br>楚江空晚。怅离群万里，恍然惊散。自顾影、欲下寒塘，正沙净草枯，水平天远。写不成书，只寄得、相思一点。料因循误了，残毡拥雪，故人心眼。<br>谁怜旅愁荏苒。谩长门夜悄，锦筝弹怨。想伴侣、犹宿芦花，也曾念春前，去程应转。暮雨相呼，怕蓦地、玉关重见。未羞他、双燕归来，画帘半卷。 </p><h4 id="七、词律介绍"><a href="#七、词律介绍" class="headerlink" title="七、词律介绍"></a>七、词律介绍</h4><h5 id="（一）、词的特点"><a href="#（一）、词的特点" class="headerlink" title="（一）、词的特点"></a>（一）、词的特点</h5><p>词是一种抒情诗体，是配合音乐可以歌唱的诗。它的严格的格律和在形式上的种种特点，都是由音乐的要求而规定的。<br>词和诗在形式上的不同，主要有以下几点： </p><ol><li>每首词都有一个调名。各个词调都是“调有定句，句有定字，字有定声”，并且各不相同。 </li><li>一首词大都分为数片，以分两片的为最多。 </li><li>押韵的位置各个词调都有它一定的格式。</li><li>句式长短不一。</li></ol><h5 id="（二）、选择词调"><a href="#（二）、选择词调" class="headerlink" title="（二）、选择词调"></a>（二）、选择词调</h5><p>词是按照乐谱填作的，所以，作词先要选择词调。<br>辨别词调声情的方法，约有下列几种： </p><ol><li>根据前人记载分析：唐宋人书中凡言及词调声情，大致都可信。</li><li>根据唐宋词作品辩别如《满江红》、《贺新郎》就可用这种方法断为豪放激越一类。虽有例外，大致相差不远。 </li><li>根据凋中字句声韵体味：有些词情不易分析，或者有些作品感情错综复杂，可按照字句的声韵，进行揣度。</li><li>根据作家流派和所处时代分辨：如豪放派词人，作词多飘逸豪放；婉约派则清婉绚丽。 </li></ol><h5 id="（三）、尊重词谱"><a href="#（三）、尊重词谱" class="headerlink" title="（三）、尊重词谱"></a>（三）、尊重词谱</h5><h5 id="（四）、词的章法"><a href="#（四）、词的章法" class="headerlink" title="（四）、词的章法"></a>（四）、词的章法</h5><p>词的章法多取法于诗，但由于要紧密配合音乐，又有着自己的特点。开头、过片和结尾怎么写，可以说是词的章法的核心。 </p><h5 id="（五）、押韵方式"><a href="#（五）、押韵方式" class="headerlink" title="（五）、押韵方式"></a>（五）、押韵方式</h5><p>以现代汉语为标准，一二声为平声，三四声为仄声。关于四声我们现代人不用也无法讲究。<br>韵母相同或相近者为一韵。<br>词的押韵方式比诗复杂，而且变化很多。 </p><h5 id="（六）、词的对仗"><a href="#（六）、词的对仗" class="headerlink" title="（六）、词的对仗"></a>（六）、词的对仗</h5><p>对仗是古典诗词的重要艺术手段之一。近体诗的对仗，要求相当严格。而词的对仗就不象近体诗那么严格，什么地方用对仗也不那么固定。</p><p>例：沁园春 ·词·本朝·褚宝增<br>依许结教授癸巳元日晨兴倚声空谈韵<br>三径通衢，八维放眼，心渐升温。料龙蛇替变，天纲依旧，时空重组，气象更新。东去江流，北回雁影，经纬交织万里春。留残雪，让微风慢扫，丽日随熏。<br>二毛趋向平分。唯酒量仍能放胆拼。拒庐山寺里，白莲社请，洛阳城内，绿野堂寻。打诨车夫，教诗弟子，不惹猿惊鹤怨嗔。甘享受，这河澄海晏，国泰民欣。<br>中仄平平，中中仄中，中仄中平。仄中平中仄，中平中仄，中平中仄，中仄平平。中仄平平，中平中仄，中仄中平中仄平。平平仄，仄中平中仄，中仄平平。<br>中平中仄平平。仄中仄平平中仄平。仄中平中仄，中平中仄，中平中仄，中仄平平。中仄平平，中平中仄，中仄中平中仄平。平中仄，仄中平中仄，中仄平平。</p><p>满庭芳（由南唐李煜虞美人改）·词·本朝·褚宝增<br>几度春花，几番秋月，周而欲了何时。不堪回首，往事入盈卮。昨夜小楼窗外，东风过，告我弗知。流云侧，银盘明灭，眷洒故园池。<br>休提。从别后，雕阑犹立，玉砌仍栖。只恐朱颜残败草凄迷。枉幻重将见也，孤枕上，断梦支离。漫清点，心愁多少，恰供一江兮。</p><p>虞美人（由北宋秦观满庭芳改）·词·本朝·褚宝增<br>山云天草角声断，停棹离樽饯。蓬莱旧事过纷纷，暮日寒鸦数点绕孤村。<br>香囊罗带终需换，薄幸名难免。问君重见惹啼痕，空对高城灯火己黄昏。 </p><h4 id="八、南宋诗综述"><a href="#八、南宋诗综述" class="headerlink" title="八、南宋诗综述"></a>八、南宋诗综述</h4><p>南宋前期诗坛的一个突出现象是此期诗人受黄庭坚、陈师道的影响很深，并逐渐形成了江西诗派。<br>南宋中期诗坛再度出现繁荣的局面，被称为宋诗的中兴期，涌现出“中兴四大诗人”陆游、杨万里、范成大、尤袤，形成了宋诗创作的第二个高峰。这些作家几乎都从学江西诗法入手，但最终又都能从根本上摆脱江西诗派的束缚，各具独创精神，均能自成体格，打开了宋诗的新局面。<br>南宋后期的诗歌创作，经历了两次比较大的变化。第一次变化发生在宋金对峙的局面较为稳定之时，此时激昂悲壮的高亢呼声渐趋微弱，中期诗坛盛行的爱国诗歌潮流被四灵诗派与江湖诗派所取代。第二次变化发生在南宋倾覆前后，国破家亡的惨痛再度激发了诗人们的爱国主义感情，此时的诗坛响起了壮怀激烈的战歌和沉痛哀婉的悲歌。 四灵是指浙江永嘉的四位诗人：徐照（字灵晖）、徐玑（号灵渊）、翁卷（字灵舒）、赵师秀（号灵秀），因各人的字号中都带有一个“灵”字，故称“永嘉四灵”。他们彼此兴趣相投，诗风大体相近，又称“四灵诗派”。四灵论诗贬斥江西而取法晚唐，尤其崇尚贾岛、姚合。<br>江湖诗派：南宋后期，杭州书商陈起将当时一大批诗人的诗作陆续以《江湖集》的名义刊行，其中的创作主体也大都是功名不遂而浪迹江湖的下层文人，江湖诗派由此而得名。代表作家有刘克庄、戴复古、刘过、方岳。</p><h4 id="九、诗人陆游"><a href="#九、诗人陆游" class="headerlink" title="九、诗人陆游"></a>九、诗人陆游</h4><p>陆游（1125—1210），字务观，号放翁，越州山阴人。</p><p>绍兴二十四年，赴临安应漕试，名列第一，竟在复试时被除名。淳熙二年范成大镇蜀，邀陆游至其幕中任参议官。淳熙十五年，陆游被召赴临安任军器少监。次年，光宗即位，改任朝议大夫礼部郎中。嘉定二年十二月二十九日，84岁的老诗人抱着未见国土收复的遗恨与世长辞。<br>陆游集中存诗9300余首。他的诗大致可以分为三期：第一期是从少年到中年，约30年，存诗约200首左右。第二期是入蜀以后，到他64岁罢官东归，前后近20年，存诗2400余首。第三期是长期蛰居故乡山阴一直到逝世，亦有20年，存诗近6500首。他的诗“言恢复者十之五六”，抗敌御侮一直是最能触发他创作激情的思想主题。<br>忧国、爱民、誓死抗战，是陆诗的最大特色并能传诵千古的原因。陆游的诗可谓各体兼备，无论是古体、律诗、绝句都有出色之作，其中尤以七律写得又多又好。 </p><p>十一月四日风雨大作·七绝·南宋·陆游<br>僵卧孤村不自哀，尚思为国戍轮台。<br>夜阑卧听风吹雨，铁马冰河入梦来。</p><p>示儿·七绝·南宋·陆游（1210）<br>死去元知万事空，但悲不见九州同。<br>王师北定中原日，家祭无忘告乃翁！</p><p>南宋刘克庄（1234）<br>不及生前见虏亡，放翁易箦愤堂堂。<br>遥知小陆羞时荐，定告王师入洛阳！</p><p>南宋遗民林景熙（1279）<br>青山一发愁濛濛，干戈况满天南东。<br>来孙却见九州同，家祭如何告乃翁！ </p><p>排闷·七绝·南宋·陆游<br>曾携一剑远从戎，秦赵关河顾盼中。<br>老去功名无复梦，凌烟分付黑头公。</p><p>排闷·七绝·南宋·陆游<br>四十从军渭水边，功名无命气犹全。<br>白头烂醉东吴市，自拔长刀割彘肩。</p><p>排闷·七绝·南宋·陆游<br>万里风中寄断蓬，古来虚死几英雄？<br>拔山力与回天势，不满先生一笑中。</p><p>书愤·七律·南宋·陆游<br>早岁那知世事艰，中原北望气如山。<br>楼船夜雪瓜洲渡，铁马秋风大散关。<br>塞上长城空自许，镜中衰鬓已先斑。<br>出师一表真名世，千载谁堪伯仲间。</p><p>诸葛书台·七律·南宋·陆游<br>丞相名垂汗简青，书台犹在复谁登。<br>隆中鱼水三分业，江上风云八阵腾。<br>还向纶巾瞻气象，尚留祠庙傍邱陵。<br>凭栏一啸吟梁父，铜雀高高未变曾。</p><p>感秋·五古·南宋·陆游<br>秋色关河外，秋声天地间。壮士感此时，朝镜凋朱颜。<br>一身寄空谷，万里梦天山。噫鸣怒眦裂，愤激悲涕潸。<br>古来真龙驹，未必置天闲。长松倒涧壑，委弃同榛菅。<br>得志未可测，淡笑济时艰。凛然出师表，一字不可删。</p><h4 id="十、诗人杨万里"><a href="#十、诗人杨万里" class="headerlink" title="十、诗人杨万里"></a>十、诗人杨万里</h4><p>杨万里（1127—1206），字廷秀，号诚斋，吉州吉水人。</p><p>绍兴二十四年进士。主张抗金。历任国子博士、漳州知州、吏部员外郎、秘书监等职。与陆游、范成大、尤袤并称为南宋四家。因其诗自成一家，独具风格，形成对后世影响颇大的诚斋体。善于巧妙捕捉稍纵即逝、转瞬即改的自然情趣，用生动、活泼而又富有变化的语言表现出来，这就是杨万里提倡的“活法”，也是诚斋体的突出特点。今存诗4200余首。</p><p>小池·七绝·南宋·杨万里<br>泉眼无声惜细流，树阴照水爱晴柔。<br>小荷才露尖尖角，早有蜻蜓立上头。</p><p>闲居初夏午睡起二绝句之一·七绝·南宋·杨万里<br>梅子留酸软齿牙，芭蕉分绿与窗纱。<br>日长睡起无情思，闲看儿童捉柳花。</p><p>舟过谢潭三首之三·七绝·南宋·杨万里<br>碧酒时倾一两杯，船门才闭又还开。<br>好山万皱无人见，都被斜阳拈出来。</p><p>宿新市徐公店·七绝·南宋·杨万里<br>篱落疏疏一径深，树头花落未成阴。<br>儿童急走追黄蝶，飞入菜花无处寻。</p><h4 id="十一、诗人耶律楚材"><a href="#十一、诗人耶律楚材" class="headerlink" title="十一、诗人耶律楚材"></a>十一、诗人耶律楚材</h4><p>耶律楚材（1190—1244），蒙古帝国大臣。字晋卿，号玉泉老人，法号湛然居士。蒙古名为“吾图撒合里”，意为“长髯人”。出身于契丹贵族家庭，是辽太祖耶律阿保机的九世孙。</p><p>耶律楚材初仕金，成吉思汗十年，蒙古军攻占燕京，转而辅佐成吉思汗，随成吉思汗西征六万余里。窝阔台汗即位后，耶律楚材倡立朝仪，蒙古人始定行君臣礼，以尊汗权。窝阔台汗三年，任中书令，改分封为中央集权，为后来忽必烈建立元朝奠定了基础。是促进蒙古贵族接受中国传统文化的第一人。诗作颇丰，现存《湛然居士文集》共14卷。</p><p>壬午元日二首其二·七律·北元·耶律楚材<br>万里西征出玉关，诗无佳思酒瓶干。<br>萧条异域年初换，坎坷穷途腊已残。<br>身过碧云游极乐，手遮东日望长安。<br>年光迅速如流水，不管诗人两鬓斑。</p><p>过天山周敬之席上和人韵二首其一·七律·北元·耶律楚材<br>沦落天涯数十秋，区区班笔早年投。<br>采薇山下慵拈草，洗耳溪边懒饮牛。<br>振武扬威难射虎，忘机绝虑不惊鸥。<br>当年射策承明殿，未必轻轻输吕筹。</p><h4 id="十二、诗人元好问"><a href="#十二、诗人元好问" class="headerlink" title="十二、诗人元好问"></a>十二、诗人元好问</h4><p>元好问（1190—1257），字裕之，号遗山，太原秀容人。</p><p>相传祖先是北魏太武帝拓跋焘的儿子，鲜卑族后裔之汉族，后世入中原后多成汉族。元好问是金末元初著名作家和历史学家、文坛盟主，是宋金对峙时期北方文学的主要代表，又是金元之际在文学上承前启后的桥梁，被尊为“北方文雄”、“一代文宗”，其诗、文、词、曲，各体皆工。</p><p>金兴定五年元好问进士及第，34岁时，又宏词科登第，被任为权国史院编修，留官汴京。后相继任内乡县令、南阳县令、尚书省令史、左司都事，尚书省左司员外郎。金天兴二年四月，蒙古兵攻破汴京初，元好问即向当时任蒙古国中书令的耶律楚材推荐了54个中原秀士王若虚等，请耶律楚材予以保护和任用。金亡后元好问勤奋编辑金国已故君臣诗词总集《中州集》。 元宪宗七年九月离世，享年67岁。</p><p>元好问的文学成就以诗歌创作最为突出，并以“丧乱诗”奠定了他在文学史上地位的，当然还有为数不少的写景诗。其诗奇崛而绝雕琢，巧缛而不绮丽，形成河汾诗派。存诗1380余首、词380余首、散曲6首，传世《遗山先生文集》。</p><p>岐阳三首其二·七律·金·元好问<br>百二关河草不横，十年戎马暗秦京。<br>岐阳西望无来信，陇水东流闻哭声。<br>野蔓有情萦战骨，残阳何意照空城。<br>从谁细向苍苍问，争遣蚩尤作五兵。</p><p>同儿辈赋未开海棠二首其一·七绝·金·元好问<br>枝间新绿一重重，小蕾深藏数点红。<br>爱惜芳心莫轻吐，且教桃李闹春风。 </p><p>临江仙（自洛阳往孟津道中作）·词·金·元好问<br>今古北邙山下路，黄尘老尽英雄。人生长恨水长东。幽怀谁共语，远目送归鸿。<br>盖世功名将底用，从前错怨天公。浩歌一曲酒千钟。男儿行处是，未要论穷通。</p><h4 id="以上内容均来自褚宝增老师讲义"><a href="#以上内容均来自褚宝增老师讲义" class="headerlink" title="以上内容均来自褚宝增老师讲义"></a>以上内容均来自褚宝增老师讲义</h4></font></html>]]></content>
      
      
      <categories>
          
          <category> 古典文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 古典文学史 </tag>
            
            <tag> 诗词 </tag>
            
            <tag> 南宋 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国古典文学史之北宋诗词</title>
      <link href="/2019/11/13/%E4%B8%AD%E5%9B%BD%E5%8F%A4%E5%85%B8%E6%96%87%E5%AD%A6%E5%8F%B2%E7%95%A5%E4%B9%8B%E5%8C%97%E5%AE%8B%E8%AF%97%E8%AF%8D/"/>
      <url>/2019/11/13/%E4%B8%AD%E5%9B%BD%E5%8F%A4%E5%85%B8%E6%96%87%E5%AD%A6%E5%8F%B2%E7%95%A5%E4%B9%8B%E5%8C%97%E5%AE%8B%E8%AF%97%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="一、词的产生"><a href="#一、词的产生" class="headerlink" title="一、词的产生"></a>一、词的产生</h4><h5 id="词的名称"><a href="#词的名称" class="headerlink" title="词的名称"></a>词的名称</h5><p>词是曲子词之简称，即有歌谱的歌词。清宋翔凤《乐府余论》云：“以文写之则为词，以声度之则为曲。”</p><a id="more"></a><p>王力先生定义为：词“是一种律化的、长短句的、固定字数的诗。”<br>乐府：词最初能合乐，故有此称。苏轼词称《东坡乐府》，欧阳修词称《近体乐府》，贺铸词称《东山寓声乐府》，元好问词称《遗山新乐府》。<br>长短句：因句子长短不齐，故有此称。秦观词称《淮海居士长短句》，辛弃疾词称《稼轩长短句》。<br>诗余：因它是在诗之后发展起来的，与近体诗有密切关系，故有此称。宋宁宗庆元间编有《草堂诗余》。<br>歌曲：姜夔词称《白石道人歌曲》。<br>乐章：柳永词称《乐章集》。<br>琴趣：黄山谷词称《山谷琴趣外编》。<br>语业：杨炎正词集称《西樵语业》。</p><h5 id="词的起源"><a href="#词的起源" class="headerlink" title="词的起源"></a>词的起源</h5><ol><li><p>或云南朝乐府里某些歌辞即其雏形。如梁武帝萧衍有七首乐府：《江南弄》、《龙笛》、《採莲》、《凤笙》《采菱》、《游女》、《朝云》。如梁武帝《江南弄》云：<br>众花杂色满上林，舒芳耀绿垂轻阴，连手躞蹀舞春心。<br>舞春心，临岁腴。中人望，独踟蹰。 </p></li><li><p>产生于隋代。此说较流行和普遍。张炎《词源》卷下也说：“粤自隋唐以来，声诗间为长短句。”南宋王灼《碧鸡漫志》卷一说：“盖隋以来，今之所谓曲子者渐兴。”如《河传》乃“炀帝将幸江都时所制”（《碧鸡漫志》），《杨柳枝》乃是“亡隋之曲，炀帝将幸江都，开汴河，种柳，至今曰隋堤，有是曲也。”（后蜀何光远《鉴戒录》）。</p></li><li><p>认为产生于唐代。如南宋朱弁《曲洧旧闻》说：“词起于唐人，而六代已滥觞矣。”<br>简要而论：词大约是在初盛唐时产生，词即歌词，它跟乐府歌辞的辞是一个字，本指一切可以合乐歌唱的诗体，当时称“曲子词”，后来简称为词。 </p></li></ol><h5 id="重要作家"><a href="#重要作家" class="headerlink" title="重要作家"></a>重要作家</h5><p>晚唐温庭筠是第一个大量写词的人，也是唐朝于词对后人影响最大的作家，对词的发展起了推动作用。存词70余首。是“花间派”词的先导。<br><strong>温庭筠</strong>（812?—866），本名岐，字飞卿，太原人。约48岁被授隋县尉，其后曾为幕府僚吏，任方城尉，至国子助教。年轻时苦心学文，才思敏捷，称“温八叉”。精通音律，善鼓琴吹笛，为侧艳之词。他喜纵酒放浪，一生不受羁束，喜讥刺权贵，不为时俗所重。屡试进士不第，一生坎坷、潦倒。<br>温词的风格以秾丽绵密为主，多用比兴，以景寓情。他的词乍看似乎堆垛晦涩，仔细玩味便觉情挚韵远，余味曲包。</p><p>菩萨蛮·词·唐·温庭筠<br>小山重叠金明灭，鬓云欲度香腮雪。懒起画娥眉，弄妆梳洗迟。<br>照花前后镜，花面交相映。新贴绣罗襦。双双金鹧鸪。</p><p><strong>李煜</strong>（937—978），南唐后主，字重光，他工书善画，洞晓音律，他对宋委曲求全十几年苟安江南，仍纵情声色游宴，令人所不怜。无道之君可仍得词道，为一慰耳。</p><p>破阵子·词·五代南唐·李煜<br>四十年来家国，三千里地山河。凤阁龙楼连霄汉，玉树琼枝作烟萝，几曾识干戈？<br>一旦归为臣虏，沈腰潘鬓消磨。最是仓皇辞庙日，教坊犹奏别离歌，垂泪对宫娥。</p><p><strong>欧阳炯</strong>（896—971），益州人，少事前蜀后主王衍为中书舍人，又事后蜀孟昶为任翰林学士，随孟昶降宋后，授为散骑常侍。</p><p>定风波·词·五代后蜀·欧阳炯<br>暖日闲窗映碧纱，小池春水浸晴霞。数树海棠红欲尽，争忍，玉闺深掩过年华。<br>独凭绣床方寸乱，肠断，泪珠穿破脸边花。邻舍女郎相借问，音信，教人羞道未还家。 </p><h4 id="二、北宋词概述"><a href="#二、北宋词概述" class="headerlink" title="二、北宋词概述"></a>二、北宋词概述</h4><p>经过隋、唐、五代近四百年间许多民间作者和文人作者的共同努力，词业已由出源时仅可滥觞的一泓清浅，演为初具波澜力能浮舟溶溶流川。进宋后，因创作队伍不断扩大，创作视野不断开阔，创作技巧不断变新，词之发展形成如江出三峡，一泻千里，吞天坼地，溅玉喷珠之势，挟五湖百渎之水而赴海朝宗。今存尚二万余篇，作者一千四百三十余家。仅从数字而言，词于宋足见鼎盛气象。<br>北宋建国之初便建立起一支庞大的以文职为主的官僚队伍，皆以厚禄优待，因而形成达官贵人蓄养家妓、文酒雅集之风。<br>北宋初期，词坛是贵族们的一统天下，代表人物有晏殊、欧阳修，他们皆为宰辅大臣，生活悠闲自得，令其词亦怀流连光景、感伤时序之情，词风仍近南唐，艺术造诣虽高，然因沿袭而减。到小晏以后，五代词风才算绝迹。<br>市民词起步较晚，亦是至仁宗柳永出，方是高潮。<br>北宋后期，王安石打破“诗言志”而“词言情”的题材分工，冲决“诗庄词媚”的风格划界。苏轼做得更进一步，真正做到对于词无意不可入，无事不可言。“如行云流水，初无定质，但常行于所当行，常止于所不可不止”（苏轼《答谢民师书》）。<br>苏轼后：一是晁补之学苏；二是黄庭坚不置可否，而暗中效苏；三是陈师道批苏；四是秦观出于对师之敬，不便指摘，只是埋头走“婉约”之路。 </p><h4 id="三、词家柳永"><a href="#三、词家柳永" class="headerlink" title="三、词家柳永"></a>三、词家柳永</h4><p>柳永（984?—1053?），原名三变，字耆卿，一字景庄，人称柳七，崇安人。景祐元年约五十岁才赐进士出身，官至屯田员外郎，也称柳屯田。有《乐章集》。 </p><p>柳永的叔叔寘、叔叔宏、哥哥三接、哥哥三复、儿子涚、侄子淇都是进士。他初到汴京应试，放榜时名落孙山。他沮丧愤激之余，写下名作《鹤冲天》（黄金榜上）：“忍把浮名，换了浅斟低唱”，“才子词人，自是白衣卿相”。仁宗初年再试，考试成绩本已过关，但由于《鹤冲天》词传到禁中，皇帝把他给黜落了，并批示：“此人好去‘浅斟低唱’，何要‘浮名’？且填词去。”柳永真的成了“奉旨填词柳三变”。50岁时，柳永才赐进士出身，短短两年仕途，由于政绩卓著，名姓就载入了《海内名宦录》中。柳永晚年穷愁潦倒，死时一贫如洗，棺椁暂时寄存于寺庙中，妓女们听说后捐款集资为其厚葬。后人有诗题柳永墓云：乐游原上妓如云，尽上风流柳七坟。可笑纷纷缙绅辈，怜才不及众红裙。</p><p>他是北宋初年第一位大量制作慢词的词人，增加了词的容量，对宋词的发展作出重要贡献。最长者如《戚氏》多至212字，《抛球乐》188字，为填制慢词拓宽了道路。</p><p>罗烨《醉翁谈录》丙集卷二：“耆卿居京华，暇日遍游妓馆。所至，妓者多以金物资给之。” 金主完颜亮读罢柳永《望海潮》一词，称赞杭州之美：“东南形胜，三吴都会，钱塘自古繁华……有三秋桂子，十里荷花”，“遂起投鞭渡江、立马吴山之志”。 北宋晁无咎：世言柳耆卿之曲俗，非也。如：“渐霜风凄惨，关河冷落，残照当楼。”真不减唐人语。南宋陈振孙：柳词格固不高，而音律谐婉，语意妥帖，承平气象，形容曲尽，尤工于羁旅行役。清宋翔凤：柳词曲折委婉，而中具浑沦之气，虽多俚语而高处足冠群流。清冯煦 ：耆卿词曲处能直，密处能疏，状难状之景，达难达之情，而出之以自然，自是北宋巨手。清郑文焯：屯田，北宋专家，其高浑处不减清真。长调尤能以沉雄之魄，清劲之气，写奇丽之情，作挥绰之声。清刘熙载：柳耆卿词，昔人比之杜诗，为其实说无表德也。余谓此论其体则然；若论其旨，少陵恐不许之。清陈延焯：意境不高，思路微左，失温、韦忠厚之意。清夏敬观：耆卿词，当分雅、俚二类。雅词用六朝小品文赋作法，层层铺叙，情景兼融，一笔到底，始终不懈。《四库提要》：盖词本管弦冶荡之音，而永所作旖旎近情，使人易入，虽颇以俗为病，然好之者终不绝耳。 </p><p>玉胡蝶·词·北宋·柳永<br>望处雨收云断，凭阑悄悄，目送秋光。晚景萧疏，堪动宋玉悲凉。水风轻、苹花渐老，月露冷、梧叶飘黄。遣情伤。故人何在，烟水茫茫。<br>难忘。文期酒会，几孤风月，屡变星霜。海阔天遥，未知何处是潇湘！念双燕、难凭远信，指暮天、空识归航。黯相望。断鸿声里，立尽斜阳。</p><p>婆罗门令·词·北宋·柳永<br>昨宵里、恁和衣睡，今宵里、又恁和衣睡。 小饮归来，初更过，醺醺醉。 中夜后、何事还惊起？霜天冷，风细细。触疏窗、闪闪灯摇曳。<br>空床展转重追想，云雨梦、任攲枕难继。 寸心万绪，咫尺千里。 好景良天，彼此空有相怜意，未有相怜计。 </p><p>锦堂春·词·北宋·柳永<br>坠髻慵梳，愁娥懒画，心绪是事阑珊。觉新来憔悴，金缕衣宽。认得这疏狂意下，向人诮譬如闲。把芳容整顿，恁地轻孤，争忍心安。<br>依前过了旧约，甚当初赚我，偷剪云鬟。几时得归来，香阁深关。待伊要、尤云殢雨，缠绣衾、不与同欢。尽更深、款款问伊，今后敢更无端。 </p><h4 id="四、词家苏轼"><a href="#四、词家苏轼" class="headerlink" title="四、词家苏轼"></a>四、词家苏轼</h4><p>苏轼（1036—1101）字子瞻，一字和仲，号东坡居士，眉州眉山人，存词三百五十余首。<br>苏轼的词题材广泛，记游、怀古、赠答、送别、说理无不入词，对严格的音律束缚也有所突破，促进了词的发展。名作有《念奴娇》、《水调歌头》等，开豪放词派的先河，与辛弃疾并称“苏辛”。</p><p>北宋陈无己：东坡小词似诗。北宋晁无咎：东坡居士词，人多谓不谐音律，然横放杰出，自是曲子中缚不住者。北宋胡仔：中秋词自东坡《水调歌头》一出，余词尽废。南宋陆游：取东坡词读之，曲终觉天风海雨逼人。南宋胡致堂：词曲至东坡，一洗绮罗香泽之态，摆脱绸缪宛转之度，使人登高望远，举首高歌，逸怀浩气，超乎尘垢之外。元张炎：东坡词清丽舒徐处高出人表，周、秦诸人所不能到。清周济：人赏东坡粗豪，吾赏东坡韶秀。韶秀是东坡佳处，粗豪则病也。清陈延焯：东坡寓意高远，运笔空虚，措语忠厚。其独至处，美成白石亦不能到。又曰：寄慨无端，别有天地，异样出色，只是人不能学。清朱依真：天风海雨骇心神，白石清空谒后尘。谁见东坡真面目，纷纷耳食说苏辛。清蔡嵩云：东坡词，胸有万卷，笔无点尘。其阔大处，不在能作豪放语，而在其襟怀有涵盖一切气象。若徒袭其外貌，何异东施效颦。东坡小令，清丽纡徐，雅人深致，另辟一境。设非胸襟高旷，焉能有此吐属。清刘熙载：东坡词颇似老杜诗，以其无意不可入，无事不可言也。若其豪放之致，则时与太白为近。《四库提要》：词自晚唐、五代以来，以清切婉丽为宗，至柳永而一变，至苏轼而又一变，遂开南宋辛弃疾一派。 </p><p>沁园春（赴密州马上寄子由）·词·北宋·苏轼<br>孤馆灯青，野店鸡号，旅枕梦残。渐月华收练，晨霜耿耿，云山摛锦，朝露漙漙。世路无穷，劳生有限，似此区区长鲜欢。微吟罢，凭征鞍无语，往事千端。当时共客长安。似二陆初来俱少年。有笔头千字，胸中万卷，致君尧舜，此事何难。用舍由时，行藏在我，袖手何妨闲处看。身长健，但优游岁月，且斗樽前。</p><p>江城子（密州出猎）·词·北宋·苏轼<br>老夫聊发少年狂。左牵黄，右擎苍。锦帽貂裘，千骑卷平冈。为报倾城随太守，亲射虎，看孙郎。<br>酒酣胸胆尚开张。鬓微霜，又何妨。持节云中，何日遣冯唐。会挽雕弓如满月，西北望，射天狼。 </p><h4 id="五、词家秦观"><a href="#五、词家秦观" class="headerlink" title="五、词家秦观"></a>五、词家秦观</h4><p>秦观（1049—1100）字太虚，后改字少游，别号邗沟居士，学者称淮海先生，江苏高邮人。其词远绍西蜀南唐，近受柳永形响，俊逸精妙，情韵兼胜，是“出色当行”的婉约派主要词人。词只有三卷100多首，而诗有十四卷430多首，文则达三十卷共250多篇，诗文相加，其篇幅远远超过词若干倍。词集名《淮海居士长短句》。</p><p>秦观在未仕期间大多在故乡高邮居家耕读，准备科举，然亦间有游历。神宗元丰二年，适逢苏轼。于在神宗元丰八年在第三次科考中考取进士，步上仕宦之途。因其亲附苏轼，被视为旧党，故与苏轼命运雷同，接二连三的被贬。 徽宗即位，秦观命复宣德郎，放还至滕州，索水而卒。张文潜曾作《祭秦少游文》云：“呜呼！官不过正字，年不登下寿。间关忧患，横得骂诟。窜身瘴海，卒仆荒陋。” </p><p>北宋晁补之：近来作者，皆不及少游，如“斜阳外，寒鸦数点，流水绕孤村”，虽不识字者，亦知是天生的好言语也。宋叶梦得：少游乐府，语工而入律，知乐者谓之作家。宋蔡伯世：子瞻辞胜乎情，耆卿情胜乎辞，情辞相称者，少游一人而已。宋李易安：秦词专言情致而少故实，避如贫家美女，虽妍丽丰逸，而终乏富贵态。元张炎：秦少游词，体制淡雅，气骨不衰，清丽中不断意脉，咀嚼无滓，久而知味。清陈廷焯：秦少游自是作手，近开美成，导其先路。远祖温、韦，取其神不袭其貌，词至是乃一变焉。清周济：少游正以平易近人,故用力者终不能到。将身世之感，打并入艳情，又是一法。少游最和婉醇正，稍逊清真者，辣耳。少游意在含蓄，如花初胎，故少重笔。 清冯煦：少游词其淡语皆有味，浅语皆有致。又说：少游词寄慨身世，闲雅有情思，酒边花下，一往而深，而怨悱不乱，悄悄乎得小雅之遗。后主而后，一人而已。又说：他人之词，词才也。少游词心也。得之于内，不可以传。</p><p>满庭芳·词·北宋·秦观</p><p>山抹微云，天连衰草，画角声断谯门。暂停征棹，聊共引离尊。多少蓬莱旧事，空回首、烟霭纷纷。斜阳外，寒鸦万点，流水绕孤村。</p><p>消魂当此际，香囊暗解，罗带轻分。谩赢得青楼薄幸名存。此去何时见也？襟袖上、空惹啼痕。伤情处，高城望断，灯火已黄昏。 </p><h4 id="六、词家周邦彦"><a href="#六、词家周邦彦" class="headerlink" title="六、词家周邦彦"></a>六、词家周邦彦</h4><p>周邦彦（1056—1121）字美成，号清真居士，钱塘人。少年落魄不羁，后因向神宗献《汴都赋》万余言，被擢为太学正。微宗颁布大晟乐，召邦彦提兴大晟府。他精通音律，能自度曲，词律细密。词风浑厚和雅，富艳精工，极铺陈之能事。今存词二百零六首。</p><p>刘肃：周美成以旁搜远绍之才，寄情长短句，缜密典丽，流风可仰。其征辞引类，推古夸今，或借字用意，言言皆有来历，真足冠冕词林。张炎：美成词只当浑成处，于软媚中有气魄，采唐诗融化如己出。周济：美成思力，独绝千古，如颜平原书，虽未臻两晋，而唐初之法，至此大备。后有作者，莫能出其范围矣。又曰：沉痛至极，仍能含蓄。王国维：美成深远之致，不及欧、秦，唯言情体物，穷极工巧，故不失为第一流之作者。但惟创调之才多，创意之才少耳。</p><p>过秦楼·词·北宋·周邦彦</p><p>水浴清蟾，叶喧凉吹，巷陌马声初断。闲依露井，笑扑流萤，惹破画罗轻扇。人静夜久凭阑，愁不归眠，立残更箭。叹年华一瞬，人今千里，梦沉书远。</p><p>空见说、鬓怯琼梳，容销金镜，渐懒趁时匀染。梅风地溽，虹雨苔滋，一架舞红都变。谁信无聊为伊，才减江淹，情伤荀倩。但明河影下，还看稀星数点。  </p><h4 id="七、北宋诗综述"><a href="#七、北宋诗综述" class="headerlink" title="七、北宋诗综述"></a>七、北宋诗综述</h4><p>北宋初期的诗歌创作基本上还承绪中、晚唐诗风，尚未形成自己的独特面貌。这一时期，先后出现了三个不同的创作流派，一般称为“宋初三体”。最初兴起的是推重白居易的白体。稍后兴起的是模仿贾岛、姚合的晚唐体，创作刻意求工，内容多抒写幽远枯寂的隐逸生活。接着又出现了效法李商隐的西昆体，雍容典雅，形式华美，多粉饰太平之作，使当时的诗风为之一变。总的看来成就并不甚高。<br>北宋中期，随着欧阳修等人发起的诗文革新运动的到来，宋诗终于发生了较大规模的转型，并步入成熟、繁荣期，其后王安石、苏轼续出，从此以后，唐音、宋调判然有别。<br>活跃在北宋后期诗坛的，主要是追随苏轼和受苏轼影响的一些作家。但他们的诗歌主张和艺术风格，却与苏轼判然有别，其中黄庭坚、陈师道成就较高。<br>到了北宋末年南宋初期，在黄庭坚的影响下，就形成了所谓的江西诗派，成为两宋之交诗坛上最重要的现象。  </p><h4 id="八、诗人王安石"><a href="#八、诗人王安石" class="headerlink" title="八、诗人王安石"></a>八、诗人王安石</h4><p>王安石的诗歌，大致可以罢相划界而分为前、后期，在内容和风格上有较明显的区别。“王荆公少以意气自许，故诗语惟其所向，不复更为涵蓄……博观而约取，晚年始尽深婉不迫之趣”（北宋叶梦得《石林诗话》）。<br>前期的诗歌，长于说理。后期的隐居生活，流连陶醉于山水田园中，抒发一种闲恬的情趣。“雅丽精绝，脱去流俗，每讽味之，便沉沆瀣生牙颊间”（北宋陈师道《后山诗话》载黄鲁直语）。<br>古体诗多用典故，好发议论，立意新颖，想象丰富。律诗则用字工稳，对偶贴切，但有时不免失于过多的雕刻。五绝和七绝尤负盛誉，“王半山备众体，精绝句”（清顾嗣立《寒厅诗话》），“荆公绝句妙天下”（南宋曾季狸《艇斋诗话》）。他的诗对当代和后世都有影响，被称为“王荆公体”（南宋严羽《沧浪诗话》）。</p><p>泊船瓜州·七绝·北宋·王安石<br>京口瓜州一水间，钟山只隔数重山。<br>春风又绿江南岸，明月何时照我还？</p><p>西太一宫壁·六绝·北宋·王安石<br>其一：<br>柳叶鸣蜩绿暗，荷花落日红酣。三十六陂春水，白头想见江南。<br>其二：<br>三十年前此地，父兄持我东西。今日重来白首，欲寻陈迹都迷。 </p><p>苏轼《西太一见王荆公旧诗，偶次其韵二首》<br>秋早川原净丽，雨余风日晴酣。从此归耕剑外，何人送我池南！<br>但有樽中若下，何须墓上征西？闻道乌衣巷口，而今烟草凄迷！</p><p>黄庭坚《次韵王荆公题西太一宫壁二首》<br>风急啼乌未了，雨来战蚁方酣。真是真非安在？人间北看成南。<br>晚风池莲香度，晓日宫槐影西。白下长干梦到，青门紫曲成迷。</p><p>明妃曲第一首·七绝·北宋·王安石<br>明妃初出汉宫时，泪湿春风鬓脚垂。<br>低徊顾影无颜色，尚得君王不自持。<br>归来却怪丹青手，入眼平生未曾有。<br>意态由来画不成，当时枉杀毛延寿。<br>一去心知更不归，可怜着尽汉宫衣。<br>寄声欲问塞南事，只有年年鸿雁飞。<br>家人万里传消息，好在毡城莫相忆!<br>君不见咫尺长门闭阿娇，人生失意无南北。<br>明妃曲第二首·七绝·北宋·王安石<br>明妃初嫁与胡儿，毡车百辆皆胡姬。<br>含情欲语独无处，传与琵琶心自知。<br>黄金杆拨春风手，弹看飞鸿劝胡酒。<br>汉宫侍女暗垂泪，沙上行人却回首。<br>汉恩自浅胡恩深，人生乐在相知心。<br>可怜青冢已芜没，尚有哀弦留至今。</p><p>王安石·七绝·本朝·褚宝增<br>金陵已冠九州名，合契神宗方有成。<br>初若便逢高太后，也如奉旨柳耆卿。</p><h4 id="九、诗人苏轼"><a href="#九、诗人苏轼" class="headerlink" title="九、诗人苏轼"></a>九、诗人苏轼</h4><p>苏轼的诗大都抒写仕途坎坷的感慨，也有反映民生疾苦、揭露现实黑暗之作。诗风豪迈清新，尤长于比喻。与黄庭坚并称“苏黄”。<br>对社会的干预和对人生的思考，乐观旷达的精神，对艺术技巧的娴熟运用和超越，有必达之隐而无难显之情，刚柔相济的艺术风格是宋诗成就的代表。<br>苏轼曾自称：“言发于心而冲于口，吐之则逆人，茹之则逆余。以为宁逆人也，故卒吐之。”（《思堂记》）<br>苏轼学博才高，用典过多，总体稳妥精当，浑然天成，达到了如水中着盐的妙境。对仗精工活泼，不落俗套。清赵翼评苏诗说：“天生健笔一枝，爽如哀梨，快如并剪，有必达之隐，无难显之情，此所以继李、杜后为一大家也。”（《瓯北诗话》）<br>就风格个性的突出、鲜明而言，王安石、黄庭坚、陈师道三家也许比苏轼诗更引人注目。然而论创作成就，则苏轼无疑是北宋诗坛之巨手。</p><p>花影·七绝·北宋·苏轼<br>重重叠叠上瑶台，几度呼童扫不开。<br>刚被太阳收拾去，又叫明月送将来。<br>惠崇春江晚景·七绝·北宋·苏轼<br>竹外桃花三两枝，春江水暖鸭先知。<br>蒌蒿满地芦芽短，正是河豚欲上时。<br>其二：<br>两两归鸿欲破群，依依还似北归人。<br>遥知朔漠多风雪，更待江南半月春。</p><p>和子由渑池怀旧·七律·北宋·苏轼<br>人生到处知何似，应似飞鸿踏雪泥。<br>泥上偶然留指爪，鸿飞那复计东西。<br>老僧已死成新塔，坏壁无由见旧题。<br>往日崎岖还记否，路长人困蹇驴嘶。 </p><p>正月二十日与潘郭二生出郊寻春忽记去年是日同至女王城作诗乃和前韵·七绝·北宋·苏轼<br>东风未肯入东门，走马还寻去岁村。<br>人似秋鸿来有信，事如春梦了无痕。<br>江城白酒三杯醉，野老苍颜一笑温。<br>已约年年为此会，故人不用赋招魂。</p><h4 id="十、诗人黄庭坚"><a href="#十、诗人黄庭坚" class="headerlink" title="十、诗人黄庭坚"></a>十、诗人黄庭坚</h4><p>黄庭坚（1045—1105），字鲁直，号山谷道人，又号涪翁。洪州分宁人。</p><p>治平四年进士，以校书郎为《神宗实录》检讨官，迁著作佐郎。后以修实录不实，遭到贬谪。</p><p>黄庭坚为苏门四学士之一，是江西诗派的开山祖师，生前与苏轼齐名，世称“苏黄”。在创作上，黄庭坚奉行“自作语最难，老杜作诗，退之作文，无一字无来处”，“虽取古人之陈言入于翰墨，如灵丹一粒，点铁成金也”。《冷斋夜话》载黄庭坚“夺胎换骨”之法，被江西诗派效法，在宋代影响颇大。 黄庭坚发展了韩愈、杜甫偶一为之的拗句、拗律，以音调反常，句法变更强化诗的拗峭挺拔。此避熟就生，翻新出奇的诗法，在矫正了晚唐、西昆的熟滑丽靡同时，自己也病入膏肓，致使诗风晦涩生硬。后之入派弟子，皆无大成，足以说明黄庭坚作诗之法本非正途。黄庭坚工书法，兼擅行、草，为宋四家之一。</p><p>题落星寺四首之三·七律·北宋·黄庭坚<br>落星开士深结屋，龙阁老翁来赋诗。<br>小雨藏山客坐久，长江接天帆到迟。<br>宴寝清香与世隔，画图绝妙无人知。<br>蜂房各自开户牖，处处煮茶藤一枝。 </p><p>寄黄几复·七律·北宋·黄庭坚<br>我居北海君南海，寄雁传书谢不能。<br>桃李春风一杯酒，江湖夜雨十年灯。<br>持家但有四立壁，治病不蕲三折肱。<br>想得读书头已白，隔溪猿哭瘴溪藤。 </p><h4 id="以上内容均来自褚宝增老师讲义"><a href="#以上内容均来自褚宝增老师讲义" class="headerlink" title="以上内容均来自褚宝增老师讲义"></a>以上内容均来自褚宝增老师讲义</h4></font></html>]]></content>
      
      
      <categories>
          
          <category> 古典文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 古典文学史 </tag>
            
            <tag> 诗词 </tag>
            
            <tag> 北宋 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国古典文学史之中晚唐诗</title>
      <link href="/2019/11/13/%E4%B8%AD%E5%9B%BD%E5%8F%A4%E5%85%B8%E6%96%87%E5%AD%A6%E5%8F%B2%E7%95%A5%E4%B9%8B%E4%B8%AD%E6%99%9A%E5%94%90%E8%AF%97/"/>
      <url>/2019/11/13/%E4%B8%AD%E5%9B%BD%E5%8F%A4%E5%85%B8%E6%96%87%E5%AD%A6%E5%8F%B2%E7%95%A5%E4%B9%8B%E4%B8%AD%E6%99%9A%E5%94%90%E8%AF%97/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><p><strong>中唐（762—827）    晚唐（827—859）</strong><a id="more"></a></p><h4 id="一、元稹"><a href="#一、元稹" class="headerlink" title="一、元稹"></a>一、元稹</h4><p>元稹（779—831），字微之，别字威明，洛阳人。</p><p>8岁丧父，少经贫贱，15岁以明两经擢第，21岁初仕河中府，25岁登书判拔萃科，授秘书省校书郎。28岁列才识兼茂明于体用科第一名，授左拾遗。元和四年为监察御史。因触犯宦官权贵，次年贬江陵府士曹参军，后历通州司马、虢州长史。元和十四年任膳部员外郎，次年靠宦官崔潭峻援引，擢祠部郎中、知制诰。长庆元年迁中书舍人，充翰林院承旨，次年，居相位三月，出为同州刺史、浙东观察使。大和三年为尚书左丞，大和五年，逝于武昌军节度使任上。</p><p><strong>元稹的创作，以诗成就最大，与白居易齐名，并称“元白”。是“次韵相酬”的创始者，韵同而意殊。</strong>乐府诗在元诗中占有重要地位，他的《和李校书新题乐府十二首并序》，启发了白居易创作新乐府 。<br><strong>元诗中最具特色和成就的是悼亡诗</strong>，超今冠古！</p><p>离思·七绝·唐·元稹<br>曾经沧海难为水，除却巫山不是云。<br>取次花丛懒回顾，半缘修道半缘君。 </p><p>遣悲怀其一·七律·唐·元稹<br>谢公最小偏怜女，自嫁黔娄百事乖。<br>顾我无衣搜荩箧，泥他沽酒拔金钗。<br>野蔬充膳甘长藿，落叶添薪仰古槐。<br>今日俸钱过十万，与君营奠复营斋。 </p><p>连昌宫词·歌行·唐·元稹 </p><p>连昌宫中满宫竹，岁久无人森似束。又有墙头千叶桃，风动落花红蔌蔌。</p><p>宫边老翁为余泣：小年进食曾因入。上皇正在望仙楼，太真同凭阑干立。</p><p>楼上楼前尽珠翠，炫转荧煌照天地。归来如梦复如痴，何暇备言宫里事。</p><p>初届寒食一百六，店舍无烟宫树绿。夜半月高弦索鸣，贺老琵琶定场屋。</p><p>力士传呼觅念奴，念奴潜伴诸郎宿。须臾觅得又连催，特赦街中许然烛。</p><p>春娇满眼睡红绡，掠削云鬓旋装束。飞上九天歌一声，二十五郎吹管逐。</p><p>逡巡大遍凉州彻，色色龟兹轰录续。李谟按笛傍宫墙，偷得新翻数般曲。</p><p>平明大驾发行宫，万人歌舞途路中。百官队仗避岐薛，杨氏诸姨车斗风。</p><p>明年十月东都破，御路犹存禄山过。驱令供顿不敢藏，万姓无声泪潜堕。</p><p>两京定后六七年，却寻家舍行宫前。庄园烧尽有枯井，行宫门闭树宛然。</p><p>尔后相传六皇帝，不到离宫门久闭。往来年少说长安，玄武楼成花萼废。</p><p>去年敕使因斫竹，偶值门开暂相逐。荆榛栉比塞池塘，狐兔骄痴缘树木。</p><p>舞榭欹倾基尚在，文窗窈窕纱犹绿。尘埋粉壁旧花钿，乌啄风筝碎珠玉。</p><p>上皇偏爱临砌花，依然御榻临阶斜。蛇出燕巢盘斗拱，菌生香案正当衙。</p><p>寝殿相连端正楼，太真梳洗楼上头。晨光未出帘影动，至今反挂珊瑚钩。</p><p>指似傍人因恸哭，却出宫门泪相续。自从此后还闭门，夜夜狐狸上门屋。</p><p>我闻此语心骨悲，太平谁致乱者谁？翁言野父何分别，耳闻眼见为君说。</p><p>姚崇宋璟作相公，劝谏上皇言语切。分理阴阳禾黍丰，调和中外无兵戎。</p><p>长官清平太守好，拣选皆言由至公。开元之末姚宋死，朝廷渐渐由妃子。</p><p>禄山宫里养作儿，虢国门前闹如市。弄权宰相不记名，依稀忆得杨与李。</p><p>庙谟颠倒四海摇，五十年来作疮痏。今皇神圣丞相明，诏书才下吴蜀平。</p><p>官军又取淮西贼，此贼亦除天下宁。年年耕种宫前道，今年不遣子孙耕。</p><p>老翁此意深望幸，努力庙谟休用兵。</p><h4 id="二、白居易"><a href="#二、白居易" class="headerlink" title="二、白居易"></a>二、白居易</h4><p>白居易（772—846），字乐天，号香山居士，祖籍太原。著有《白氏长庆集》71卷。</p><p>白居易童年聪颖过人，读书十分刻苦，读得口生疮，手出茧，年纪轻轻，头发花白。元和元年试才识兼茂明于体用科，及第。次年，任进士考官、集贤校理，授翰林学士。元和十年宰相武元衡遇刺身亡，被贬为江州司马。长庆元年，加朝散大夫，又转中书舍人。长庆二年，上书论河北军事，不被采用，请求外放，为杭州刺史。大和元年至长安任秘书监，大和四年任河南尹。晚年官至太子少傅，谥号“文”，世称白傅、白文公。 </p><p>唐宣宗李忱：<br>缀玉联珠六十年，谁教冥路作诗仙？<br>浮云不系名居易，造化无为字乐天。<br>童子解吟长恨曲，胡儿能唱琵琶篇。<br>文章已满行人耳，一度思卿一怆然。</p><p><strong>文学主张：文章合为时而著，诗歌合为事而作。</strong><br>把诗比作果树：根情、苗言、华声、实义（《与元九书》）。<br>诗歌表现方法：1.“辞质而径”，辞句质朴，表达直率；2.“言直而切”，直书其事，切近事理；3.“事核而实”，内容真实，有案可稽；4.“体顺而肆”，文字流畅，易于吟唱（《新乐府序》）。<br>诗歌分类：讽谕、闲适、感伤和杂律四大类。<br>白居易和李白、杜甫一样，也嗜酒成性。<br>南宋方勺《泊宅编》卷上说：二千八百首诗中，饮酒者八百首。<br>元稹用世之心较白居易更强烈。清贺裳在其《载酒园诗话·又编·元稹》中说：“诗至元白，实又一大变，两人难并称，亦各有不同。选语之工，白不如元；波澜之阔，元不如白。白苍茫中间有古调，元精工处亦杂新声。既由风气转移，亦自才质有限。”明陆时雍《诗镜总论》云：“微之多深着色，乐天多浅着趣。”<br>白居易在《和微之诗二十三首并序》中不无自豪与自负地说：“其为敌也，当今不见；其为多也，从古未闻。所谓天下英雄，唯使君与操耳！”  </p><p>问刘十九·五绝·唐·白居易<br>绿蚁新醅酒，红泥小火炉。晚来天欲雪，能饮一杯无。</p><p>醉封诗筒寄微之·七律·唐·白居易<br>一生休戚与穷通，处处相随事事同。<br>未死又邻沧海郡，无儿俱作白头翁。<br>展眉只仰三杯后，代面唯凭五字中。<br>为向两州邮吏道，莫辞来去递诗筒。</p><p>暮江吟·七绝·唐·白居易<br>一道残阳铺水中，半江瑟瑟半江红。<br>可怜九月初三夜，露似真珠月似弓。</p><p>自河南经乱,关内阻饥,兄弟离散,各在一处.因望月有感,聊书所怀,寄上浮梁大兄,于潜七兄,乌江十五兄,兼示符离及下邽弟妹·七律·唐·白居易<br>时难年荒世业空，弟兄羁旅各西东。<br>田园寥落干戈后，骨肉流离道路中。<br>吊影分为千里雁，辞根散作九秋蓬。<br>共看明月应垂泪，一夜乡心五处同。</p><h4 id="三、刘禹锡"><a href="#三、刘禹锡" class="headerlink" title="三、刘禹锡"></a>三、刘禹锡</h4><p>刘禹锡（772?—842?），字梦得，晚年自号庐山人，汉族，洛阳人，自言系出中山。</p><p>贞元九年（793年21岁），进士及第，初在淮南节度使杜佑（杜牧祖父，后及相位）幕府中任记室，为杜佑所器重，后从杜佑入朝，为监察御史。贞元末，与柳宗元等参加了以王叔文为首的政治革新集团，146天失败后，王叔文被杀，刘禹锡遭贬。后历任朗州司马、连州刺史、夔州刺史、和州刺史、礼部郎中、苏州刺史、检校礼部尚书。卒年七十，赠户部尚书。<br>由于性格刚毅，有豪猛之气，在谪居的岁月里，感到沉重的心理苦闷，吟出了一曲曲孤臣的哀唱，但他始终不曾绝望，有着一个斗士的灵魂。无论短章长篇，大都简洁明快，风情俊爽。<br><strong>刘禹锡诗文俱佳，与柳宗元并称“刘柳”，与白居易合称“刘白”。</strong></p><p>西塞山怀古·七律·唐·刘禹锡<br>王濬楼船下益州，金陵王气黯然收。<br>千寻铁锁沉江底，一片降幡出石头。<br>人世几回伤往事，山形依旧枕寒流。<br>今逢四海为家日，故垒萧萧芦荻秋。</p><h4 id="四、李贺"><a href="#四、李贺" class="headerlink" title="四、李贺"></a>四、李贺</h4><p>李贺（790—817），字长吉，河南福昌人，享年仅27岁。<br>20岁到长安参加科举考试，因父名晋肃，“晋”“进”同音，以冒犯父名取消他的考试资格。<br>其诗调高气峻，或如云崩雪涌，奇峭浪漫；或如明霞秀月，清丽璀璨。经常应用神话传说来托古寓今，在想象的奇特、构思的精巧、语言的精辟等方面，在中唐别树一帜。</p><p>金铜仙人辞汉歌并序·歌行·唐·李贺<br>序：魏明帝青龙元年八月，诏宫官牵车西取汉孝武捧露盘仙人，欲立致前殿。宫官既拆盘，仙人临载，乃潸然泪下。唐诸王孙李长吉遂作《金铜仙人辞汉歌》。<br>茂陵刘郎秋风客，夜闻马嘶晓无迹。<br>画栏桂树悬秋香，三十六宫土花碧。<br>魏官牵车指千里，东关酸风射眸子。<br>空将汉月出宫门，忆君清泪如铅水。<br>衰兰送客咸阳道，天若有情天亦老。<br>携盘独出月荒凉，渭城已远波声小。 </p><p>北宋石延年赠友联：<br>天若有情天亦老，月如无恨月常圆。</p><p>北宋孙洙《何满子·秋怨》：<br>怅惘浮生急景，凄凉宝瑟馀音。楚客多情偏怨别，碧山远水登临。目送连天衰草，夜阑几处疏砧。<br>黄叶无风自落，秋云不雨常阴。天若有情天亦老，摇摇幽恨难禁。惆怅旧欢如梦，觉来无处追寻。</p><p>北宋欧阳修《减字木兰花》：<br>伤怀离抱，天若有情天亦老。此意如何，细似轻丝渺似波。<br>扁舟岸侧，枫叶荻花秋索索。细想前欢，须著人间比梦间。 </p><p>北宋贺铸《行路难·梅花引》<br>缚虎手。悬河口。车如鸡栖马如狗。白纶巾。扑黄尘。不知我辈，可是蓬蒿人。衰兰送客咸阳道。天若有情天亦老。作雷颠。不论钱。谁问旗亭，美酒斗十千。<br>酌大斗。更为寿。青鬓常青古无有。笑嫣然。舞翩然。当垆秦女，十五语如弦。遗音能记秋风曲。事去千年犹恨促。揽流光。系扶桑。争奈愁来，一日却为长。</p><p>毛泽东《人民解放军占领南京》<br>钟山风雨起苍黄，百万雄师过大江。<br>虎踞龙盘今胜昔，天翻地覆慨而慷。<br>宜将剩勇追穷寇，不可沽名学霸王。<br>天若有情天亦老，人间正道是沧桑。 </p><h4 id="五、许浑"><a href="#五、许浑" class="headerlink" title="五、许浑"></a>五、许浑</h4><p><strong>唐律诗凸峰有五：李世民使律诗生，杜审言使律诗成，杜甫使律诗盛，许浑使律诗工，李商隐使律诗精。</strong></p><p>字用晦，一作仲晦。润州丹阳人。生卒年不详。大和六年进士。任当涂、太平县令。大中三年,为监察御史，“抱疾不任朝谒，坚乞东归”（《乌丝阑诗自序》），居润州丁卯村舍。后复起为润州司马。历虞部员外郎，睦、郢二州刺史，世称许郢州。晚年退居丁卯村舍，辑缀诗作，因名《丁卯集》。</p><p><strong>许浑以登临怀古见长。其诗现存500首左右，无一首古体。他喜欢将律句三字尾的声调改为“仄平仄”对“平仄平”，以显示拗峭变化，为后人所仿效，称作“丁卯句法”。</strong></p><p>咸阳城西楼晚眺·七律·唐·许浑<br>一上高城万里愁。蒹葭杨柳似汀洲。<br>溪云初起日沉阁。山雨欲来风满楼。<br>鸟下绿芜秦苑夕。蝉鸣黄叶汉宫秋。<br>行人莫问当年事。故国东来渭水流。</p><p>秋日赴阙题潼关驿楼·五律·唐·许浑<br>红叶晚萧萧，长亭酒一瓢。残云归太华，疏雨过中条。<br>树色随关迥，河声入海遥。帝乡明日到，犹自梦渔樵。</p><p>途经秦始皇墓·七绝·唐·许浑<br>龙盘虎踞树层层，势入浮云亦是崩。<br>一种青山秋草里，路人唯拜汉文陵。</p><h4 id="六、杜牧"><a href="#六、杜牧" class="headerlink" title="六、杜牧"></a>六、杜牧</h4><p>杜牧（803—853），字牧之，京兆万年人，是宰相杜佑之孙。</p><p>大和二年举进士，因为人秉性刚直，被人排挤，在江西、宣歙、淮南诸使幕作了十年幕僚。开成三年内迁为京官，后受宰相李德裕排挤，出为黄州、池州等刺使。李德裕失势，内调为司勋外郎。官终中书舍人。享年50岁。<br>杜牧读书注意“治乱兴亡之迹，财赋兵甲之事，地形之险易远近，古人之长短得失”。<br>《郡斋独酌》中言：“岂为妻子计，未去山森藏？平生五色线，愿补舜衣裳” 。<br>文学主张：凡为文以意为主，以气为辅，以辞采章句为之兵卫。<br>清刘熙载：其诗雄姿英发，细读杜牧，人如其诗，个性张扬，如鹤舞长空，俊朗飘逸。近体诗文词清丽、情韵跌宕。古体诗题材广阔，笔力峭健。<br><strong>在诗歌创作上，与李商隐齐名，并称小李杜。</strong>有《樊川集》传世。 </p><p>江南春·七绝·唐·杜牧<br>千里莺啼绿映红，水村山郭酒旗风。<br>南朝四百八十寺，多少楼台烟雨中。</p><p>泊秦淮·七绝·唐·杜牧<br>烟笼寒水月笼沙，夜泊秦淮近酒家。<br>商女不知亡国恨，隔江犹唱后庭花。</p><p>题乌江亭·七绝·唐·杜牧<br>胜败兵家事不期，包羞忍耻是男儿。<br>江东子弟多才俊，卷土重来未可知。</p><p>题宣州开元寺水阁阁下有溪夹溪居人·七律·唐·杜牧<br>六朝文物草连空。天淡云闲今古同。<br>鸟去鸟来山色里。人歌人哭水声中。<br>深秋帘幕千家雨。落日楼台一笛风。<br>惆怅无因见范蠡。参差烟树五湖东。 </p><h4 id="七、李商隐"><a href="#七、李商隐" class="headerlink" title="七、李商隐"></a>七、李商隐</h4><p>李商隐（813—858）字义山，号玉溪生，怀洲河内人。</p><p>初学古文，18岁以文才得到牛僧孺党令孤楚的赏识，改从令孤楚学骈文章奏，以令狐綯之力24岁举进士。李德裕党的泾原节度使王茂元爱其才，以女妻之。因此受牛党排挤，辗转于各藩镇幕府，终身不得志。<br><strong>李商隐诗现存约600首。其中政治诗咏史诗感慨讽谕，颇有深度和广度。无题诗是李商隐的独创。</strong></p><p>隋宫·七律·唐·李商隐<br>紫泉宫殿锁烟霞。欲取芜城作帝家。<br>玉玺不缘归日角。锦帆应是到天涯。<br>于今腐草无萤火。终古垂杨有暮鸦。<br>地下若逢陈后主。岂宜重问后庭花。</p><p>马嵬·七律·唐·李商隐<br>海外徒闻更九州，他生未卜此生休。<br>空闻虎旅传宵柝，无复鸡人报晓筹。<br>此日六军同驻马，当时七夕笑牵牛。<br>如何四纪为天子，不及卢家有莫愁。</p><p>晚晴·五律·唐·李商隐<br>深居俯夹城，春去夏犹清。天意怜幽草，人间重晚晴。<br>并添高阁迥，微注小窗明。越鸟巢干后，归飞体更轻。</p><p>蝉·五律·唐·李商隐<br>本以高难饱，徒劳恨费声。五更疏欲断，一树碧无情。<br>薄宦梗犹泛，故园芜已平。烦君最相警，我亦举家清。</p><p>夜雨寄北·七绝·唐·李商隐<br>君问归期未有期，巴山夜雨涨秋池。<br>何当共剪西窗烛，却话巴山夜雨时。</p><p>杜司勋·七绝·唐·李商隐<br>高楼风雨感斯文，短翼差池不及群。<br>刻意伤春复伤别，人间惟有杜司勋。</p><h4 id="八、皮日休"><a href="#八、皮日休" class="headerlink" title="八、皮日休"></a>八、皮日休</h4><p>皮日休（834?—883?），字逸少，后改字袭美，自号鹿门子，又号间气布衣、醉吟先生，襄阳人。</p><p>出身贫寒，懿宗咸通八年以榜末登进士第，<strong>与陆龟蒙唱和，“皮陆”并称</strong>，后入朝为太常博士。约于878年左右，参加黄巢义军。黄巢入长安称帝，他做翰林学士，黄巢兵败，可能亡于此间。</p><p>汴河怀古·七绝·唐·皮日休<br>尽道隋亡为此河，至今千里赖通波。<br>若无水殿龙舟事，共禹论功不较多。</p><p>橡媪叹·五古·唐·皮日休<br>秋深橡子熟，散落榛芜岗。伛偻黄发媪，拾之践晨霜。<br>移时始盈掬，尽日方满筐。几曝复几蒸，用作三冬粮。<br>山前有熟稻，紫穗袭人香。细获又精舂，粒粒如玉珰。<br>持之纳于官，私室无仓箱。如何一石余，只作五斗量？<br>狡吏不畏刑，贪官不避赃。农时作私债，农毕归官仓。<br>自冬及于春，橡实诳饥肠。吾闻田成子，诈仁犹自王。<br>吁嗟逢橡媪，不觉泪沾裳。</p><p>鹿门隐书·散文·唐·皮日休<br>古之杀人者，怒；今之杀人者，笑。古之置吏也，将以逐盗；今之置吏也，将以为盗。古之官人也，以天下为己累，故己忧之；今之官人也，以己为天下累，故人忧之。</p><h4 id="以上内容均来自褚宝增老师讲义"><a href="#以上内容均来自褚宝增老师讲义" class="headerlink" title="以上内容均来自褚宝增老师讲义"></a>以上内容均来自褚宝增老师讲义</h4></font></html>]]></content>
      
      
      <categories>
          
          <category> 古典文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 古典文学史 </tag>
            
            <tag> 唐朝 </tag>
            
            <tag> 诗词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国古典文学史之初盛唐诗</title>
      <link href="/2019/11/13/%E4%B8%AD%E5%9B%BD%E5%8F%A4%E5%85%B8%E6%96%87%E5%AD%A6%E5%8F%B2%E7%95%A5%E4%B9%8B%E5%88%9D%E7%9B%9B%E5%94%90%E8%AF%97/"/>
      <url>/2019/11/13/%E4%B8%AD%E5%9B%BD%E5%8F%A4%E5%85%B8%E6%96%87%E5%AD%A6%E5%8F%B2%E7%95%A5%E4%B9%8B%E5%88%9D%E7%9B%9B%E5%94%90%E8%AF%97/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><p><strong>初唐（618—712）    盛唐（712—762）</strong> <a id="more"></a></p><h4 id="一、杜审言"><a href="#一、杜审言" class="headerlink" title="一、杜审言"></a>一、杜审言</h4><p>杜审言（645？—708），字必简，河南巩县人，杜甫之祖父，西晋开国征南将军杜预10世孙。与同时的沈佺期、宋之问齐名，与李嶠、苏味道、崔融称文章四友，对律诗的定型作出了杰出的贡献。</p><p>《新唐书·杜审言传》载：尝语人曰：“吾文章当得屈、宋作衙官，吾笔当得王羲之北面。”其矜诞类此。累迁洛阳丞，坐事贬吉州司户参军。司马周季重、司户郭若讷构其罪，系狱，将杀之。季重等酒酣，审言子并年十三，袖刃刺季重于座，左右杀并。季重将死，曰：“审言有孝子，吾不知，若讷故误我。”审言免官，还东都。苏（廷页）伤并孝烈，志其墓，刘允济祭以文。审言病甚，宋之问、武平一等省候何如，答曰：“甚为造化小儿相苦，尚何言？然吾在，久压公等，今且死，固大慰，但恨不见替人”云。</p><p>北宋王得臣《麈史·诗话部》：杜审言“绾雾青条弱，牵风紫蔓长”，又“寄语洛城风与月，明年春色倍还人”。子美“林花著雨胭脂落，水荇牵风翠带长”，又“传语风光共流转，暂时相赏莫相违”，虽不袭其意，而语脉盖有家风矣。<br>南宋陈振孙《直斋书录解题·诗集类》：唐初沈、宋以来，律诗始盛行，然未以平侧失眼为忌。审言诗虽不多，句律极严，无一失粘者。甫之家传有自来矣，然遂欲衙官屈、宋，则不可也。<br>明胡应麟《诗薮》内篇：初唐五言律，“独有宦游人”第一。初唐无七言律，五言亦未超然。二体之妙，杜审言实为首倡。少陵继起，百代楷模，有自来矣。<br>清王夫之《姜斋诗话》：近体梁、陈已有，至杜审言始叶于度。</p><p>登襄阳城·五律·唐·杜审言<br>旅客三秋至，层城四望开。楚山横地出，汉水接天回。<br>冠盖非新里，章华即旧台。习池风景异，归路满尘埃。</p><p>大酺·七律·唐·杜审言<br>毗陵震泽九州通，士女欢娱万国同。<br>伐鼓撞钟惊海上，新妆袨服照江东。<br>梅花落处疑残雪，柳叶开时任好风。<br>火德云官逢道泰，天长日久属年丰。</p><p>渡湘江·七绝·唐·杜审言<br>迟日园林悲昔游，今春花鸟作边愁。<br>独怜京国人南窜，不似湘江水北流。</p><p>奉和七夕侍宴两仪殿应制·古诗·唐·杜审言<br>一年衔别怨，七夕始言归。敛泪开星靥，微步动云衣。<br>天迥兔欲落，河旷鹊停飞。那堪尽此夜，复往弄残机。 </p><h4 id="二、王勃"><a href="#二、王勃" class="headerlink" title="二、王勃"></a>二、王勃</h4><p>王勃，字子安，绛州龙门人。一说（649—675），一说（650—676），享年26岁。与杨炯、卢照邻、骆宾王以诗文齐名，史称初唐四杰。上元二年或三年，南下交趾探父，渡海溺水而死。崇尚实用，主张文章要开物成务、立言见志，能甄明大义、矫正末流，反映国家兴衰大事。   </p><p>骈体《滕王阁序》：落霞与孤鹜齐飞，秋水共长天一色。庾信《马射赋》 ：落花与芝盖齐飞，杨柳共春旗一色。</p><p>别薛华·五律·唐·王勃<br>送送多穷路，遑遑独问津。悲凉千里道，凄断百年身。<br>心事同漂泊，生涯共苦辛。无论去与住，俱是梦中人。</p><h4 id="三、骆宾王"><a href="#三、骆宾王" class="headerlink" title="三、骆宾王"></a>三、骆宾王</h4><p>骆宾王（626?—?），婺州义乌人。据《周易·观·六四》：“观国之光，利用宾于王”之意，取名宾王，字观光。 工诗，于四杰中最擅长七言歌行。 </p><p>25岁左右为道王李元庆府属，道王叫他陈述才能，他耻于自炫，辞不奉命。后入蜀，居姚州道大总管李义军幕，平定蛮族叛乱，文檄多出其手。约52岁调任长安主簿，又由长安主簿入朝为侍御史，武则天当政，骆多次上书讽刺，得罪入狱。次年，遇赦得释。<br>嗣圣元年（684），武则天废中宗自立，这年九月，徐敬业在扬州起兵反对。骆宾王起草了著名的《代李敬业传檄天下文》，慷慨激昂，气吞山河。徐敬业兵败被杀，骆宾王下落不明。《资治通鉴》说他与李同时被杀。《朝野佥载》说是投江而死。《新唐书》本传说他“亡命不知所之”。唐孟綮《本事诗》则说：“当敬业之败，与宾王俱逃，捕之不获。将帅虑失大魁，得不测罪。时死者数万人，因求戮类二人者，函首以献。后虽知不死，不敢捕送。故敬业得为衡山僧，年九十余乃卒。宾王亦落发，遍游名山。至灵隐，以周岁卒。”</p><p>咏鹅·古诗·唐·骆宾王[七岁]<br>鹅，鹅，鹅，曲项向天歌。白毛浮绿水，红掌拨清波。</p><p>为徐敬业讨武曌檄·檄文·唐·骆宾王</p><p>伪临朝武氏者，性非和顺，地实寒微。昔充太宗下陈，曾以更衣入侍。洎乎晚节，秽乱春宫。潜隐先帝之私，阴图后房之嬖。入门见嫉，蛾眉不肯让人；掩袖工谗，狐媚偏能惑主。践元后于翬翟，陷吾君于聚麀。加以虺蜴为心，豺狼成性。近狎邪僻，残害忠良。杀姊屠兄，弑君鸩母。神人之所共嫉，天地之所不容。犹复包藏祸心，窥窃神器。君之爱子，幽之于别宫；贼之宗盟，委之以重任。鸣呼！霍子孟之不作，朱虚侯之已亡。燕啄皇孙，知汉祚之将尽。龙漦帝后，识夏庭之遽衰。<br>敬业皇唐旧臣，公侯冢子。奉先帝之成业，荷本朝之厚恩。宋微子之兴悲，良有以也；袁君山之流涕，岂徒然哉！是用气愤风云，志安社稷。因天下之失望，顺宇内之推心。爰举义旗，以清妖孽。<br>南连百越，北尽三河；铁骑成群，玉轴相接。海陵红粟，仓储之积靡穷；江浦黄旗，匡复之功何远！班声动而北风起，剑气冲而南斗平。喑呜则山岳崩颓，叱吒则风云变色。以此制敌，何敌不摧？以此图功，何功不克？<br>公等或居汉地，或协周亲；或膺重寄于话言，或受顾命于宣室。言犹在耳，忠岂忘心。一抔之土未干，六尺之孤何托？倘能转祸为福，送往事居，共立勤王之勋，无废大君之命，凡诸爵赏，同指山河。若其眷恋穷城，徘徊歧路，坐昧先几之兆，必贻后至之诛。请看今日之域中，竟是谁家之天下！</p><h4 id="四、孟浩然"><a href="#四、孟浩然" class="headerlink" title="四、孟浩然"></a>四、孟浩然</h4><p>孟浩然（689—740），字浩然，襄阳人，世称孟襄阳。</p><p>前半生主要居家侍亲读书，以诗自适，曾隐居鹿门山。40岁游长安，应进士不第，返襄阳。在长安时，与张九龄、王维交谊甚笃。有诗名。后漫游吴越，穷极山水，以排遣仕途的失意。开元二十五年，张九龄为荆州长史，招致幕府，不足一年而返乡。开元二十八年亡。</p><p>李白称颂他：“高山安可仰，徒此揖清芬。”杜甫礼赞他：“清诗句句尽堪传。”苏轼：“韵高而才短，如造内法酒手，而无材料。”</p><p>归故园作·五律·唐·孟浩然<br>北阙休上书，南山归敝庐。不才明主弃，多病故人疏。<br>白发催年老，青阳逼岁除。永怀愁不寐，松月夜窗虚。</p><p>望洞庭湖赠张丞相·五律·唐·孟浩然<br>八月湖水平，涵虚混太清。气蒸云梦泽，波撼岳阳城。<br>欲济无舟楫，端居耻圣明。坐观垂钓者，徒有羡鱼情。</p><p>春晓·五古·唐·孟浩然<br>春眠不觉晓，处处闻啼鸟。夜来风雨声，花落知多少。</p><h4 id="五、王维"><a href="#五、王维" class="headerlink" title="五、王维"></a>五、王维</h4><p>诗人，画家。字摩诘（701—761）。祖籍太原祁，其父迁家蒲州。</p><p>王维诗现存不足400首，其中以描绘山水田园和歌咏隐居生活一类成就最大。王维的五律和五、七言绝句造诣最高，其他各体也都擅长。王维的其他题材如送别、纪行、军旅、侠义一类诗中，常有佳句。</p><p>开元九年进士，因通音律授大乐丞。不久因故谪济州司仓参军。开元二十二年，被张九龄擢为右拾遗，两年后张九龄罢相，他倍感沮丧，有归隐心。开元二十五年，奉使赴河西节度副大使崔希逸幕，后以殿中侍御史知南选。安史乱前，官至给事中。 王维被安禄山叛军俘获，被授伪官，乱平，降为太子中允。后复累迁至给事中，以尚书右丞终，世称王右丞。  </p><p>苏轼曾说：“味摩诘之诗，诗中有画；观摩诘之画，画中有诗。” </p><p>菩提寺禁裴迪来相看说逆贼等凝碧池上作音乐供奉人等举声便一时泪下私成口号诵示裴迪</p><p>万户伤心生野烟，百官何日再朝天。</p><p>秋槐叶落空宫里，凝碧池头奏管弦。</p><p>春日与裴迪过新昌访吕逸人不遇·七律·唐·王维<br>桃园一向绝风尘。柳市南头访隐沦。<br>到门不敢题凡鸟。看竹何须问主人。<br>城上青山如屋里。东家流水入西邻。<br>闭户著书多岁月。种松皆若老龙鳞。</p><p>老将行·歌行·唐·王维<br>少年十五二十时。步行夺得胡马骑。<br>射杀山中自额虎。肯数邺下黄须儿。<br>一身转战三千里。一剑曾当百万师。<br>汉兵奋迅如霹雳。虏骑崩腾畏蒺藜。<br>卫青不败由天幸。李广无功缘数奇。<br>自从弃置便衰朽。世事蹉跎成白首。<br>昔时飞箭无全目。今日垂杨生左肘。<br>路边时卖故侯瓜。门前学种先生柳。<br>苍茫古木连穷巷。寥落寒山对虚牖。<br>誓令疏勒出飞泉。不似颍川空使酒。<br>贺兰山下阵如云。羽檄交弛日夕闻。<br>节使三河募年少。诏书五道出将军。<br>试拂铁衣如雪色。聊持宝剑动星文。<br>愿得燕弓射天将。耻令越甲鸣吾君。<br>莫嫌旧日云中守。犹堪一战驭功勋。</p><h4 id="六、高适"><a href="#六、高适" class="headerlink" title="六、高适"></a>六、高适</h4><p>高适（约702—765）。字达夫。渤海莜人。居宋中。边塞诗人。</p><p>少孤贫，爱交游，有游侠之风，以建功立业自期。早年游长安、过蓟门、卢龙一带求进身之路，未果。在宋中曾与李白、杜甫交结。天宝八载（749），举有道科，授封丘尉。后辞官入河西节度使哥舒翰幕为掌书记。安史之乱后，擢谏议大夫，历淮南节度使，彭、蜀二州刺史，剑南节度使，至左散骑常侍，封渤海县侯。死于长安。世称高常侍。其仕途通达，为唐代诗人所少有。</p><p>人日寄杜二拾遗·歌行·唐·高适<br>人日题诗寄草堂。遥怜故人思故乡。<br>柳条弄色不忍见。梅花满枝空断肠。<br>身在南蕃无所预。心怀百愁复千虑。<br>今日人日空相忆。明年人日知何处。<br>一卧东山三十春。岂知书剑老风尘。<br>龙钟还忝二干石。愧尔东西南北人。</p><p>燕歌行并序·歌行·唐·高适<br>序：开元二十六年，客有从御史大夫张公出塞而还者，作燕歌行以示适，感征戍之事，因而和焉。<br>汉家烟尘在东北，汉将辞家破残贼。<br>男儿本自重横行，天子非常赐颜色。<br>摐金伐鼓下榆关，旌旆逶迤碣石间。<br>校尉羽书飞瀚海，单于猎火照狼山。<br>山川萧条极边土，胡骑凭陵杂风雨。<br>战士军前半死生，美人帐下犹歌舞。<br>大漠穷秋塞草衰，孤城落日斗兵稀。<br>身当恩遇常轻敌，力尽关山未解围。<br>铁衣远戍辛勤久，玉筋应啼别离后。<br>少妇城南欲断肠，征人蓟北空回首。<br>边庭飘摇那可度，绝域苍茫更何有！<br>杀气三时作阵云，寒声一夜传刁斗。<br>相看白刃血纷纷，死节从来岂顾勋？<br>君不见沙场征战苦，至今犹忆李将军！</p><h4 id="七、岑参"><a href="#七、岑参" class="headerlink" title="七、岑参"></a>七、岑参</h4><p>岑参（715—770），南阳人，迁居江陵。边塞诗人。出身仕宦家庭，曾祖父，伯祖父，伯父都官至宰相。其父也两任刺史，但早亡，故家道衰落。</p><p>早岁孤贫，遍读经史。20岁至长安，求仕不成，奔走京洛，漫游河朔。天宝三载中进士。八载、十三载两次出塞任职。回朝后，任右补阙、起居舍人等职。大历间官至嘉州刺史，世称岑嘉州。后罢官，客死成都旅舍。岑参早期诗歌多为写景、述怀及赠答之作。山水诗风格清丽俊逸，但语奇体峻，意境新奇；感伤不遇，嗟叹贫贱的忧愤情绪也较浓。6年边塞生活，使岑参的诗境界空前开阔，造意新奇的特色进一步发展，雄奇瑰丽的浪漫色彩成为他边塞诗的基调。</p><p>走马川行奉送出师西征·歌行·唐·岑参<br>君不见走马川行雪海边。平沙莽莽黄入天。<br>轮台九月风夜吼。一川碎石大如斗。随风满地石乱走。<br>匈奴草黄马正肥。金山西见烟尘飞。汉家大将西出师。<br>将军金甲夜不脱。半夜军行戈相拨。风头如刀面如割。<br>马毛带雪汗气蒸。五花连钱旋作冰。幕中草檄砚水冰。<br>虏骑闻之应胆摄。料知短兵不敢接。车师西门伫献捷。</p><p>轮台歌奉送封大夫出师西征·歌行·唐·岑参<br>轮台城头夜吹角，轮台城北旄头落。<br>羽书昨夜过渠黎，单于已在金山西。<br>戍楼西望烟尘黑，汉兵屯在轮台北。<br>上将拥旄西出征，平明吹笛大军行。<br>四边伐鼓雪海涌，三军大呼阴山动。<br>虏塞兵气连云屯，战场白骨缠草根。<br>剑河风急雪片阔，沙口石冻马蹄脱。<br>亚相勤王甘苦辛，誓将报主静边尘。<br>古来青史谁不见，今见功名胜古人。<br>另有《白雪歌送武判官归京》</p><p>逢入京使·七绝·唐·岑参<br>故园东望路漫漫，双袖龙锺泪不干。<br>马上相逢无纸笔，凭君传语报平安。</p><h4 id="八、王昌龄"><a href="#八、王昌龄" class="headerlink" title="八、王昌龄"></a>八、王昌龄</h4><p>王昌龄（约698—757）字少伯。京兆长安人。</p><p>早年贫贱。开元十五年登进士第，任秘书省校书郎。与李白及当时边塞诗派、田园山水诗派的主要人物过往甚密，唱酬不断。曾到过西北边塞。开元二十二年，中博学鸿词科，授汜水县尉。二十八年，被贬岭南。次年回长安，又出为江宁县丞。数年后贬为龙标县尉。世称王江宁或王龙标。安史乱起，由贬所赴江宁。为濠州刺史闾丘晓所杀。</p><p>王昌龄诗生前已负盛名。他擅长七言绝句，以之与李白并称，人称诗家天子、七绝圣手。现存王昌龄诗180多首，《出塞》被誉为唐人七绝压卷之作。 </p><p>出塞其一·七绝·唐·王昌龄<br>秦时明月汉时关，万里长征人未还。<br>但使龙城飞将在，不教胡马度阴山。</p><p>出塞其二·七绝·唐·王昌龄<br>骝马新跨白玉鞍，战罢沙场月色寒。<br>城头铁鼓声犹震，匣里金刀血未干。</p><h4 id="九、李白"><a href="#九、李白" class="headerlink" title="九、李白"></a>九、李白</h4><p>李白（701—762），字太白，号青莲居士，四川绵州昌隆人。贺之章称其为“谪仙人”。祖籍陇西成纪，生于四川江油青莲乡，另一说生于中亚西域的碎叶城伟大的浪漫主义诗人，被人尊称为“诗仙”，与杜甫并称为“李杜”。</p><p>李白从少年时起，常去戴天山寻找道观的道士谈论道经，与隐居于岷山的东岩子交好，又与当时有名的纵横家赵蕤为好友。自称要“申管晏之谈，谋帝王之术，奋其智能，愿为辅弼，使寰区大定，海县清一。”开元十三年，李白出蜀，道士司马承祯，开始名扬天下。李白游江陵、岳阳、洞庭、庐山、金陵、扬州、淮南、姑苏、荆门、襄阳、滞停安陆。开元十五年与武后时宰相许圉师孙女成婚。婚后得育一男一女，子名：伯禽，小名“颇黎”；女名：平阳，小名“明月奴”。开元二十三年，长安求仕未果，只得离开。开元二十七年，李白娶了第二任妻子刘氏。因刘氏看不起李白，李白愤而离开。天宝元年，得到唐玄宗的妹妹玉真公主的推荐，供奉翰林。不到三年被唐玄宗“赐金放还”。天宝三年夏天，李白到了东都洛阳，遇到杜甫，同年秋天，两人如约畅游梁宋。天宝四年，李白在任城，与一当地妇人结婚，为李白生下一子。天宝四年秋天，李白与杜甫在东鲁第三次会见，于这年冬天，两人分手，终生未再谋面，一生写了大量相互思念的诗篇。李白离开东鲁，到扬州几未停留，去会稽会见元丹丘，先凭吊贺知章。折回金陵，遇崔成甫，情怀相投。天宝六年，李白去幽燕，以安史探虚实。天宝九年，李白在河南开封结识武则天时宰相宗楚客的孙女宗氏，宗氏是一才貌俱全的大家闺秀，成为第四任妻子。天宝十四年，安史之乱爆发，应邀入永王李磷幕，永王与肃宗争皇位谋反，不久即败北，李白也因之被系浔阳狱，后遇赦。上元二年，李白因病返回金陵。在从叔当涂县令李阳冰的寓所，在病榻上把手稿交给了李阳冰，赋《临终歌》而与世长辞。</p><p>李白诗歌丰富的想象力在篇幅较长的七言歌行中表现得尤为突出，这方面明显地可以看出受到屈原与鲍照的影响。在体裁方面，李白擅长形式比较自由的古诗和绝句，不爱写格律严整的律诗。  </p><p>韩愈《调张籍》：李杜文章在，光焰万丈长。不知群儿愚，那用故谤伤。蚍蜉撼大树，可笑不自量。伊我生其后，举颈遥相望。夜梦多见之，昼思反微茫。 </p><p>将进酒·乐府·唐·李白</p><p>君不见黄河之水天上来，奔流到海不复回。</p><p>君不见高堂明镜悲白发，朝如青丝暮成雪。</p><p>人生得意须尽欢，莫使金樽空对月。</p><p>天生我才必有用，干金散尽还复来。</p><p>烹羊宰牛且为乐，会须一饮三百杯。</p><p>岑夫子，丹丘生，将进酒，杯莫停。</p><p>与君歌一曲，请君为我倾耳听。</p><p>钟鼓馔玉不足贵，但愿长醉不复醒。</p><p>古来圣贤皆寂寞，唯有饮者留其名。</p><p>陈王昔时宴平乐，斗酒十千恣欢谑。</p><p>主人何为言少钱，径须沽取对君酌。</p><p>五花马、干金裘，呼儿将出换美酒，与尔同销万古愁。</p><p>妾薄命·古诗·唐·李白</p><p>汉帝重阿娇，贮之黄金屋。咳唾落九天，随风生珠玉。</p><p>宠极爱还歇，妒深情却疏。长门一步地，不肯暂回车。</p><p>雨落不上天，水覆难再收。君情与妾意，各自东西流。</p><p>昔日芙蓉花，今成断根草。以色事他人，能得几日好。</p><p>把酒问月·歌行·唐·李白</p><p>青天有月来几时，我今停杯一问之。</p><p>人攀明月不可得，月行却与人相随。</p><p>姣如飞镜临丹阙，绿烟灭尽清辉发。</p><p>但见宵从海上来，宁知晓向云间没。</p><p>白兔捣药秋复春，嫦娥孤栖与谁邻。</p><p>今人不见古时月，今月曾经照古人。</p><p>古人今人若流水，共看明月皆如此。</p><p>唯愿当歌对酒时，月光长照金樽里。 </p><h4 id="十、杜甫"><a href="#十、杜甫" class="headerlink" title="十、杜甫"></a>十、杜甫</h4><p>杜甫（712—770），字子美，生于河南巩县，在长安时一度住在少陵附近，自称少陵野老，在成都时曾被推荐为检校工部员外郎，后世称他为杜少陵，杜工部。人称“诗圣”，诗称“诗史”。</p><p>《戏为六绝句》：“王杨卢骆当时体，轻薄为文哂未休；尔曹身与名俱灭，不废江河万古流。”<br><strong>1、读书和漫游时期</strong><br>从玄宗开元十九年至天宝四载先后两次长期漫游，第一次在江南一带，到金陵、姑苏，渡浙江、泛舟剡溪直至天姥山下。次年在齐赵一带第二次漫游，眼界大开。<br>开元二十九年，筑居于洛阳偃师，首阳山下，与杨氏结婚。天宝三载，在洛阳与李白相遇，两人相见恨晚，结下了深厚友谊，两次畅游。<br><strong>2、困居长安时期</strong><br>先在长安应试，落第。最后得到右卫率府胄曹参军的职位。<br>玄宗在天宝十年借机献三篇《大礼赋》，得到玄宗的赏识，让吏部考核，吏部不试，终无下文。<br><strong>3、陷贼和为官时期</strong><br>安史之乱爆发，潼关失守，杜甫把家安置在鄜州，独自去投肃宗，中途为安史叛军俘获，押到长安，后来伺机从叛军中逃脱，潜逃到凤翔行在，做左拾遗。由于忠言直谏，上疏为宰相房琯事被贬华州司功参军。<br><strong>4、西南漂泊时期</strong><br>乾元二年夏天，随着九节度官军在相州大败和关中饥荒，杜甫放弃了华州司功参军的职务，携家到了成都，在严武等人的帮助下，在城西浣花溪畔，建成了一座草堂，后被严武荐为节都，全家寄居在四川奉节县。广德二年春，严武再镇蜀，杜甫才又回到草堂。广德七年四月严武去世，杜甫无所依傍，离开了成都。<br>广德七年四月严武去世，杜甫无所依傍，离开成都。到达夔州，在此暂住，近两年。<br>大历三年，杜甫思乡心切，乘舟出峡，先到江陵，在荆湘十分艰辛漂泊两年，贫病而死。</p><p>诗存今一千四百余首。<br>韩愈《题杜工部坟》诗：“独有工部称全美，当日诗人无拟论”</p><p>元稹《唐故工部员外郎杜君墓系铭》说：“至於子美，荩所谓上薄风骚，下该沈宋，言夺苏李，气吞曹刘，掩颜谢之孤高，杂徐庾之流丽，久古今之体势，而兼昔人之所独专矣。使仲尼考锻其旨要，尚不知贵其多乎哉；苟以为能所不能，无可无不可，则诗人以来，未有如子美者。时山东人李白，亦以奇文取称，时人谓之李杜。予观其壮浪纵恣，摆去拘束模写物象，及乐府歌诗，诚亦差肩於子美矣；至若铺陈终始，排比声韵，大或千言，次犹数百，词气豪迈，而风调清深，属对律切，而脱弃凡近，则李尚不能历其藩翰，况堂奥乎？”</p><p>白居易《与元九书》说：“贯穿今古，缕格律，尽工尽善。”</p><p>北宋黄裳《陈商老诗集集序》：“读杜甫诗如看羲之法帖，备众体而求之无所不有……工于诗者，必取杜甫。”</p><p>杜诗体制多样，兼有众长，兼工各体，并能推陈出新，别开生面。<br>治杜：钱谦益《笺注杜工部集》，仇兆鳌《杜诗详注》，杨伦《杜诗镜铨》，浦起龙《读杜心解》。</p><p>月夜·五律·唐·杜甫<br>今夜鄜州月。闺中只独看。遥怜小儿女。未解忆长安。<br>香雾云鬟湿。清辉玉臂寒。何时倚虚幌。双照泪痕干。</p><p>江村·七律·唐·杜甫<br>清江一曲抱村流。长夏江村事事幽。<br>自去自来梁上燕。相亲相近水中鸥。<br>老妻画纸为棋局。稚子敲针作钓钩。<br>但有故人供禄米。微躯此外更何求。</p><p>旅夜书怀·五律·唐·杜甫<br>细草微风岸，危樯独夜舟。星垂平野阔，月涌大江流。<br>名岂文章著，官应老病休。飘飘何所似，天地一沙鸥。 </p><p>饮中八仙歌·歌行·唐·杜甫</p><p>知章骑马似乘船，眼花落井水底眠。</p><p>汝阳三斗始朝天，道逢麯车口流涎。</p><p>恨不移封向酒泉，左相日兴费万钱。</p><p>饮如长鲸吸百川，衔杯乐圣称避贤。</p><p>宗之潇洒美少年，举觞白眼望青天。</p><p>皎如玉树临风前，苏晋长斋绣佛前。</p><p>醉中往往爱逃禅，李白一斗诗百篇。</p><p>长安市上酒家眠，天子呼来不上船。</p><p>自称臣是酒中仙，张旭三杯草圣传。</p><p>脱帽露顶王公前，挥豪落纸如云烟。</p><p>焦遂五斗方卓然，高谈雄辩惊四筵。</p><p>蜀相·七律·唐·杜甫<br>丞相祠堂何处寻？锦官城外柏森森。<br>映阶碧草自春色，隔叶黄鹂空好音。<br>三顾频烦天下计，两朝开济老臣心。<br>出师未捷身先死，长使英雄泪满襟。</p><p>咏怀古迹五首之五·七律·唐·杜甫<br>诸葛大名垂宇宙，宗臣遗像肃清高。<br>三分割据纡筹策，万古云霄一羽毛。<br>伯仲之间见伊吕，指挥若定失萧曹。<br>运移汉祚终难复，志决身歼军务劳。</p><p>水调歌头（读杜诗）·词·本朝·褚宝增<br>翻覆作云雨，逐水落花流。此生未见龙凤，无望化王侯。虽已读书万卷，虽已征途万里，下笔尚优柔。绝顶众山览，自感变蜉蝣。<br>朱门酒，锦城曲，怕淹留。飞扬跋扈，不知放胆为谁谋。命与文章相憎，名岂文章可就，官必老来休。身后常忧患，魂魄似孤鸥。</p><h4 id="以上所有内容均来自褚宝增老师讲义"><a href="#以上所有内容均来自褚宝增老师讲义" class="headerlink" title="以上所有内容均来自褚宝增老师讲义"></a>以上所有内容均来自褚宝增老师讲义</h4></font></html>]]></content>
      
      
      <categories>
          
          <category> 古典文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 古典文学史 </tag>
            
            <tag> 诗词 </tag>
            
            <tag> 初唐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国古典文学史之唐宋古文</title>
      <link href="/2019/11/13/%E4%B8%AD%E5%9B%BD%E5%8F%A4%E5%85%B8%E6%96%87%E5%AD%A6%E5%8F%B2%E7%95%A5%E4%B9%8B%E5%94%90%E5%AE%8B%E5%8F%A4%E6%96%87/"/>
      <url>/2019/11/13/%E4%B8%AD%E5%9B%BD%E5%8F%A4%E5%85%B8%E6%96%87%E5%AD%A6%E5%8F%B2%E7%95%A5%E4%B9%8B%E5%94%90%E5%AE%8B%E5%8F%A4%E6%96%87/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><p>唐宋八大家，是唐宋时期八个散文代表作家的合称，指的是唐代的韩愈、柳宗元、宋代的欧阳修、苏洵、苏轼、苏辙、王安石和曾巩。<a id="more"></a></p><p>明代初年，朱右编《八先生文集》，明代中叶唐顺之编《文编》中也仅收了上述八人作品，明朝后期茅坤编《唐宋八大家文钞》。</p><h4 id="一、古文运动产生的原因"><a href="#一、古文运动产生的原因" class="headerlink" title="一、古文运动产生的原因"></a>一、古文运动产生的原因</h4><ol><li>在政治上，为害很大，是所谓的“亡国之音”，“贵之而江东乱，用之而中国衰”。</li><li>在内容上，“都损事实”，“寻虚逐微”，“连篇累牍，不出月露之形；积案盈箱，唯是风云之状。”（《隋书·李谔传》）</li><li>在形式上，“妄益文彩”，“俱是淫声”，“竟一韵之奇，争一字之功”。</li><li>在效果上，由于偶句限制，意不可尽收，词难以表确。</li><li>天道急需统一，所谓“言而不能文，非君子之儒也；文而不知道，亦非君子之儒也”。</li></ol><p>韩愈成为领袖的原因，是通过自身的交往壮大队伍。<br>韩愈《与崔群书》：“仆自少至今，从事于往还朋友间，一十七年矣，所与交往相识者千百人，非不多，其相与如骨肉兄弟者，亦且不少。”<br>李翶《答韩侍郎书》：“如兄者，颇亦好贤，必须甚有文章，兼能附己，顺我之欲，则汲汲孜孜，无所忧惜，引拔之矣。如或力不足，则分食以食之，无不至矣。”<br>社会背景也是原因，安史之乱后，是中国集权社会由盛到衰的一个转折点。<br>人们关心国家命运，必须要议论纷纷，用骈文、辞赋、律诗太受限制，难以痛快淋漓的表达思想感情与意见，古文（散文）可适应这种局面。</p><p>韩愈的领袖作用，主要表现在三个方面：</p><ol><li>建立了古文理论。主张对古人“师其意不师其辞”；“词必己出”；“唯陈言之务去”；“文从字顺各司职”。</li><li>写出了不少具有典范性的古文作品，真正显示了古文的战斗实绩。</li><li>组织了古文作者的队伍。韩愈好为人师，《新唐书》本传上言：“成就后进之士，经愈指授，皆称韩门弟子”。兼之好交友，皆以古文系之。</li></ol><p>另：佛教势力恶性膨胀。 </p><h4 id="二、韩愈"><a href="#二、韩愈" class="headerlink" title="二、韩愈"></a>二、韩愈</h4><p>韩愈（768—824）字退之，河南河阳人，祖籍昌黎。</p><p>13岁能文，从师孤独及、梁肃之，自称“前古之兴亡未尝不经于心也，当世之得失未尝不留于意也”。（《与凤翔邢尚书书》） 贞元二年，第一次离家到京师求仕，三试不第，一连七年未果。应试四次，始中进士。然三试吏部不中。居长安十年，仍未得到一官半职。不得不于贞元十一年，离开京师，前往洛阳。贞元十二年韩愈，跟随汴、宋、亳、颖等州观察处置使董晋，任观察推官。时值大宦官头子俱文珍任董晋的监军，韩愈拍马说：“监军俱公，辍侍从之荣，受腹心之寄，奋其武毅，张我皇威，遇变出奇，先事独运，偃息谈笑，危疑已平，天子无东顾之忧，方伯有和同之美。”贞元十八年，被擢为四门博士，第二年又被拜为监察御史。好景不长，紧接着，韩愈便被贬为连州阳山令。顺宗在位不到一年便死去，立长子李纯为宪宗，俱文珍重新得势。韩愈于元和十年迁中书舍人，掌管诏诰制敕，权任极重。元和十年淮西叛乱，韩愈力主讨伐，促使宪宗当机立断，且命韩愈为讨伐军中的行军司马，参与掌管军政，军威大振，最终生擒了淮西藩镇割据的头子吴元济。韩愈亦因此升为刑部侍郎。 韩愈反对奉佛，贬为潮州刺使。宪宗被宦官所杀，穆宗即位，召韩愈为国子祭酒，同年又升兵部侍郎，归回朝内，长庆四年，病死于靖安里第，著作有《昌黎先生集》。</p><p>韩愈散文的创作主张是：首先“唯陈言之务去” ，其次选材要精，第三语言要精迈。<br>韩愈散文特点：如长江秋注，千里一道，奔放豪迈，汪洋恣肆。气盛情切，缘于理顺；对比夸张，有助渲染。   </p><p>论佛骨表·散文·唐·韩愈</p><p> 臣某言：伏以佛者，夷狄之一法耳，自后汉时流入中国，上古未尝有也。昔者黄帝在位百年，年百一十岁；少昊在位八十年，年百岁；颛顼在位七十九年，年九十八岁；帝喾在位七十年，年百五岁；帝尧在位九十八年，年百一十八岁；帝舜及禹，年皆百岁。此时天下太平，百姓安乐寿考，然而中国未有佛也。其后殷汤亦年百岁，汤孙太戊在位七十五年，武丁在位五十九年，书史不言其年寿所极，推其年数，盖亦俱不减百岁。周文王年九十七岁，武王年九十三岁，穆王在位百年。此时佛法亦未入中国，非因事佛而致然也。</p><p>汉明帝时，始有佛法，明帝在位，才十八年耳。其后乱亡相继，运祚不长。宋、齐、梁、陈、元魏已下，事佛渐谨，年代尤促，惟梁武帝在位四十八年，前后三度舍身施佛，宗庙之祭，不用牲牢，昼日一食，止于菜果，其后竟为侯景所逼，饿死台城，国亦寻灭。事佛求福，乃更得祸。由此观之，佛不足事，亦可知矣。</p><p>高祖始受隋禅，则议除之。当时群臣材识不远，不能深知先王之道，古今之宜，推阐圣明，以救斯弊，其事遂止，臣常恨焉。伏维睿圣文武皇帝陛下，神圣英武，数千百年已来，未有伦比。即位之初，即不许度人为僧尼道士，又不许创立寺观。臣常以为高祖之志，必行于陛下之手，今纵未能即行，岂可恣之转令盛也?</p><p>今闻陛下令群僧迎佛骨于凤翔，御楼以观，舁入大内，又令诸寺递迎供养。臣虽至愚，必知陛下不惑于佛，作此崇奉，以祈福祥也。直以年丰人乐，徇人之心，为京都士庶设诡异之观，戏玩之具耳。安有圣明若此，而肯信此等事哉!然百姓愚冥，易惑难晓，苟见陛下如此，将谓真心事佛，皆云：“天子大圣，犹一心敬信；百姓何人，岂合更惜身命!”焚顶烧指，百十为群，解衣散钱，自朝至暮，转相仿效，惟恐后时，老少奔波，弃其业次。若不即加禁遏，更历诸寺，必有断臂脔身以为供养者。伤风败俗，传笑四方，非细事也。</p><p>夫佛本夷狄之人，与中国言语不通，衣服殊制；口不言先王之法言，身不服先王之法服；不知君臣之义，父子之情。假如其身至今尚在，奉其国命，来朝京师，陛下容而接之，不过宣政一见，礼宾一设，赐衣一袭，卫而出之于境，不令惑众也。况其身死已久，枯朽之骨，凶秽之馀，岂宜令入宫禁?</p><p>孔子曰：“敬鬼神而远之。”古之诸侯，行吊于其国，尚令巫祝先以桃茢祓除不祥，然后进吊。今无故取朽秽之物，亲临观之，巫祝不先，桃茹不用，群臣不言其非，御史不举其失，臣实耻之。乞以此骨付之有司，投诸水火，永绝根本，断天下之疑，绝后代之惑。使天下之人，知大圣人之所作为，出于寻常万万也。岂不盛哉! 岂不快哉! 佛如有灵，能作祸祟，凡有殃咎，宜加臣身，上天鉴临，臣不怨悔。无任感激恳悃之至，谨奉表以闻。臣某诚惶诚恐。 </p><h4 id="三、柳宗元"><a href="#三、柳宗元" class="headerlink" title="三、柳宗元"></a>三、柳宗元</h4><p>柳宗元（773—819），字子厚，河东人，也称柳河东，因官终柳州刺史，又称柳柳州。</p><p>柳氏本来是“关陇集团”中一个有势力的家族，柳奭的外甥女王氏，就是高宗的皇后，在高宗朝，柳氏家族同时居官尚书省的就多达二十多人。武则天得宠后。柳氏一族“子孙亡没并尽”。</p><p>贞元五年（789）柳宗元参加进士考，未及第。贞元八年（792）突参得罪赐死，陆贽入相，顾少连主持考试，柳宗元得中。王叔文主入朝政，柳宗元被任命为礼部员外郎。此间写了《守道论》：“官也者，道之器也”。王叔文革新集团仅维持了146天，便彻底失败。王叔文贬后被杀，贬柳宗元渝州刺史，永州作员外司马。<br>旧唐书《柳宗元传》：元和十年，例移为柳州刺史。时郎州司马刘禹锡得播州刺史，制书下，宗元谓所亲曰：“禹锡有母年高，今为郡蛮方，西南绝域，往复万里，如何与母偕行。如母子异方，便为永诀。吾与禹锡执友，胡忍见其若是？”即草奏章，请以柳州授禹锡，自往播。裴度亦奏其事，禹锡终易连州。<br>江岭间为进士者，不远千里随宗元师法，凡经其门，必为名士。</p><p>投身古文原因有四：<br>第一辅时及物，将原来的“官也者，道之器也”。改为“文也者，道之器也”。第二是揭露黑暗，因无事可作，便去处了解民间疾苦。第三是和朋友们论政、论学、论文。第四是书愤、辩证、求授引。</p><p>柳宗元虽然只活了46岁，却留下600多篇诗文作品，在文学上创造了光辉的业绩，在诗歌、辞赋、散文、游记、寓言、小说、杂文以及文学理论诸方面，都做出了突出的贡献。其山水游记，独步今古。<br>山水游记是柳宗元最为脍炙人口的作品，在中国文学史上具有独特的地位，骚赋被称为汉后唯一与屈原可相通者。</p><p>桐叶封弟辨·古文·唐·柳宗元<br>古之传者有言：“成王以桐叶与小弱弟，戏曰：‘以封汝。’周公入贺。王曰：‘戏也。’周公曰：‘天子不可戏。’乃封小弱弟于唐。”<br>吾意不然：王之弟当封邪，周公宜以时言于王，不待其戏，而贺以成之也；不当封邪，周公乃成其不中之戏，以地以人，与小弱弟者为之主，其得为圣乎？<br>且周公以王之言，不可苟焉而已，必从而成之耶？设有不幸，王以桐叶戏妇寺，亦将举而从之乎？凡王者之德，在行之何若。设未得其当，虽十易之不为病；要于其当，不可使易也，而况以其戏乎？若戏而必行之，是周公教王遂过也。<br>吾意周公辅成王宜以道，从容优乐，要归之大中而已。必不逢其失而为之辞；又不当束缚之，驰骤之，使若牛马然，急则败矣。且家人父子，尚不能以此自克，况号为君臣者邪！是直小丈夫缺缺者之事，非周公所宜用，故不可信。<br>或曰：“封唐叔，史佚成之。”</p><h4 id="四、王安石"><a href="#四、王安石" class="headerlink" title="四、王安石"></a>四、王安石</h4><p>王安石（1021—1086），字介甫，号半山，小字獾郎，封荆国公，世人又称王荆公。抚州临川人，北宋杰出的政治家、思想家、文学家。</p><p>欧阳修称赞王安石：翰林风月三千首，吏部文章二百年。老去自怜心尚在，后来谁与子争先。<br>仁宗庆历进士。嘉佑三年上万言书，提出变法主张。神宗熙宁二年任参知政事。次年任宰相，依靠神宗实行变法。并支持五取西河等州，改善对西夏作战的形势。因保守派反对，新法遭到阻碍。熙宁七年辞退。次年再相；熙宁九年再辞，还居江宁(南京)，封舒国公，改封荆，世称荆公。卒谥文。<br>他强调“权时之变”，反对因循保守。一生为实现自己的政治理想而斗争，他持有“适用”的文学创作观念，他的诗文都具有浓厚的政治色彩，是直接为他的政治斗争服务的。<br>散文立意超卓、说理透彻，具有较强的逻辑性和概括力，语言简练朴素。“只用一二语，便可扫却他人数大段”（刘熙载《艺概》）。</p><p><strong>王安石变法</strong>：<br>1.均输法，2.市易法，3.免行法，4.青苗法，5.募役法，<br>6.方田均税法，7.农田水利法，8.保甲法，9.限制商人，<br>10.改革教育制度。</p><p>该学·古文·北宋·王安石<br>江之南有贤人焉，字子固，非今所谓贤人者，予慕而友之。淮之南有贤人焉，字正之，非今所谓贤人者，予慕而友之。二贤人者，足未尝相过也，口未尝相语也，辞币未尝相接也。其师若友，岂尽同哉？予考其言行，其不相似者，何其少也！曰，学圣人而已矣。学圣人，则其师若友，必学圣人者。圣人之言行岂有二哉？其相似也适然。<br>予在淮南，为正之道子固，正之不予疑也。还江南，为子固道正之，子固亦以为然。予又知所谓贤人者，既相似，又相信不疑也。<br>子固作《怀友》一首遗予，其大略欲相扳以至乎中庸而后已。正之盖亦常云尔。夫安驱徐行，轥中庸之庭，而造于其室，舍二贤人者而谁哉？予昔非敢自必其有至也，亦愿从事于左右焉尔。辅而进之，其可也。<br>噫！官有守，私系合不可以常也，作《同学一首别子固》，以相警且相慰云。</p><h4 id="五、苏轼"><a href="#五、苏轼" class="headerlink" title="五、苏轼"></a>五、苏轼</h4><p>苏轼（1036—1101），字子瞻，一字和仲，号东坡居士。眉州人。</p><p>嘉祐元年首次出川赴京，准备参加朝廷的科举考试。嘉祐二年，参加了礼部的考试，以一篇《刑赏忠厚论》获得主考官欧阳修的赏识，高中进士。嘉祐六年)应朝廷中制科考试，入当时最高第三等，授大理评事、签书凤翔府判官。这时王安石正推行新法，苏轼与王安石存在分歧，他不主张遽变，接连上书神宗，反对王安石变法方案，引起新党的排挤。为了远身祸，求为外任，先后出任杭州通判，密州、徐州、湖州知州。苏轼出京作地方官，勤政爱民，尽心职守。元丰二年遭“乌台诗案”，几置死地，幸得多方营救。出狱后，被贬为黄州团练副使，近于流放。因经济困难，申请城东坡荒地，躬耕求食，自号东坡居士，迎来一生创作的高峰。苏轼从黄州被召还，主持过学士院考试和进士贡举。苏轼俨然成为文坛盟主，擢拔后进有：黄庭坚、秦观、张耒、晁补之、陈师道等。元丰八年，神宗病故，哲宗即位，高太后听政，起用旧党，废除新法。但苏轼对待新法又主张“参用所长”，反对全盘否定新法。为旧党所忌恨，又求外放自保。高太后病死，哲宗执政，新党上台，又被新党迫害，贬到惠州、琼州。元符三年，徽宗继位，苏轼获赦北还，不料行至常州病死。</p><p>文学思想强调“有为而作”，崇尚自然，摆脱束缚，“出新意于法度之中，寄妙理于豪放之外”。<br>北宋四大书法家：苏轼、黄庭坚、米芾、蔡襄。  </p><p>范增论·宋·苏轼<br>汉用陈平计，间疏楚君臣。项羽疑范增与汉有私，稍夺其权。增大怒曰：“天下事大定矣，君王自为之，愿赐骸骨归卒伍。”归未至彭城，疽发背死。苏子曰：增之去善矣。不去，羽必杀增。独恨其不早耳。<br>然则当以何事去？增劝羽晒沛公，羽不听，终以此失天下，当于是去耶？曰：否。增之欲晒沛公，人臣之公也。羽之不杀，犹有君人之度也。增曷为以此去哉？《易》曰：“知几其神乎！”《诗》曰：“相彼雨雪，先集维霰。”增之去，当于羽杀卿子冠军时也。陈涉之得民也，以项燕、扶苏。项氏之兴也，以立楚怀王孙心。而诸侯叛之也，以弑义帝。且义帝之立，增为谋主矣。义帝之存亡，岂独为楚之盛衰，亦增之所与同祸福也。未有义帝亡而增独能久存者也。羽之杀卿子冠军也，是弑义帝之兆也。其弑义帝，则疑增之本也，岂必待陈平哉？物必先腐也，而后虫生之；人必先疑也，而后谗入之。陈平虽智，安能间无疑之主哉？<br>吾尝论义帝天下之贤主也。独遣沛公入关，不遗项羽；识卿子冠军于稠人之中，而擢以为上将。不贤而能如是乎？羽既矫杀卿子冠军，义帝必不能堪。非羽弑帝，则帝杀羽。不待智者而后知也。增始劝项梁立义帝，诸侯以此服从；中道而弑之，非增之意也。夫岂独非其意，将必力争而不听也。不用其言而杀其所立，羽之疑增，必自是始矣。<br>方羽杀卿子冠军，增与羽比肩而事义帝，君臣之分未定也。为增计者，力能诛羽则诛之，不能则去之，岂不毅然大丈夫也哉？增年已七十，合则留，不合则去。不以此时明去就之分，而欲依羽以成功名，陋矣！虽然，增，高帝之所畏也。增不去，项羽不亡。呜呼！增亦人杰也哉！</p><p>苏洵《六国论》，讲战略之重要性。认为六国破灭，弊在贿秦，实际上是借古讽今，指责宋王朝的屈辱政策；苏轼《六国论》，讲人才之重要性。六国诸侯卿相皆争养士，是久存的原因。只要把那些“士”养起来，老百姓想造反也找不到带头人了，国家就可以安定了。指出朝廷不要官逼“士”反；苏辙《六国论》，讲反腐之重要性。评论齐、楚、燕、赵四国不能支援前方的韩、魏，团结抗秦，暗喻北宋王朝前方受敌而后方安乐腐败的现实。 </p><h4 id="六、古文对后世的影响"><a href="#六、古文对后世的影响" class="headerlink" title="六、古文对后世的影响"></a>六、古文对后世的影响</h4><p>韩愈，柳宗元是司马迁以后最大的散文作家。韩愈不顾流俗，抗颜而为人师，所以当时就影响广泛。中唐时代，传奇小说和古文并兴，二者互为影响。从晚唐五代到北宋初，古文运动实际趋向衰落，骈文恢复了统治地位。韩柳以后，社会矛盾进一步发展，不仅藩镇割据的分裂局面无法挽回，道统的宣传既无补于社稷的没落和崩溃，士大夫振作有为和希望，也浙趋破灭。</p><p>裴度：“文之异在气体之高下，思致之深浅，不在磔裂章句，隳废声韵。”就是说文章重在思想内容，不在骈散形式。完全从形式着眼来反对骈文，意义是不大的。<br>北宋，到了中叶，在新的现实实条件下，以欧阳修为首，再一次掀起了古文运动，由于欧王曾苏诸古文大家在创作上的努力和成功，从此韩柳古文遂成为新的传统，明代唐顺之，归有光。清代“桐城派”。<br>古文所以后来难以再度辉煌，韩柳文散，但重内容，后人因散，复难有内容再抛开形式，便两皆不是的一无是处。 </p><h4 id="以上内容均来自褚宝增老师讲义"><a href="#以上内容均来自褚宝增老师讲义" class="headerlink" title="以上内容均来自褚宝增老师讲义"></a>以上内容均来自褚宝增老师讲义</h4></font></html>]]></content>
      
      
      <categories>
          
          <category> 古典文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 古典文学史 </tag>
            
            <tag> 唐宋 </tag>
            
            <tag> 古文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国古典文学史之六朝诗文</title>
      <link href="/2019/11/13/%E4%B8%AD%E5%9B%BD%E5%8F%A4%E5%85%B8%E6%96%87%E5%AD%A6%E5%8F%B2%E7%95%A5%E4%B9%8B%E5%85%AD%E6%9C%9D%E8%AF%97%E6%96%87/"/>
      <url>/2019/11/13/%E4%B8%AD%E5%9B%BD%E5%8F%A4%E5%85%B8%E6%96%87%E5%AD%A6%E5%8F%B2%E7%95%A5%E4%B9%8B%E5%85%AD%E6%9C%9D%E8%AF%97%E6%96%87/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><p><strong>六朝</strong>：</p><ul><li>吴、东晋、宋、齐、梁、陈皆建都建康（南京）。</li><li>魏、晋、后魏、北齐、北周、隋。<a id="more"></a></li><li>三国至隋之泛称。</li></ul><h4 id="一、建安风骨说"><a href="#一、建安风骨说" class="headerlink" title="一、建安风骨说"></a>一、建安风骨说</h4><p>风骨：中国古代文论的基本概念和术语。实质是对文学作品内容和文辞的美学要求。 </p><p>《宋书·武帝纪》称刘裕“风骨奇特”，《世说新语·赏誉门》称王羲之“风骨清举”，《南史·蔡撙传》称蔡撙“风骨鲠正”等。<br>刘勰《文心雕龙·风骨》：“是以怊怅述情，必始乎风；沉吟铺辞，莫先于骨。故辞之待骨，如体之树骸；情之含风，犹形之包气。结言端直，则文骨成焉；意气骏爽，则文风生焉。……故练于骨者，析辞必精，深乎风者，述情必显。捶字坚而难移，结响凝而不滞，此风骨之力也。” </p><p>古今对“风骨”的解释主要有三种：</p><ul><li>气也，风主骨付。明曹学佺在《文心雕龙》序说：“风者，化感之本原，性情之符契。诗贵自然，自然者，风也；辞达而已，达者，风也。……故《风骨》一篇，归之于气，气属风也。”又在《风骨》篇的批语中说：“风骨二字虽是分重，然毕定以风为主。风可以包骨，而骨必待乎风也。故此篇以风发端，而归重于气，气属风也。” </li><li>气也，风骨和一。纪昀认为：“气即风骨，更无本末。”</li><li>“骨”为文意，“风”即文辞。</li></ul><p>钟嵘在《诗品》中曾称曹植“骨气奇高”；在《诗品序》中又指出：“永嘉时，贵黄、老，稍尚虚谈，于时篇什，理过其辞，淡乎寡味。…建安风力尽矣。”建安（196－220）是东汉最后一个皇帝刘协（汉献帝）的年号。<br>刘勰在《文心雕龙·时序》中说：“观其时文，雅好慷慨，良由世积乱离，风衰俗怨，并志深而笔长，故梗概而多气也。”<br>曹丕在《典论·论文》中言：“今之文人，鲁国孔融文举，广陵陈琳孔璋，山阳王粲仲宣，北海徐幹伟长，陈留阮瑀元瑜，汝南应玚德琏，东平刘桢公幹。期七子者，于学无所遗，于辞无所假，咸以自骋骥騄于千里，仰齐足而并驰。” </p><h4 id="二、诗人曹植"><a href="#二、诗人曹植" class="headerlink" title="二、诗人曹植"></a>二、诗人曹植</h4><p>字子建（192－232），操之子、丕之弟 ，建安之杰。</p><p>钟嵘《诗品·魏陈思王植》：其源出於《国风》。骨气奇高，词采华茂，情兼雅怨，体被文质，粲溢今古，卓尔不群。嗟乎！陈思之於文章也，譬人伦之有周、孔，鳞羽之有龙凤，音乐之有琴笙，女工之有黼黻。俾尔怀铅吮墨者，抱篇章而景慕，映馀晖以自烛。故孔氏之门如用诗，则公幹升堂，思王入室，景阳、潘、陆，自可坐於廊庑之间矣。<br>曹植前期颇有功名事业心：“戮力上国，流惠下民，建永世之业，流金石之功”(《与杨德祖书》)。当三分后雄心便是：西灭“违命之蜀”，东灭“不臣之吴”，“混同宇内，以致太和”(《求自试表》)。诗歌的主要内容之一，便是表现这种雄心壮志。《薤露篇》说：“愿得展功勤，输力于明君。怀此王佐才，慷慨独不群”。</p><p>白马篇·五古·三国魏·曹植<br>白马饰金羁，连翩西北驰。借问谁家子，幽并游侠儿。<br>少小去乡邑，扬声沙漠垂。宿昔秉良弓，楛矢何参差。<br>控弦破左的，右发摧月支。仰手接飞猱，俯身散马蹄。<br>狡捷过猴猿，勇剽若豹螭。边城多警急，胡虏数迁移。<br>羽檄从北来，厉马登高堤。长驱蹈匈奴，左顾陵鲜卑。<br>弃身锋刃端，性命安可怀？父母且不顾，何言子与妻？<br>名编壮士籍，不得中顾私。捐躯赴国难，视死忽如归。</p><h4 id="三、诗人曹丕"><a href="#三、诗人曹丕" class="headerlink" title="三、诗人曹丕"></a>三、诗人曹丕</h4><p>字子桓（187－226），操次子，兄曹昂早死，建安22年立为魏太子，25年代汉帝自立，在位5年又7个月。丕不如乃父曹操，政治上追慕无为而治，开明、宽厚、恤民，在军事上无曹操的雄才大略，生活悠闲，故从内容上远不及父弟丰富。</p><p>其诗形式上，多样化，四言、五言、六言、七言、杂言无所不有，成就较高的是五、七言诗。内容上，曹丕往往取材于“闾里小事”，偏重抒情，描写男女爱情和游子思妇题材的作品较多，写得也比较好。 </p><p>王夫之《古史评选》说：“长句长篇，斯为开山第一祖。鲍照、李白领此宗风，遂为乐府狮象。”<br>《上留田》：“富人食稻与粱，贫子食糟与糠。”<br>《艳歌何尝行》：“但当饮醇酒，炙肥牛。长兄为二千石，中兄被貂裘。”</p><p>燕歌行·柏梁体·魏·曹丕</p><p>秋风萧瑟天气凉，草木摇落露为霜。<br>群燕辞归雁南翔，念君客游思断肠。<br>慊慊思归恋故乡，君何淹留寄他方。<br>贱妾茕茕守空房，忧来思君不敢忘。<br>不觉泪下沾衣裳，援琴鸣弦发清商。<br>短歌微吟不能长，明月皎皎照我床。<br>星汉西流夜未央，牵牛织女遥相望。<br>尔独何辜限河梁。</p><h4 id="四、诗人蔡琰"><a href="#四、诗人蔡琰" class="headerlink" title="四、诗人蔡琰"></a>四、诗人蔡琰</h4><p>与“七子”可相抗者应为女作家蔡琰，字文姬，约生于灵帝熹平（172－178）年间，为蔡邕女。汉未大乱中，为胡骑所掳。作品共有三篇：五言《悲愤诗》，骚体《悲愤诗》和《胡笳十八拍》。</p><p>悲愤诗（选录）·古诗·汉末·蔡琰<br>所略有万计，不得令屯聚。或有骨肉俱，欲言不敢语。<br>失意几微间，辄言毙降虏。要当以亭刃，我曹不活汝。</p><p>……</p><p>儿前抱我颈，问母欲何之。人言母当去，岂复有还时。<br>阿母常仁测，今何更不慈。我尚未成人，奈何不顾思。<br>见此崩五内，恍惚生狂痴。号泣手抚摩，当发复回疑。</p><h4 id="五、诗人陶潜"><a href="#五、诗人陶潜" class="headerlink" title="五、诗人陶潜"></a>五、诗人陶潜</h4><p>东晋时期，士族清谈玄理的风气更盛，玄言文学占了文坛的统治地位。直到东晋末的陶渊明，才现独特的诗风。<br>陶渊明（365－427），一名潜，字元亮，号五柳先生，浔阳柴桑人。有“大济苍生”的壮志。直到二十九岁才出仕，先后四次为官，后因“我不能为五斗折腰向乡里小儿”解职而归。</p><p>陶渊明去世后，他的至交好友颜延之，为他写下《陶征土诔》，给了他一个“靖节”的谥号。<br>萧统亲自为陶渊明编集、作序、作传。《陶渊明集》是中国文学史上文人专集的第一部。</p><p>孟浩然：“赏读《高士传》，最佳陶征君”。李白：“何日到彭泽，狂歌五柳前”。杜甫：“安能思如陶谢手”。白居易：“常爱陶彭泽，文思何高玄”。辛弃疾：“须信采菊东篱，高情千载，只有陶彭泽”。陆游：“我诗慕渊明，恨不造其微”。龚自珍：“陶潜诗喜咏荆轲”。 </p><p>他的田园诗和谢灵运的山水诗很不相同。谢诗往只给人一幅幅客观的山水画面，陶诗却在使人接触到田园生活画面的同时，而引入到一种境界中去。开创了田园诗一体。</p><p>读山海经·古诗·东晋·陶渊明<br>精卫衔微木，将以填沧海。<br>刑天舞干戚，猛志故常在。<br>同物既无虑，化去不复悔。<br>徒设在昔心，良辰讵可待。</p><h4 id="六、诗人谢灵运"><a href="#六、诗人谢灵运" class="headerlink" title="六、诗人谢灵运"></a>六、诗人谢灵运</h4><p>在清谈中，常常出现一些发挥老庄自然哲学来赞美江南山水的名言隽语。</p><p>谢灵运（285－433），祖籍陈郡阳夏，世居会稽，祖父是谢玄。</p><p>他十八岁就袭封康乐公。他热中政治权势，政治欲望不能满足，心怀愤恨；在永初三年作永嘉太守，就肆意游遨山水，民间听讼，不复关怀。晚年作临川内史，因谋反被收。最后在广州被杀。</p><p>他对玄学佛典又有丰富的知识，所以在诗中装点起来也就很不费力。往往有句无篇，章法单调。总的来说，谢灵运是扭转玄言诗风，开创山水诗派的第一个诗人。</p><p>石壁精舍还湖中作·古诗·南朝宋·谢灵运<br>昏旦变气候，山水含清晖。清晖能娱人，游子憺忘归。<br>出谷日尚早，入舟阳已微。林壑敛暝色，云霞收夕霏。<br>芰荷迭映蔚，蒲稗相因依。披拂趋南径，愉悦偃东扉。<br>虑澹物自轻，意惬理无违。寄言摄生客，试用此道推。</p><h4 id="七、四声八病"><a href="#七、四声八病" class="headerlink" title="七、四声八病"></a>七、四声八病</h4><p>自魏晋以来，中国声韵学受印度梵音学的影响，有了新的发展。齐永明年间，周颙发现汉字的平、上、去、入四种声调，同时诗人沈约，又根据四声和双声叠韵来研究诗句中声、韵、调的配合，指出平头，上尾、蜂腰、鹤膝、大韵、小韵、旁纽、正纽等八种声病必须避免。“一简之内，音韵尽殊；两句之中，轻重悉异”。是诗歌史上的空前创举。</p><p>附八病解：[对后世有所借鉴，然未尽遵之]</p><ul><li><strong>平头</strong>：五言诗第一字、第二字不得与第六字、第七字同声。</li><li><strong>上尾</strong>：第五字不得与第十字同声。</li><li><strong>蜂腰</strong>：五言诗第二字不得与第五字同声，如两头粗中间细。</li><li><strong>鹤膝</strong>：第五字不得与第十五字同声，言两头细中间粗。</li><li><strong>大韵</strong>：如五言诗以“新”为韵，上九个字中不得用“人”“陈”“身”等字。</li><li><strong>小韵</strong>：除韵处外，九字之间亦不能同韵相犯。</li><li><strong>旁纽</strong>：五言一句中不能有声母相同的字。</li><li><strong>正纽</strong>：五言一句中不能有声母韵母全相同的字出现。</li></ul><h4 id="八、梁陈宫体"><a href="#八、梁陈宫体" class="headerlink" title="八、梁陈宫体"></a>八、梁陈宫体</h4><p>诗人和作品的数量愈来愈多，但是诗歌的内容却愈来愈空虚堕落了。“宫体”之名，最早见于《梁书·简文帝纪》对萧纲的评语：“然伤于轻艳，当时号曰宫体”。</p><p>萧纲：“立身先须谨重，文章且须放荡。”<br>代表人物：庾肩吾、庾信，徐攡、徐陵。<br>特点：注重词藻、对偶、声律。大多描写女性之美，形式工巧，声律严整。 </p><p>娼妇怨情十二韵·古诗·南朝梁·简太子萧纲<br>绮窗临画阁，飞阁绕长廊。风散同心结，月送可怜光。<br>仿佛簾中出，妖丽特非常。耻学秦罗髻，羞为楼上妆。<br>散诞披红帔，生情新约黄。斜灯入绵帐，微烟生玉床。<br>六安双玳瑁，八幅两鸳鸯。犹是别时许，留致解心伤。<br>含涕坐度日，俄倾变炎凉。玉关驱夜雪，金气落严霜。<br>飞狐驿使断，交河川路长。荡子无消息，朱唇徒自香。</p><p>咏内人昼眠·古诗·南朝梁·简文帝萧纲<br>北窗聊就枕，南簷日未斜。攀钩落绮障，插捩举琵琶。<br>梦笑开娇面，眠鬟压落花。簟文生玉腕，香汗浸红纱。<br>夫婿恒相伴，莫误是倡家。</p><h4 id="九、诗人鲍照"><a href="#九、诗人鲍照" class="headerlink" title="九、诗人鲍照"></a>九、诗人鲍照</h4><p>鲍照（414？－466），字明远，东海人。他出身寒庶，因献诗临川王刘义庆，得到赏识，擢为国侍郎。以后作过秣陵令、永嘉令、临海王子顼参军。后子顼因谋反赐死，他也死于乱军之中。</p><p>鲍照以“文甚遒丽”的古乐府闻名于诗坛。边塞战争、征夫戍卒生活，是他乐府诗内容中的重要方面。为七言诗的进一步发展树立了榜样，开拓了宽广的道路。南朝文人读他的诗感到“发唱惊挺”、“倾炫心魂”。鲍照是南北朝时代最杰出的诗人。</p><p>钟嵘《诗品》：“总四家而擅美，跨两代而孤出。”</p><p>代出自蓟北门行·古诗·南朝宋·鲍照<br>羽檄起边亭，烽火入咸阳。征骑屯广武，分兵救朔方。<br>严秋筋竿劲，虏阵精且强。天子按剑怒，使者遥相望。<br>雁行缘石径，鱼贯度飞梁。箫鼓流汉思，旌甲被胡霜。<br>疾风冲塞起，沙砾自飘扬。马毛缩如猥，角弓不可张。<br>时危见臣节，乱世识忠良。投躯报明主，身死为国殇。</p><p>这是刘琨死后一百多年久已成为绝响的悲凉慷慨的爱国主义的诗篇。</p><p>拟行路难·古诗·南朝宋·鲍照<br>其一：<br>泻水置平地，各自东西南北流。<br>人生亦有命，安能行叹复坐愁。<br>酌酒以自宽，举杯断绝歌路难。<br>心非木石岂无感，吞声踟躇不敢言。<br>其二：<br>对案不能食，拔剑击柱长太息。<br>丈夫生世会几时，安能蹀躞垂羽翼。<br>弃置罢官去，还家自休息。<br>朝出与亲辞，暮还在亲侧。<br>弄儿床前戏，看妇机中织。<br>自古圣贤尽贫贱，何况我辈孤且直。</p><h4 id="十、骈文规则"><a href="#十、骈文规则" class="headerlink" title="十、骈文规则"></a>十、骈文规则</h4><p><strong>骈文</strong>，又称骈俪文。魏晋后新文体。全盛于南北朝时。清代李兆洛《骈体文抄序》说：“自秦迄隋，其体递变，而文无异名；自唐以来，始有‘古文’之目，而目六朝之文为‘骈俪’，而为其学者，亦自以为与古文殊路。”南北朝的骈文的句式多以四、六字句为主。故至宋称为“四六文”。骈即偶意。</p><p>《文心雕龙·章句篇》说“四字密而不促，六字格而非缓。或变之以三五，盖应机之权变也。”<br>对偶是用字数相等、结构相同、同位词性相同或相近的一对短语或句子来表达两个相对或相近意思的修辞方式。</p><p>对偶分四种、两组：一组是事对和言对，一组是正对和反对。</p><ul><li><strong>合掌例</strong>：游雁比翼翔，归鸿知接翮。聚散皆是缘，离合总关情。赤县繁荣岁，神州昌盛年。大家都罢课，集体去逃学。万户鸣杯，四海欢声鸣炮竹；千家闹酒，五湖笑语闹烟花。 </li><li><strong>隔断例</strong>：山明水秀，春风又绿江南岸；气正质刚，血性荣膺民族魂。 </li></ul><p>骈文注重形式美，当然并不等于形式主义。但是，形式主义的作家特别喜欢骈文，形式主义文风的流行促成了骈文的畸形繁荣，而骈文的畸形繁荣又进一步造成形式主义文风的泛滥，却是非常明显的事实。</p><h4 id="十一、骈赋家孔稚圭"><a href="#十一、骈赋家孔稚圭" class="headerlink" title="十一、骈赋家孔稚圭"></a>十一、骈赋家孔稚圭</h4><p>齐朝孔稚圭（448-501），字德璋，会稽山阴（绍兴）人。</p><p>少涉学，有美誉。举秀才，为宋安成王车骑法曹行参军，官至太子詹事。《齐书》有传。有《孔詹事集》。史称他“不乐世务，居宅盛营山水”，“门庭之内，草莱不剪”。但他对皇帝所不喜欢的人也从不稍假宽容，其弹章劾表，著称一时。<br>孔稚圭名言：以天下为量者，不计细耻；以四海为任者，不顾小节。</p><p>北山移文·骈文·南朝·孔稚圭</p><p>钟山之英，草堂之灵，驰烟驿路，勒移山庭：夫以耿介拔俗之标，萧洒出尘之想，度白雪以方洁，干青云而直上，吾方知之矣。</p><p>若其亭亭物表，皎皎霞外，芥千金而不眄，屣万乘其如脱，闻凤吹于洛浦，值薪歌于延濑，固亦有焉。</p><p>岂期终始参差，苍黄翻覆，泪翟子之悲，恸朱公之哭。乍回迹以心染，或先贞而后黩，何其谬哉！呜呼，尚生不存，仲氏既往，山阿寂寥，千载谁赏！</p><p>世有周子，隽俗之士，既文既博，亦玄亦史。然而学遁东鲁，习隐南郭，偶吹草堂，滥巾北岳。诱我松桂，欺我云壑。虽假容于江皋，乃缨情于好爵。</p><p>其始至也，将欲排巢父，拉许由，傲百氏，蔑王侯。风情张日，霜气横秋。或叹幽人长往，或怨王孙不游。谈空空于释部，覈玄玄于道流，务光何足比，涓子不能俦。</p><p>及其鸣驺入谷，鹤书赴陇，形驰魄散，志变神动。尔乃眉轩席次，袂耸筵上，焚芰制而裂荷衣，抗尘容而走俗状。风云悽其带愤，石泉咽而下怆，望林峦而有失，顾草木而如丧。</p><p>至其钮金章，绾墨绶，跨属城之雄，冠百里之首。张英风于海甸，驰妙誉于浙右。道帙长摈，法筵久埋。敲扑諠嚣犯其虑，牒诉倥偬装其怀。琴歌既断，酒赋无续，常绸缪于结课，每纷纶于折狱，笼张赵于往图，架卓鲁于前箓，希踪三辅豪，驰声九州牧。 </p><p>使我高霞孤映，明月独举，青松落阴，白云谁侣？磵户摧绝无与归，石径荒凉徒延佇。至于还飙入幕，写雾出楹，蕙帐空兮夜鹤怨，山人去兮晓猨惊。昔闻投簪逸海岸，今见解兰缚尘缨。于是南岳献嘲，北陇腾笑，列壑争讥，攒峰竦诮。慨游子之我欺，悲无人以赴吊。</p><p>故其林惭无尽，涧愧不歇，秋桂遣风，春萝罢月。骋西山之逸议，驰东皋之素谒。</p><p>今又促装下邑，浪栧上京，虽情殷于魏阙，或假步于山扃。岂可使芳杜厚颜，薜荔蒙耻，碧嶺再辱，丹崖重滓，尘游躅于蕙路，污渌池以洗耳。宜扃岫幌，掩云关，敛轻雾，藏鸣湍。截来辕于谷口，杜妄辔于郊端。于是丛条瞋胆，叠颖怒魄。或飞柯以折轮，乍低枝而扫迹。请迥俗士驾，为君谢逋客。</p><h4 id="十二、骈赋家庚信"><a href="#十二、骈赋家庚信" class="headerlink" title="十二、骈赋家庚信"></a>十二、骈赋家庚信</h4><p>庾信（513—581）字子山，南阳新野人。为宫体文学的代表作家，文学风格被称为“徐庾体”。</p><p>侯景叛乱时，庾信逃往江陵，辅佐梁元帝。后奉命出使西魏，在此期间，梁为西魏所灭，被强迫留在北方，官至车骑大将军、开府仪同三司。北周代魏后，更迁为骠骑大将军、开府仪同三司，封侯。</p><p>庾信一方面身居显贵，被尊为文坛宗师，受皇帝礼遇，与诸王结交，一方面又深切思念故国，为自己身仕敌国而羞愧。作有《春赋》、《对烛赋》、《荡子赋》、《哀江南赋》、《枯树赋》、《竹杖赋》、《小园赋》、《伤心赋》。庚信是南北朝骈赋、骈文成就最高的作家 。 </p><p>小园赋（节选)）·骈文·北周·庾信</p><p>若夫一枝之上，巢父得安巢之所；一壶之中，壶公有容身之地。况乎管宁藜床，虽穿而可座；嵇康锻灶，既暖而堪眠。岂必连闼洞房，南阳樊重之第；赤墀青锁，西汉王根之宅。余有数亩敝庐，寂寞人外，聊以拟伏腊，聊以避风霜。虽复晏婴近市，不求朝夕之利；潘岳面城，且适闲居之乐。况乃黄鹤戒露，非有意于轮轩；爰居避风，本无情于钟鼓。陆机则兄弟同居，韩康则舅甥不别，蜗角蚊睫，又足相容者也。</p><p>尔乃窟室徘徊，聊同凿坯。桐间露落，柳下风来。琴号珠柱，书名玉杯。有棠梨而无馆，足酸枣而非台。犹得敧侧八九丈，纵横数十步，榆柳两三行，梨桃百余树。拔蒙密兮见窗，行敧斜兮得路。蝉有翳兮不惊，雉无罗兮何惧！草树混淆，枝格相交。山为篑覆，地有堂坳。藏狸并窟，乳鹊重巢。连珠细茵，长柄寒匏。可以疗饥，可以栖迟，崎岖兮狭室，穿漏兮茅茨。檐直倚而妨帽，户平行而碍眉。坐帐无鹤，支床有龟。鸟多闲暇，花随四时。心则历陵枯木，发则睢阳乱丝。非夏日而可畏，异秋天而可悲。</p><p>一寸二寸之鱼，三竿两竿之竹。云气荫于丛蓍，金精养于秋菊。枣酸梨酢，桃榹李薁。落叶半床，狂花满屋。名为野人之家，是谓愚公之谷。试偃息于茂林，乃久羡于抽簪。虽有门而长闭，实无水而恒沉。三春负锄相识，五月披裘见寻。问葛洪之药性，访京房之卜林。草无忘忧之意，花无长乐之心。鸟何事而逐酒？鱼何情而听琴？</p><p>加以寒暑异令，乖违德性。崔骃以不乐损年，吴质以长愁养病。镇宅神以薶石，厌山精而照镜。屡动庄舄之吟，几行魏颗之命。薄晚闲闺，老幼相携；蓬头王霸之子，椎髻梁鸿之妻。燋麦两瓮，寒菜一畦。风骚骚而树急，天惨惨而云低。聚空仓而雀噪，惊懒妇而蝉嘶。</p><p>昔草滥于吹嘘，籍文言之庆余。门有通德，家承赐书。或陪玄武之观，时参凤凰之墟。观受釐于宣室，赋长杨于直庐。</p><p>遂乃山崩川竭，冰碎瓦裂，大盗潜移，长离永灭。摧直辔于三危，碎平途于九折。荆轲有寒水之悲，苏武有秋风之别。关山则风月凄怆，陇水则肝肠断绝。龟言此地之寒，鹤讶今年之雪。百龄兮倏忽，光华兮已晚。不雪雁门之踦，先念鸿陆之远。非淮海兮可变，非金丹兮能转。不暴骨于龙门，终低头于马坂。谅天造兮昧昧，嗟生民兮浑浑。</p><h4 id="十三、骈文的地位影响"><a href="#十三、骈文的地位影响" class="headerlink" title="十三、骈文的地位影响"></a>十三、骈文的地位影响</h4><p>骈文孕育于汉赋，而大盛于魏晋南北朝。</p><p>除句式外，在练字上，骈文的出现使作家更注重文字学，善于驾驶文字。并且要求用字力求简易，于平中见奇，陈中见新，朴中见色。<br>对偶显得整齐，加上散句，又显得不呆板。唐代的律诗中间两联对偶，首尾两联并不要求对偶，正符合整齐错综之美。<br>无伦从何种角度考虑问题，我们都应给骈文以足够的重视，否则，我国古代文学发展史中的一些现象和规律，是说不清，也是说不完全的。</p><h4 id="十四、褚文选录"><a href="#十四、褚文选录" class="headerlink" title="十四、褚文选录"></a>十四、褚文选录</h4><p>领航地学赋·骈文·本朝·褚宝增 边一 包含<br>序：此文为中国地质大学（北京）60周年校庆晚会而作。以我之《中国地质大学（北京）五十年志》、学棣边一之《领航地学赋》初稿、学棣包含之《同行颂》为基础，按学校诸位领导及晚会总导演刘国超先生对朗诵需文而易懂、回避典故的要求，最终由我重新创作完成。<br>国家初建，矿产维艰。抽北大与清华，选天大与唐山。调整战略，筹组地院。肇始端王府，发祥三圣庵。四翼腾举，九州踏勘。硕儒明道，足智攻坚。云苍苍，何惧天涯历险；风潇潇，笑傲清角吹寒。成绩卓越，规模彰显。<br>然时运多难，风云惊变。逼枝徙楚邑，根蛰京垣。待烟熄火平，河清海晏。始根枝相援，南北共建。蓝图描绘，旌旗舒卷。朝气盈实，豪情饱满。规模渐整，院系趋全。理文并重，体学皆善。院士迭出，英才涌现。<br>名号呼曰摇篮，思维必当率先。穷究天人之际，洞晓古今之变。为地球补说明，为人类立史传。欲绵延一脉，需践行六点：<br>日月盈亏，寒暑迭换。川泽纡而峰岭峻，沧海易而桑田迁。育麦黍以养生灵，蕴奇珍以助天年。实人类仰环境存身，依地球向天体放眼。<br>论及脚下，追及史前。化石将过客存照，地层绘代际演变。物种枯荣尽晓，板块运动明鉴。今人脱胎于古猿，青峰发轫于水岸。<br>金生丽水之里，玉出昆冈之巅。油气乃能源之主力；矿石乃工业之本原。故需深研理论，躬行实践。合理开采，保环境完好；优化配置，使效益翻番。研发新技术，探索新资源。利用永续，保障久远。<br>陆无常，地震泥流；山有变，滑坡塌陷。田舍摧毁，沃野凋残。应危艰谁堪用命？地学人一马当先。摸清规律，准确预断。合理评估，防患未然；从容排险，力挽狂澜。救苍生于累卵，匡社稷以长安。<br>传统手段，已然受限；他山之石，可以借鉴。兼收并纳，创新融贯。数理模型，信息光电。涉猎天体，驶出海岸。互动学科，交叉边缘。取径宽而地学之根弥壮，师法众而地学之脉益远。<br>日月星三光并灿，天地人三才合焉。拓开新领域，冲破旧篱樊。原子到粒子，微观到宏观。物候到气候，时间到空间。天行总有常，制命渐完善。莫背道而妄为，令持续而发展。千岩竞秀，俱山川而齐悦；万壑争流，侣草木而共安。泽当代以兴邦，惠子孙以无怨。<br>又灿矣心情，美哉校园。高楼比肩耸立，大路交格殷连。教学楼，多媒体辅助；实验室，高科技领衔。体育场，有常绿草坪；图书馆，供更新书卷。幽径释怀，静椅偷闲。春嗅花香，夏寻风鲜；秋拾叶黄，冬戏雪寒。四序各张其韵，万人各赋其篇。如此环境宜人，岂无华章惊天。<br>凭师资之雄厚，致学术之超前。国际交流，谁执牛耳；国内立项，我挥马鞭。广博而不失精深，全面而不失重点。校友有成，师生勤勉。承国家之大任，赢世界之美赞。<br>祖国复兴可待，吾校辉煌必然。丹枫香桂，秋水长天。时运绵邈，德才炳焕。领风骚安足一域，跃龙潭直上九寰。 </p><h4 id="以上内容均来自褚宝增老师讲义"><a href="#以上内容均来自褚宝增老师讲义" class="headerlink" title="以上内容均来自褚宝增老师讲义"></a>以上内容均来自褚宝增老师讲义</h4></font></html>]]></content>
      
      
      <categories>
          
          <category> 古典文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 古典文学史 </tag>
            
            <tag> 诗词 </tag>
            
            <tag> 六朝 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国古典文学史之汉赋乐府</title>
      <link href="/2019/11/13/%E4%B8%AD%E5%9B%BD%E5%8F%A4%E5%85%B8%E6%96%87%E5%AD%A6%E5%8F%B2%E7%95%A5%E4%B9%8B%E6%B1%89%E8%B5%8B%E4%B9%90%E5%BA%9C/"/>
      <url>/2019/11/13/%E4%B8%AD%E5%9B%BD%E5%8F%A4%E5%85%B8%E6%96%87%E5%AD%A6%E5%8F%B2%E7%95%A5%E4%B9%8B%E6%B1%89%E8%B5%8B%E4%B9%90%E5%BA%9C/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="一、汉赋的成因与特点"><a href="#一、汉赋的成因与特点" class="headerlink" title="一、汉赋的成因与特点"></a>一、汉赋的成因与特点</h4><p>成因一：楚声的传播。《史记·高祖本纪》，刘邦对酒曾唱《大风歌》：“大风起兮云飞扬，威加海内兮归故乡，安得猛士兮守四方!” </p><a id="more"></a><p>成因二：纵横之风的逐渐消失和转变。<br>成因三：宫廷娱乐的需要。《汉书·严助传》：“其尤亲幸者，东方朔、枚皋、严助、吾丘寿王、司马相如。相如常称疾避事，朔、皋不根持论，上颇俳优畜之。”《汉书·王褒传》：“太子体不安，苦忽忽善忘，不乐。诏使褒等皆之太子宫虞侍太子，朝夕诵读奇文及所自造作。疾平复，乃归。太子嘉褒所为《甘泉》及《洞箫颂》，令后宫贵人左右皆诵读之。”<br>成因四：文体发展的自然趋势。</p><p>特点一：《文心雕龙。诠赋》说：“赋者，铺也，铺采摛文，体物写志也。”汉代大赋更多模山范水，叙写宫苑游猎之作，大量地罗列各种珍禽奇兽、名花异木、虫鱼水族、车旗仪仗，名目繁多。<br>特点二：在内容上通过“体物”以“写志”。把散文的章法、句式与诗歌的韵律、节奏结合在一起。<br>特点三：在题材上，反应宫廷生活颇多。“情少而辞多”。<br>特点四：汉赋的体势在楚赋的基础上有新的发展。形成了骋辞大赋，还产生了俳赋。</p><h4 id="二、赋家及其作品"><a href="#二、赋家及其作品" class="headerlink" title="二、赋家及其作品"></a>二、赋家及其作品</h4><p>汉初赋家唯有陆贾、朱建、赵幽王、贾谊四人。陆贾赋《汉志》称有三篇，今不存；朱建赋也不可见；赵幽王赋殊无文采。唯贾谊一家矣。</p><p>（一）、<strong>贾谊</strong>（前200－前168）。汉族，洛阳人。西汉初年著名的政论家、文学家。代表作：散文如 <strong>《过秦论》、《论积贮疏》、《陈政事疏》</strong> 等都很有名；辞赋以 <strong>《吊屈原赋》、《鵩鸟赋》</strong> 最著名。</p><p>少时受学于荀况的弟子张苍和李斯的弟子吴公。21岁，博士；22 岁，太中大夫 。23岁，长沙王太傅。 27岁 ，回长安。李商隐：“宣室求贤访逐臣，贾生才调更无伦。可怜夜半虚前席，不问苍生问鬼神。”为梁怀王太傅 。提出“众建诸侯而少其力”的方针。31岁，梁怀王刘揖入朝，骑马摔死了，贾谊深深自责，经常哭泣，心情十分忧郁。文帝十二年（前168年），贾谊在忧郁中死了，时32周岁。</p><p>鲁迅曾说，他与晁错的文章“皆为西汉鸿文，沾溉后人，其泽甚远。” 王安石：“一时谋议略实行，谁道君王薄贾生？爵位自高言尽废，古来何啻万公卿。</p><p>吊屈原赋（节选）·赋·西汉·贾谊<br>恭承嘉惠兮，俟罪长沙。侧闻屈原兮，自沉汨罗。造讬湘流兮，敬吊先生。遭世罔极兮，乃殒厥身。呜呼哀哉！逢时不祥。鸾凤伏窜兮，鸱枭翱翔。阘茸尊显兮，谗谀得志。贤圣逆曳兮，方正倒植。世谓随、夷为溷兮，谓跖、蹻为廉；莫邪为钝兮，铅刀为銛。吁嗟默默，生之无故兮。斡弃周鼎，宝康瓠兮。腾驾罢牛，骖蹇驴兮。骥垂两耳，服盐车兮。章甫荐履，渐不可久兮。嗟苦先生，独离此咎兮。</p><p>（二）、<strong>枚乘</strong>（？～前140)，<strong>字叔</strong>，西汉辞赋家。秦建治时古淮阴（今淮安市楚州区河下镇）人。曾做过吴王刘濞、梁王刘武的文学侍从。枚乘文学上的主要成就是辞赋。《汉书·艺文志》著录“枚乘赋九篇”。 </p><p>七国之乱前，曾上书谏阻吴王起兵；七国叛乱中，又上书劝谏吴王罢兵。吴王均不听。七国之乱平定后，枚乘因此而显名。景帝时，拜为弘农都尉，因非其所好，以病去官。武帝即位后，以“安车蒲轮”征之，因年老，死于途中。</p><p>七发（选录）·赋·西汉·枚乘<br>今夫贵人之子，必宫居而闺处。内有保姆，外有傅父。……故曰：纵耳目之欲，恣支体之安者，伤血脉之和。且夫出舆入辇，命曰蹶痿之机。洞房清宫，命曰寒热之媒。皓齿娥眉，命曰伐性之斧。甘脆肥脓，命曰腐肠之药。……越女侍前，齐姬奉后。往来游宴，纵恣于曲房隐间之中，此甘餐毒药，戏猛兽之爪牙也。所从来者至深远，淹滞永久而不废。虽令扁鹊治内，巫咸治外，尚何及哉！</p><p>（三）、<strong>司马相如</strong>（约前179年—前118年），<strong>字长卿</strong>，汉族，蜀郡人。因仰慕战国时的名相蔺相如而名。西汉大辞赋家，后人称之为<strong>赋圣</strong>。<strong>他与卓文君的私奔故事也广为流传</strong>。<br>《汉书·艺文志》著录“司马相如赋二十九篇”，现存《子虚赋》、《天子游猎赋》（《上林赋》）、《大人赋》、《长门赋》、《美人赋》、《哀秦二世赋》6篇，另有《梨赋》、《鱼葅赋》、《梓山赋》3篇仅存篇名。<br>扬雄：“长卿赋不似从人间来，其神化所至邪！”鲁迅：“武帝时文人，赋莫若司马相如，文莫若司马迁。”<br>司马相如赋的艺术特点：</p><ol><li>结构宏伟，富丽堂皇。 </li><li>讲究绘声绘色，有声有色。 </li><li>极大程度的利用了汉字字形构造的特点，在字形排列上给阅读者强烈视觉刺激。</li></ol><p>崭岩参嵳，九嵕嶻嶭。南山峨峨，岩陁甗崎，摧崣崛崎。…鰅鰫鳍鮀，禺禺魼鳎。…茈姜蘘荷，葴持若荪。…騊駼橐驼，蛩蛩驒騱，駃騠驴骡。</p><p>（四）、<strong>赵壹，字元叔</strong>，汉阳西县，生卒年不详。东汉。恃才傲物。</p><p>建宁元年（168年）赴洛阳向朝廷上计簿。访皇甫规未果。留言：“实望仁兄，昭其悬迟，以贵下贱，握发垂接，高可敷玩坟典，起发圣意，下则抗论当世，消弭时灾。岂悟君子自生怠倦，失恂恂善诱之德，同亡国骄惰之志！” 光和元年（178年），赵壹上计簿。时袁滂任司徒。拜访河南尹羊陟。</p><p>清刘熙载《艺概》说：“后汉赵元叔《穷鸟赋》及《刺世疾邪赋》，读之知为抗脏之士。惟径直露骨，未能如屈贾之味馀文外耳。” </p><p>刺世疾邪赋（节选）·赋·东汉·赵壹<br>邪夫显进，真士幽藏。<br>所好则钻皮出其毛羽，所恶则洗垢求其瘢痕。虽欲竭诚而进忠，路绝险而蘼缘。<br>故法禁屈挠于势族，恩泽不逮于单门。宁饥寒于尧舜之荒岁兮，不饱于当今之丰年。乘理虽死而非亡，违义虽生而匪存。</p><h4 id="三、汉赋的成就与地位"><a href="#三、汉赋的成就与地位" class="headerlink" title="三、汉赋的成就与地位"></a>三、汉赋的成就与地位</h4><p>挚虞在《文章流别论》说：“古诗之赋。以情义为主，以事类为佐；今之赋，以事形为本,以义正为助。”“假象过大，则与类相远；逸词过壮，则与事相违；辨言过理，则与文相失，丽靡过美，则与情相悖。”<br>汉赋成就与地位： 首先，对统治者的劝谕。其次，在丰富文学作品的词汇，锻炼语言辞句，描写技巧方面，得了一定成就。</p><h4 id="四、关于乐府"><a href="#四、关于乐府" class="headerlink" title="四、关于乐府"></a>四、关于乐府</h4><p>两汉之乐府是指音乐机关。魏晋六朝却将乐府所唱之诗，汉人原叫“歌诗”的也叫“乐府”，唐则已抛开音乐性，只注重社会内容了。宋元以后，也有称词、曲为乐府的。<br>《汉书.艺文志》载西汉乐府篇目有138首，现在东汉总共不过40首，郭茂倩编《乐府诗集》有所增广。分12类。<br>1.郊庙歌辞；2.燕射歌辞；3.鼓吹曲辞；4.横吹曲辞；<br>5.相和歌辞；6.清商曲辞；7.舞曲歌辞；8.琴曲歌辞；<br>9.杂曲歌辞；10.近代曲辞；11.杂歌谣辞；12.新乐府辞。<br>主要保存3、5、11三类。</p><h4 id="五、乐府的内容思想"><a href="#五、乐府的内容思想" class="headerlink" title="五、乐府的内容思想"></a>五、乐府的内容思想</h4><p><strong>感于哀乐，缘事而发。</strong></p><p>（一）民生凋敝<br>病妇行·乐府·汉·无名氏<br>病妇连年累岁，传呼丈人前。一言当言，未及得言，不知泪下一何翩翩。属累君两三孤子，莫我儿饥且寒，有过惧莫笪笞，行当折摇。思复念之。乱曰：抱时无衣，襦复无里。闭门塞牖，舍孤几到市。道逢亲交，泣坐不能起，从乞求与孤儿买饵。对交啼泣，泪不可止。我欲不伤悲，不能已。探怀中钱，持授交。入门见孤儿，啼索其母抱。徘徊空室中，行复尔耳，弃置勿复道。</p><p>（二）战争谣役<br>十五从军行·乐府·汉·无名氏<br>十五从军行，八十始得归。道逢乡里人，家中有阿谁。<br>遥望是君家，松柏冢累累。兔从狗窦入，雉从梁上飞。<br>中庭生旅谷，井上生旅葵。舂谷持作饭，采葵持作羹。<br>羹饭一时熟，不知贻阿谁。出门东向望，泪落沾我衣。 </p><p>（三）婚姻制度<br>三从：在家从父，出嫁从夫，夫死从子。<br>四德：德、容、言、工。<br>七去：不顺父母去，无子去，淫去，妒去，有恶疾去，多言去，窃盗去。 </p><p>上山采蘼芜·古诗·汉·无名氏<br>上山采蘼芜，下山逢故夫。长跪问故夫，新人复何如。<br>新人虽言好，未若故人姝。颜色类相似，手爪不相如。<br>新人从门入，故人从閤去。新人工织缣，故人二织素。<br>织缣日一匹，织素五丈余。将缣来比素，新人不如故。</p><h4 id="六、乐府的艺术特色"><a href="#六、乐府的艺术特色" class="headerlink" title="六、乐府的艺术特色"></a>六、乐府的艺术特色</h4><p>（一）通过人物的语言和行动来表现人物性格。对话独白行动有声有色，形象生动，令人如闻其声，如见其人。<br>（二）语言朴素自然而带感情、爱憎，使叙事与抒情结合。<br>（三）形式的自由和多样。长短随意，尤其五言体的出现是形式上的一个伟大成就。<br>（四）浪漫主文的色彩。如《陌上桑》。</p><h4 id="七、乐府的地位影响"><a href="#七、乐府的地位影响" class="headerlink" title="七、乐府的地位影响"></a>七、乐府的地位影响</h4><p>（一）其影响首先表现在“感于哀乐，缘事而出”的现实主义精神上。“缘事而发”（汉乐府民歌），“借古写今”（建安曹植诸人的古题乐府），“即事名篇，无复依傍”（杜甫创作的新题乐府），“歌诗合为事而作”（元白提倡的新乐府运动）。<br>（二）汉乐府民歌的影响还表现在对新的诗歌形式的创造上。<br>（三）在艺术手法上，特别在叙事诗的写作技艺上，影响显著。</p><p><strong>《孔雀东南飞》</strong>是我国专收女人为题材的诗集《玉台新咏》的首篇，《玉台新咏》是继《诗经》《楚辞》之后我国出现的第三本诗歌总集。 </p><p>羽林郎·古诗·汉·辛延年<br>昔有霍家奴，姓冯名子都。依倚将军势，调笑酒家胡。<br>胡姬年十五，春日独当垆。长裾连理带，广袖合欢襦。<br>头上蓝田玉，耳后大秦珠。两鬟何窈窕，一世良所无。<br>一鬟五百万，两鬟千万余。不意金吾子，娉婷过我庐。<br>银鞍何煜爚，翠盖空踟蹰。就我求清酒，丝绳提玉壶。<br>就我求珍肴，金盘脍鲤鱼。贻我青铜镜，结我红罗裾。<br>不惜红罗裂，何论轻贱躯！男儿爱后妇，女子重前夫。<br>人生有新故，贵贱不相逾。多谢金吾子，私爱徒区区。</p><p>西北有高楼·古诗·汉·（托）李陵<br>西北有高楼。上与浮云齐。交疏结绮窗。阿阁三重阶。<br>上有弦歌者。音响一何悲。谁能为此曲。无乃杞梁妻。<br>清商随风发。中曲正徘徊。一弹再三叹。慷慨有余哀。<br>不惜歌者苦。但伤知音稀。愿为双鸿鹄。奋翅起高飞。</p><p>四愁诗·古诗·东汉·张衡</p><p>我所思兮在太山，欲往从之梁父艰，侧身东望涕沾翰。</p><p>美人赠我金错刀，何以报之英琼瑶。</p><p>路远莫致倚逍遥，何为怀忧心烦劳。</p><p>我所思兮在桂林，欲往从之湘水深，侧身南望涕沾襟。</p><p>美人赠我琴琅玕，何以报之双玉盘。</p><p>路远莫致倚惆怅，何为怀忧心烦伤。</p><p>我所思兮在汉阳，欲往从之陇阪长，侧身西望涕沾裳。</p><p>美人赠我貂襜褕，何以报之明月珠。</p><p>路远莫致倚踟蹰，何为怀忧心烦纡。</p><p>我所思兮在雁门，欲往从之雪雰雰，侧身北望涕沾巾。</p><p>美人赠我锦绣段，何以报之青玉案。</p><p>路远莫致倚增叹，何为怀忧心烦惋。</p><h4 id="以上内容均来自褚宝增老师讲义"><a href="#以上内容均来自褚宝增老师讲义" class="headerlink" title="以上内容均来自褚宝增老师讲义"></a>以上内容均来自褚宝增老师讲义</h4></font></html>]]></content>
      
      
      <categories>
          
          <category> 古典文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 古典文学史 </tag>
            
            <tag> 汉朝 </tag>
            
            <tag> 汉赋 </tag>
            
            <tag> 乐府 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国古典文学史之诗经楚辞</title>
      <link href="/2019/11/13/%E4%B8%AD%E5%9B%BD%E5%8F%A4%E5%85%B8%E6%96%87%E5%AD%A6%E5%8F%B2%E7%95%A5%E4%B9%8B%E8%AF%97%E7%BB%8F%E6%A5%9A%E8%BE%9E/"/>
      <url>/2019/11/13/%E4%B8%AD%E5%9B%BD%E5%8F%A4%E5%85%B8%E6%96%87%E5%AD%A6%E5%8F%B2%E7%95%A5%E4%B9%8B%E8%AF%97%E7%BB%8F%E6%A5%9A%E8%BE%9E/</url>
      
        <content type="html"><![CDATA[<html><font face="Times New Roman,宋体" size="4"><h4 id="一、诗经的形成"><a href="#一、诗经的形成" class="headerlink" title="一、诗经的形成"></a>一、诗经的形成</h4><p>《诗经》是我国第一部诗歌总集，共收入三百零五篇，故又简称《诗三百》，是周代前中段五百多年间的诗歌选录。</p><a id="more"></a><p>《墨子·公孟篇》言：“诵诗三百，絃诗三百，歌诗三百，舞诗三百”。</p><p>《左传·襄公二十一年》记载：“吴公子札来聘，请观于周乐，使工为之歌。《周南》、《召南》、《邶》、《鄘》、《卫》、《王》、《郑》、《齐》、《豳》（邠）、《秦》、《魏》、《唐》、《陈》、《郐》、《曹》、《小雅》、《大雅》、《颂》。”</p><p>《诗经》虽遭秦火焚毁，但由于学者之讽诵，至汉复得流传。</p><p>汉代传授《诗经》的有四家：齐之猿固，鲁之申培，燕之韩婴，赵之毛亨毛苌。齐诗亡于曹魏之时，鲁诗亡于晋朝东渡，韩诗亡于宋朝南渡。独毛诗大行于世。</p><p>《易》、《书》、《诗》、《礼》、《乐》、《春秋》合称《六艺》，又称为《六经》。 </p><h4 id="二、诗经的分类"><a href="#二、诗经的分类" class="headerlink" title="二、诗经的分类"></a>二、诗经的分类</h4><ol><li><p><strong>风</strong>一百六十篇，多属民谣民歌。<br>《风》为乐曲曲调的风格或性质。土风就是本土的曲调。乐曲的风与风俗的风也有联系，诗有时风、世风、地风之意。综而述之，国风即为各国的乐曲。</p></li><li><p><strong>雅</strong>有《小雅》、《大雅》，合称《二雅》，共一百零五篇。是西周王朝直接统治地域——“王畿”的诗歌。<br>雅有大小之分，清惠周惕《诗说》认为以乐中大吕、小吕而分而得，故为乐调之区别也。</p></li><li><p><strong>颂</strong>有《周颂》、《鲁颂》、《商颂》，合称三颂，共四十篇。</p></li></ol><h4 id="三、诗经的地域时代"><a href="#三、诗经的地域时代" class="headerlink" title="三、诗经的地域时代"></a>三、诗经的地域时代</h4><p>《诗经》按产生地域分编，共计：周南、召南、邶、鄘、卫、王、郑、齐、豳、秦、魏、唐、陈、郐、曹、雅（夏） 、鲁、宋十八个地域。 </p><p>《周南》、《召南》前者十一篇，后者十四篇，皆为南方作品，西周初期，周公姬旦长住东都洛阳，召公姬奭长住西都镐京。</p><p>《邶》、《庸》、《卫》三十九篇，在春秋时便以混在一起，今本《诗经》：《邶》十九篇，《庸》十篇，《卫》十篇是汉人随意分的。东周作品。</p><p>《王》诗十篇，东周王国境内的作品</p><p>《郑》诗二十篇，西周宣王时封他弟姬友于郑，即郑桓公。为东周作品。</p><p>《齐》诗十一篇。周武王时封大臣吕望（姜太公）于齐，多为西周时作品。</p><p>《魏》诗七篇，国君姓姬，始受者不详。</p><p>《唐》诗十二篇，唐国即晋国，周成王封其弟姬叔于唐，东周作品。</p><p>《秦》诗十篇，国君姓赢，西周孝王封其臣非子于秦。</p><p>《陈》诗十篇，武王封舜的后人媯满于陈，东西周作品皆有。</p><p>《郐》诗四篇，国君始于传为帝颛顼后代姓妘，西周作品。</p><p>《曹》诗四篇，周武王封其弟姬振铎于曹，东周作品。</p><p>《豳》诗七篇，西周时亡，归秦，西周作品。</p><p>《小雅》七十四篇。</p><p>《大雅》三十一篇，皆为西周王畿的诗。</p><p>《周颂》诗三十一篇，西周作品。</p><p>《鲁颂》诗四篇，周成王封周公之子姬伯禽于鲁，春秋中期作品。</p><p>《商颂》诗五篇，非商代作品，而是周代宋国作品。</p><h4 id="四、诗经的创作手法"><a href="#四、诗经的创作手法" class="headerlink" title="四、诗经的创作手法"></a>四、诗经的创作手法</h4><p><strong>叙物言情曰赋，索物托情曰比，触物起情曰兴。</strong></p><p>朱熹言：“赋者，敷陈其事而直言之者也。”也就是叙述和描写。</p><p>朱熹言：“比者，以彼物比此物也。”即比喻。  明喻：“有女如玉”或“有力如虎”；隐喻；借喻；博喻：“有匪君子，如切如磋，如琢如磨”；对喻：“岂其食鱼，必河之鲂！岂其取妻，必齐之姜”。</p><p>最复杂的问题是兴。兴是启发，也称起兴。它是诗人先见一种景物，触动了他心中潜在的本能和思想感情而发出歌唱，故多在开头，又称“发端”，常在每首（章）之开头。</p><h4 id="六、诗人屈原的生平"><a href="#六、诗人屈原的生平" class="headerlink" title="六、诗人屈原的生平"></a>六、诗人屈原的生平</h4><p>屈原，名平，字原，生于楚宣王30年（前340年），且与楚王同宗。《史记·屈原贾生列传》言：“博闻强志，明於治乱，娴于辞令。”</p><p>楚怀王11年（22岁），作楚之左徒。“入则与王图议国事，以出号令；出则接遇宾客，应对诸侯。” 楚国这时正处严重危机时期，外受强秦威胁，内新旧争权激烈。屈原此时坚持“合纵”政策，使楚怀王为“大纵长”。后怀王疏之贬为屈、昭、景王族三姓宗事。秦国遣张仪至楚，许以商於之地六百里，令楚与齐绝交。楚绝齐而复不得地，怒之，在楚怀王17年战于丹淅大败，被秦军斩首八万。复出兵再次伐秦，战于兰田，又惨败。此时怀王招屈原复位，楚怀王十八年，屈原再次使齐，与齐复盟，秦之张仪再说楚，楚又背齐合秦，屈原被逐汉北，成《离骚》。楚怀王30年，秦伐楚，怀王被囚于秦，3年后客死。顷襄王继位，以弟子兰为令尹，屈原江南放逐。顷襄王22年（前277年）的五月五日，自投汨罗而死。</p><h4 id="七、楚辞名源"><a href="#七、楚辞名源" class="headerlink" title="七、楚辞名源"></a>七、楚辞名源</h4><p>汉成帝时刘向定名为《楚辞》。汉代人一般称“楚辞”为赋，十分不当，“楚辞”与赋，前者是诗歌，后者是押韵的散文。</p><p>“楚辞”的产生原因：楚国在长期独立，形成了独特的楚国地方文化，吸收中原文化，南北合流，更重要的是楚国民间的巫歌，地方音乐。</p><p>楚国的方言有特殊的意义，也有特殊的音调。如“扈”、“汩”、“凭”、“羌”、“婵媛”之类。</p><h4 id="八、楚辞的文学影响"><a href="#八、楚辞的文学影响" class="headerlink" title="八、楚辞的文学影响"></a>八、楚辞的文学影响</h4><p>诗人从集体歌唱到个人独立创作。以其爱祖国，爱人民的高贵品格开创了文人人格力量的典范。</p><p>李白：“屈平辞赋悬日月，楚王台榭空山丘。”杜甫：“窃攀屈宋宜方驾，恐与齐梁做后尘。” </p><p>《楚辞》对在汉初特定土壤上产生的铺张扬厉的大赋起到了关键作用。发展了比兴手法：“善鸟香草，以配忠贞，恶禽臭物，以比谗佞”。</p><p>《哀郢》之双叠韵的运用：<br>凌阳侯之泛滥兮，忽翱翔之焉薄！<br>心絓结而不解兮，思蹇产而不释。<br>将运舟而下浮兮，上洞庭而下江。<br>去终古之所居兮，今逍遥而来东。<br>羌灵魂之欲归兮，何须臾而忘反。<br>背夏浦而西思兮，哀故都之日远。  </p><p>《山鬼》中叠字的运用：<br>雷填填兮雨冥冥 ，猨啾啾兮又夜鸣。<br>风飒飒兮木萧萧 ，思公子兮徒离忧。  </p><h4 id="九、离骚选讲"><a href="#九、离骚选讲" class="headerlink" title="九、离骚选讲"></a>九、离骚选讲</h4><p>屈平疾王听之不聪也，谗谄之蔽明也，邪曲之害公也，方正之不容也，故忧愁幽思而作离骚。离骚者，犹离忧也。夫天者，人之始也；父母者，人之本也。人穷则反本，故劳苦倦极，未尝不呼天也；疾痛惨怛，未尝不呼父母也。屈平正道直行，竭忠尽智以事其君，谗人闲之，可谓穷矣。信而见疑，忠而被谤，能无怨乎？屈平之作离骚，盖自怨生也。</p><p>其文约，其辞微，其志絜，其行廉，其称文小而其指极大，举类迩而见义远。其志絜，故其称物芳。其行廉，故死而不容自疏。濯淖污泥之中，蝉蜕於浊秽，以浮游尘埃之外，不获世之滋垢，皭然泥而不滓者也。推此志也，虽与日月争光可也。</p><p>钱钟书：“弃置而复依恋，无可忍而又不忍，欲去还留，难留而亦不易去。即身离故都而去矣，一息尚存，此心安放？”诚哉“哀怨起骚人”。<br>全诗三百七十三句，两千四百九十余字。</p><p>离骚（节录） ·楚辞·楚·屈原<br>[开篇]<br>帝高阳之苗裔兮，朕皇考曰伯庸。<br>摄提贞于孟陬兮，惟庚寅吾以降。<br>皇览揆余初度兮，肇锡余以嘉名。<br>名余曰正则兮，字余曰灵均。<br>[二寻美女]<br>溘吾游此春宫兮，折琼枝以继佩。<br>及荣华之未落兮，相下女之可诒。<br>吾令丰隆乘云兮，求宓妃之所在。<br>解佩纕以结言兮，吾令蹇修以为理。<br>纷总总其离合兮，忽纬繣其难迁。<br>夕归次于穷石兮，朝濯发乎洧盘。<br>保厥美以骄傲兮，日康娱以淫游。<br>虽信美而无礼兮，来违弃而改求。<br>览相观于四极兮，周流乎天余乃下。<br>望瑶台之偃蹇兮，见有容娀之侠女。<br>吾令鸩为媒兮，鸩告余以不好。<br>雄鸠之呜逝兮，余又恶其佻巧。<br>心犹豫而狐疑兮，欲自适而不可。<br>凤凰既受诒兮，恐高辛之先我。<br>欲远集而无所止兮，聊浮游以逍遥。<br>及少康之未家兮，留有虞之二姚。<br>理弱而媒拙兮，恐导言之不固。<br>世溷浊而嫉贤兮，好蔽美而称恶。<br>闺中既以邃远兮，哲王又不寐。<br>怀朕情而不发兮，余焉能忍与此终古。<br>[最后]<br>乱曰，已矣哉。<br>国无人莫我知兮，又何怀乎故都。<br>既莫足与为美政兮，吾将从彭咸之所居。</p><h4 id="以上内容均来自褚宝增老师讲义"><a href="#以上内容均来自褚宝增老师讲义" class="headerlink" title="以上内容均来自褚宝增老师讲义"></a>以上内容均来自褚宝增老师讲义</h4></font></html>]]></content>
      
      
      <categories>
          
          <category> 古典文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 古典文学史 </tag>
            
            <tag> 诗经 </tag>
            
            <tag> 楚辞 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
